##
## プロバティのオーバーライド
##

    #
    # 上書きされたプロパティをどこで見つけられるか指定してください。アップデートはportal.propertiesまたはportal-bundle.propertiesに行われるべきではありませんが、portal-ext.propertiesに行ってください。
    #
    # デフォルトの読み取り順序は: portal.properties, portal-bundle.properties, portal-ext.properties, そして portal-setup-wizard.properties、です。
    #
    # Env: LIFERAY_INCLUDE_MINUS_AND_MINUS_OVERRIDE
    #
    include-and-override=portal-bundle.properties
    include-and-override=${liferay.home}/portal-bundle.properties
    include-and-override=portal-ext.properties
    include-and-override=${liferay.home}/portal-ext.properties
    include-and-override=portal-setup-wizard.properties
    include-and-override=${liferay.home}/portal-setup-wizard.properties

    #
    # 各ポータルのインスタンスは、そのオーバーライドされたプロパティファイルを、コンベンション通りにportal-companyWebld.propertiesに置くことができます。 この機能を作動させるには "company-id-properties" のシステム・プロパティをtrueにしてください。
    #
    # 作動準備:
    #
    #     java ... -Dcompany-id-properties=true
    #
    # 読み取り順序は次のように変更されます: portal.properties、そして portal-ext.properties、 次に portal-liferay.com.properties。
    #
    # 全てのプロパティが会社ごとに異なるバリューを持てるわけではありません。この 機能性はレガシーな理由で作られているだけです。より好まれる ポータル・インスタンスの設定は、コントロールパネルを通す方法です。
    #
    # Env: LIFERAY_INCLUDE_MINUS_AND_MINUS_OVERRIDE
    #
    include-and-override=portal-${easyconf:companyId}.properties
    include-and-override=${liferay.home}/portal-${easyconf:companyId}.properties

    #
    # 追加のプロパティファイルは、 "external-properties"をシステムのプロパティに設定することで使用できます。
    #
    # 新しいバージョンのLiferayにアップグレードする時には、レガシープロパティのバリューを維持するのが通常の方法です。 作動準備:
    #
    #     java ... -Dexternal-properties=portal-legacy-5.1.properties
    #
    # 読み取り順序は次のように変更されます: portal.properties、そして portal-ext.properties、 そして、portal-legacy-5.1.properties。
    #
    # Env: LIFERAY_INCLUDE_MINUS_AND_MINUS_OVERRIDE
    #
    include-and-override=${external-properties}
    include-and-override=${liferay.home}/${external-properties}

##
## Liferay ホーム
##

    #
    # Liferayのホームディレクトリを特定してください。
    #
    # Env: LIFERAY_LIFERAY_HOME
    #
    liferay.home=${resource.repositories.root}

    #
    # このプロパティは後方互換性に使えます。代わりに、プロパティ "liferay.home" を設定してください。
    #
    # Env: LIFERAY_RESOURCE_REPOSITORIES_ROOT
    #
    resource.repositories.root=${default.liferay.home}

##
## ポータルコンテキスト
##

    #
    # アプリケーションサーバーのプロトコルを用意してください。Luceneは、 ホストネームとポートが一度めのリクエストで見つからない時に、クラスターからインデックスをロードするのに使います。 このプロパティが参照するのはアプリケーションサーバーの プロトコルであり、プロパティ"web.server.protocol"に述べられているようにウェブサーバーのものではありません。
    #
    # Env: LIFERAY_PORTAL_INSTANCE_PROTOCOL
    #
    portal.instance.protocol=
    #portal.instance.protocol=http
    #portal.instance.protocol=https

    #
    # アプリケーションサーバーのホストネームとポートを、 "portal.instance.protocol" のプロパティで指定されたプロトコルのために設定してください。Luceneは、一度めのリクエストで ホストネームとポートが見つからない時に、クラスターからインデックスをロードするためにそれを使用します。 そのプロパティは必ず "portal.instance.protocol"のプロパティと一緒に使われなければならず、 そしてそれはアプリケーションサーバーの ホストネームとポートを参照します。 プロパティ "web.server.http.port" と "web.server.https.port"で指定されているウェブサーバーのポートではありません。
    #
    # Env: LIFERAY_PORTAL_INSTANCE_INET_SOCKET_ADDRESS
    #
    portal.instance.inet.socket.address=
    #portal.instance.inet.socket.address=localhost:8080
    #portal.instance.inet.socket.address=localhost:8443

    #
    # もしアプリケーションサーバーがプロキシの後ろで動いているなら、このプロパティを設定し、そして ポータル・サーブレットのコンテキスト・パスにプリフィクスを追加する必要があります。このプリフィクス はまた、レイアウト・テンプレート、ポートレット、テーマによって役立てられているスタティック・リソースに追加されるでしょう。
    #
    # Env: LIFERAY_PORTAL_PROXY_PATH
    #
    portal.proxy.path=

##
## スキーマ
##

    #
    # データベースが空の場合に自動的にテーブルを作成してデフォルトデータを入力するには、これをtrueとしてください。
    #
    # Env: LIFERAY_SCHEMA_RUN_ENABLED
    #
    schema.run.enabled=true

    #
    # Set this to true to automatically upgrade the database when a module's
    # build number has been increased since the last deployment.
    #
    # Env: LIFERAY_SCHEMA_MODULE_BUILD_AUTO_UPGRADE
    #
    schema.module.build.auto.upgrade=false

##
## アップグレード
##

    #
    # 次を実行するクラス名をコンマ区切りで入力してください。 com.liferay.portal.upgrade.UpgradeProcess.これらのクラスは、 古いデータを最新のバージョンに合わせてアップグレードするスタートアップ上で作動するでしょう。
    #
    # プロパティを適切に改ざんするためにコンマを取り消してください。 例えば、"upgrade.processes.6100" のプロパティは、 コンマが取り消されない限り "upgrade.processes.default" のプロパティを適切に参照しないでしょう。 ここを参照してください StartupHelper#getUpgradeProcessClassNames(String).
    #
    # Env: LIFERAY_UPGRADE_PROCESSES_MASTER
    #
    upgrade.processes.master=\
        com.liferay.portal.upgrade.UpgradeProcess_6_0_12_to_6_1_0\,\
        com.liferay.portal.upgrade.UpgradeProcess_6_1_1\,\
        com.liferay.portal.upgrade.UpgradeProcess_6_2_0\,\
        com.liferay.portal.upgrade.UpgradeProcess_7_0_0\,\
        com.liferay.portal.upgrade.UpgradeProcess_7_0_1\,\
        com.liferay.portal.upgrade.UpgradeProcess_7_0_3

    upgrade.processes.6012=${upgrade.processes.master}
    upgrade.processes.6100=${upgrade.processes.master}
    upgrade.processes.6101=${upgrade.processes.master}
    upgrade.processes.6102=${upgrade.processes.master}
    upgrade.processes.6110=${upgrade.processes.master}
    upgrade.processes.6120=${upgrade.processes.master}
    upgrade.processes.6130=${upgrade.processes.master}
    upgrade.processes.6200=${upgrade.processes.master}
    upgrade.processes.6201=${upgrade.processes.master}
    upgrade.processes.6202=${upgrade.processes.master}
    upgrade.processes.6203=${upgrade.processes.master}
    upgrade.processes.6204=${upgrade.processes.master}
    upgrade.processes.6205=${upgrade.processes.master}
    upgrade.processes.6210=${upgrade.processes.master}
    upgrade.processes.7000=${upgrade.processes.master}
    upgrade.processes.7001=${upgrade.processes.master}
    upgrade.processes.7002=${upgrade.processes.master}

    #
    # もしこのプロパティがクラスのリストを指定された場合、ポータルは その他の "upgrade.processes.*" プロパティ設定を一切考慮することなく、そのアップグレードプロセスリストを使用するでしょう。
    #
    # このプロパティは非推奨で、後方互換性でのみ提供されます。
    #
    # Env: LIFERAY_UPGRADE_PROCESSES
    #
    upgrade.processes=

    #
    # アップグレードの間データベースのトランザクションマネジメントを無効にするために、これをtrueにしてください。これは、アップグレードの処理を速めるオート・コミットを強制します。
    #
    # Env: LIFERAY_UPGRADE_DATABASE_TRANSACTIONS_DISABLED
    #
    upgrade.database.transactions.disabled=true

##
## 検証
##

    #
    # 次を実行するクラス名をコンマ区切りで入力してください。 com.liferay.portal.verify.VerifyProcess.これらのクラスは、 データベースに見つかるいかなる統合問題も検証して修正するためにスタートアップで作動するでしょう。 このことは、データベースに直接変更を加えるかもしれないということを認識しておいてください。
    #
    # Env: LIFERAY_VERIFY_PROCESSES
    #
    verify.processes=com.liferay.portal.verify.VerifyProcessSuite

    #
    # データベースに問題がないことを検証するための頻度を指定してください。
    #
    # 立証プロセスの定数:
    #     public static final int ALWAYS = -1;
    #     public static final int NEVER = 0;
    #     public static final int ONCE = 1;
    #
    # Env: LIFERAY_VERIFY_FREQUENCY
    #
    verify.frequency=1

    #
    # 立証の間にデータベースのトランザクションマネジメントを無効にするために、これをtrueにしてください。これは、立証処理を加速するオート・コミットを強制します。
    #
    # Env: LIFERAY_VERIFY_DATABASE_TRANSACTIONS_DISABLED
    #
    verify.database.transactions.disabled=true

    #
    # パッチレベルがportal-implとportal-kernel JARファイルをチェックするのを無効にするために、これをtrueにしてください。これは推奨される方法ではありません。混ざったパッチレベルは 予想外の反応をすることがあります。
    #
    # Env: LIFERAY_VERIFY_PATCH_LEVELS_DISABLED
    #
    verify.patch.levels.disabled=false

    #
    # いくつかの com.liferay.portal.verify.VerifyProcess タスクを同時に実行するのを指示するために、閾値を設定してください。それぞれの 立証プロセスの実行は、それが同時に遂行するものも左右します。
    #
    # Env: LIFERAY_VERIFY_PROCESS_CONCURRENCY_THRESHOLD
    #
    verify.process.concurrency.threshold=5

##
## オートデプロイ
##

    #
    # 次を実行するクラス名をコンマ区切りで入力してください。 com.liferay.portal.kernel.deploy.auto.AutoDeployListener.これらのクラスは WARsのオート・デプロイメントを処理するために使われます。
    #
    # Env: LIFERAY_AUTO_DEPLOY_LISTENERS
    #
    auto.deploy.listeners=\
        com.liferay.portal.deploy.auto.ExtAutoDeployListener,\
        com.liferay.portal.deploy.auto.HookAutoDeployListener,\
        com.liferay.portal.deploy.auto.LayoutTemplateAutoDeployListener,\
        com.liferay.portal.deploy.auto.ModuleAutoDeployListener,\
        com.liferay.portal.deploy.auto.PortletAutoDeployListener,\
        com.liferay.portal.deploy.auto.ThemeAutoDeployListener,\
        com.liferay.portal.deploy.auto.WebAutoDeployListener

    #
    # レイアウト・テンプレート、ポートレット、テーマのオートデプロイを有効にするには、これをtrueにしてください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_ENABLED
    #
    auto.deploy.enabled=true

    #
    # レイアウト・テンプレート、ポートレット、テーマオートデプロイにスキャンするにはディレクトリを用意してください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_DEPLOY_DIR
    #
    auto.deploy.deploy.dir=${liferay.home}/deploy

    #
    # オートデプロイされたWARsがコピーされたディレクトリを用意してください。そのアプリケーション サーバーまたはサーブレットのコンテイナーはそのディレクトリ上で聞かなければいけません。 異なるコンテイナーは異なるホット・デプロイメントのパスを有しています。例えば、トムキャットは "${catalina.base}/webapps" を聞き、JBossはその一方で "${jboss.home.dir}/deploy"を聞きます。アプリケーションサーバー特定のディレクトリを自動的に使用するために、空のディレクトリを用意してください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_DEFAULT_DEST_DIR
    # Env: LIFERAY_AUTO_DEPLOY_DEST_DIR
    # Env: LIFERAY_AUTO_DEPLOY_GLASSFISH_DEST_DIR
    # Env: LIFERAY_AUTO_DEPLOY_JBOSS_DEST_DIR
    # Env: LIFERAY_AUTO_DEPLOY_JBOSS_DEST_DIR_OPENBRACKET__NUMBER5__CLOSEBRACKET_
    # Env: LIFERAY_AUTO_DEPLOY_JETTY_DEST_DIR
    # Env: LIFERAY_AUTO_DEPLOY_JONAS_DEST_DIR
    # Env: LIFERAY_AUTO_DEPLOY_RESIN_DEST_DIR
    # Env: LIFERAY_AUTO_DEPLOY_TOMCAT_DEST_DIR
    # Env: LIFERAY_AUTO_DEPLOY_WEBLOGIC_DEST_DIR
    # Env: LIFERAY_AUTO_DEPLOY_WEBSPHERE_DEST_DIR
    #
    auto.deploy.dest.dir=
    auto.deploy.default.dest.dir=../webapps
    auto.deploy.glassfish.dest.dir=${com.sun.aas.instanceRoot}/autodeploy
    auto.deploy.jboss.dest.dir=${jboss.home.dir}/standalone/deployments
    auto.deploy.jboss.dest.dir[5]=${jboss.server.home.dir}/deploy
    auto.deploy.jetty.dest.dir=${jetty.home}/webapps
    auto.deploy.jonas.dest.dir=${jonas.base}/deploy
    auto.deploy.resin.dest.dir=${resin.home}/webapps
    auto.deploy.tomcat.dest.dir=${catalina.base}/webapps
    auto.deploy.weblogic.dest.dir=${env.DOMAIN_HOME}/autodeploy
    auto.deploy.websphere.dest.dir=${env.USER_INSTALL_ROOT}/wsadmin-deploy

    #
    # 変更のためにディレクトリをスキャンする頻度の間隔を、ミリ秒単位で設定します。
    #
    # Env: LIFERAY_AUTO_DEPLOY_INTERVAL
    #
    auto.deploy.interval=3000

    #
    # もしもデプロイされたWARsが分解された場合、これをtrueにしてください。もしもあなたのアプリケーションサーバーにデプロイしている大きなWARsと同時発生の問題があるなら、これを falseにしてください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_UNPACK_WAR
    #
    auto.deploy.unpack.war=true

    #
    # もしプラグインがコモンズの記録を自動的にコピーすべきなら、これをtrueにしてください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_COPY_COMMONS_LOGGING
    #
    auto.deploy.copy.commons.logging=true

    #
    # もしプラグインがコモンズの記録Log4jを自動的にコピーすべきなら、これをtrueにしてください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_COPY_LOG_NUMBER4_J
    #
    auto.deploy.copy.log4j=true

    #
    # もしあなたがデプロイヤーに、portlet.xmlを portlet-custome.xmlと名称変更させたい場合、これをtrueにしてください。これは、ポータルを WebSphere 6.1.x 上で 6.1.0.7より前のバージョンにデプロイしている時に必要になります。WebSphereのポートレット・コンテイナーは、Liferayがポートレットを処理しようとしているのと同じタイミングでポートレットを処理しようとするからです。
    #
    # Env: LIFERAY_AUTO_DEPLOY_CUSTOM_PORTLET_XML
    #
    auto.deploy.custom.portlet.xml=false

    #
    # もしあなたがJBossのPrefixDeploymentSorterを使っているなら、これを1にしてください。そうすれば WARネームの前に1が追加されます。例えば、もしtest-portlet.warと言うポートレットをデプロイするなら、1test-portlet.warへとデプロイされます。 これにより、JBossはこのポートレットを他のWARsロード後にロードすると認識します。 しかしながら、それは1をコンテキスト・パスから取り除くでしょう。
    #
    # Modify /server/default/conf/jboss-service.xml。 ここを参照してください org.jboss.deployment.scanner.PrefixDeploymentSorter.
    #
    # Env: LIFERAY_AUTO_DEPLOY_JBOSS_PREFIX
    #
    auto.deploy.jboss.prefix=

    #
    # JSR 88 のアプリケーショ展開を有効にするにはGlassfishを設定してください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_GLASSFISH_JEE_DEPLOYMENT_ENABLED
    # Env: LIFERAY_AUTO_DEPLOY_GLASSFISH_JEE_DF_CLASSNAME
    # Env: LIFERAY_AUTO_DEPLOY_GLASSFISH_JEE_DM_ID
    # Env: LIFERAY_AUTO_DEPLOY_GLASSFISH_JEE_DM_PASSWD
    # Env: LIFERAY_AUTO_DEPLOY_GLASSFISH_JEE_DM_USER
    #
    auto.deploy.glassfish.jee.deployment.enabled=false
    auto.deploy.glassfish.jee.dm.id=deployer:Sun:AppServer::localhost:4848
    auto.deploy.glassfish.jee.dm.user=admin
    auto.deploy.glassfish.jee.dm.passwd=adminadmin
    auto.deploy.glassfish.jee.df.classname=com.sun.enterprise.deployapi.SunDeploymentFactory

    #
    # このパスをTomcatの構成ディレクトリに設定してください。このプロパティは 分割されたWARsをオートデプロイするのに使われます。オートデプロイ・ディレクトリに見つけられるTomcatのコンテキストXMLファイルは、 Tomcatのコンフィギュレーション・ディレクトリにコピーされるでしょう。この コンテキストXMLファイルは、有効なWAR ディレクトリを指すdocBase属性を持たなければいけません。
    #
    # Env: LIFERAY_AUTO_DEPLOY_TOMCAT_CONF_DIR
    #
    auto.deploy.tomcat.conf.dir=../conf/Catalina/localhost

    #
    # Tomcatのグローバル・クラス・ローダーにパスを設定してください。このプロパティは、 スタンドアロン環境でTomcatによってのみ使用されます。
    #
    # Env: LIFERAY_AUTO_DEPLOY_TOMCAT_LIB_DIR
    #
    auto.deploy.tomcat.lib.dir=../common/lib/ext

    #
    # AdminApp.installのコマンドを使う時、オプションを設定してください。
    #
    # 参照 http://pic.dhe.ibm.com/infocenter/wasinfo/v8r0/topic/com.ibm.websphere.express.doc/info/exp/ae/rxml_adminapp.html#rxml_adminapp__cmd9 詳細の情報を
    #
    # Env: LIFERAY_AUTO_DEPLOY_WEBSPHERE_WSADMIN_APP_MANAGER_INSTALL_OPTIONS
    #
    auto.deploy.websphere.wsadmin.app.manager.install.options=-appname ${auto.deploy.websphere.wsadmin.app.name} -contextroot /${plugin.servlet.context.name} -usedefaultbindings

    #
    # AdminApp.listのコマンドを使う時、オプションを設定してください。
    #
    # 参照 http://pic.dhe.ibm.com/infocenter/wasinfo/v8r0/topic/com.ibm.websphere.express.doc/info/exp/ae/rxml_adminapp.html#rxml_adminapp__cmd9 詳細の情報を
    #
    # Env: LIFERAY_AUTO_DEPLOY_WEBSPHERE_WSADMIN_APP_MANAGER_LIST_OPTIONS
    #
    auto.deploy.websphere.wsadmin.app.manager.list.options=

    #
    # AdminApp.updateのコマンドを使う時、オプションを設定してください。
    #
    # 詳細はこちらを参照してください http://pic.dhe.ibm.com/infocenter/wasinfo/v8r0/topic/com.ibm.websphere.express.doc/info/exp/ae/rxml_adminapp.html#rxml_adminapp__cmd9
    #
    # Env: LIFERAY_AUTO_DEPLOY_WEBSPHERE_WSADMIN_APP_MANAGER_UPDATE_OPTIONS
    #
    auto.deploy.websphere.wsadmin.app.manager.update.options=-contents ${auto.deploy.dest.dir}/${plugin.servlet.context.name}.war -contextroot /${plugin.servlet.context.name} -operation update -usedefaultbindings

    #
    # WebSphere 6と7はWARをホットデプロイする能力をサポートしません。 ポータルは、このプロパティが設定されれば、ランタイムにホットデプロイされた プラグインをインストールするのにwsadminスクリプトを使おうとするでしょう。wsadminスクリプトは、WebSphereアプリケーション・マネージャーにクエリーするためにこの プロパティを使用します。この機能を無効にするために 、このプロパティを空のバリューに設定してください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_WEBSPHERE_WSADMIN_APP_MANAGER_QUERY
    #
    #auto.deploy.websphere.wsadmin.app.manager.query=
    auto.deploy.websphere.wsadmin.app.manager.query=type=ApplicationManager,process=server1,*

    #
    # デプロイされているWebSphereプロセスを特定するために、プラグイン・サーブレット・コンテキストネームに追加するサフィックスを用意してください。 プラグイン・サーブレット・コンテキストのネームのみを使用するために、これを空のままにしておいてください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_WEBSPHERE_WSADMIN_APP_NAME_SUFFIX
    #
    auto.deploy.websphere.wsadmin.app.name.suffix=

    #
    # wsadminコマンドを起動する時には、使用するプロパティのファイル名を設定してください。 wsadminコマンドの動作を変更するには、このプロパティをコネクションポートやプロトコルなどへ環境設定してください。
    #
    # Env: LIFERAY_AUTO_DEPLOY_WEBSPHERE_WSADMIN_PROPERTIES_FILE_NAME
    #
    auto.deploy.websphere.wsadmin.properties.file.name=

##
## ホットデプロイ
##

    hot.deploy.dependency.management.enabled=true

    #
    # 次を実行するクラス名をコンマ区切りで入力してください。 com.liferay.portal.kernel.deploy.hot.HotDeployListener.これらのクラスは ランタイム中にWARsのデプロイメントとアンデプロイメントを処理するのに使われます。
    #
    # リスナーは、このプロパティによって定められた順番で呼び出されます。 PluginPackageHotDeployListenerは常にいちばんに呼び出されなければいけません。 SpringHotDeployListenerは常に ServletContextListenerHotDeployListenerの前に呼び出されなければいけません。MessagingHotDeployListenerは 常に最後に呼び出されなければいけません。
    #
    # Env: LIFERAY_HOT_DEPLOY_LISTENERS
    #
    hot.deploy.listeners=\
        com.liferay.portal.deploy.hot.PluginPackageHotDeployListener,\
        \
        com.liferay.portal.deploy.hot.SpringHotDeployListener,\
        \
        com.liferay.portal.deploy.hot.ServletContextListenerHotDeployListener,\
        \
        com.liferay.portal.deploy.hot.ExtHotDeployListener,\
        com.liferay.portal.deploy.hot.HookHotDeployListener,\
        com.liferay.portal.deploy.hot.JSONWebServiceHotDeployListener,\
        com.liferay.portal.deploy.hot.LayoutTemplateHotDeployListener,\
        com.liferay.portal.deploy.hot.PortletHotDeployListener,\
        com.liferay.portal.deploy.hot.SocialHotDeployListener,\
        com.liferay.portal.deploy.hot.ThemeHotDeployListener,\
        com.liferay.portal.deploy.hot.ThemeLoaderHotDeployListener,\
        \
        com.liferay.portal.deploy.hot.OSGiHotDeployListener,\
        \
        com.liferay.portal.deploy.hot.MessagingHotDeployListener

##
## ホット・アンデプロイ
##

    #
    # アンデプロイ中のプラグインを有効にするにはこれをtrueにしてください。
    #
    # Env: LIFERAY_HOT_UNDEPLOY_ENABLED
    #
    hot.undeploy.enabled=true

    #
    # アンデプロイのプロセス完了 をどのくらい待機するのか、アンデプロイの間隔をミリ秒単位で設定してください。
    #
    # Env: LIFERAY_HOT_UNDEPLOY_INTERVAL
    #
    hot.undeploy.interval=0

    #
    # 新しいバージョンをデプロイする前にプラグインをアンデプロイするために、これをtrueにしてください。この プロパティは、"hot.undeploy.enabled"のプロパティが trueに設定されている場合にのみ使用されるでしょう。
    #
    # Env: LIFERAY_HOT_UNDEPLOY_ON_REDEPLOY
    #
    hot.undeploy.on.redeploy=false

##
## プラグイン
##

    #
    # コンマ区切りのサポートされたプラグイン種別を入力してください。
    #
    # Env: LIFERAY_PLUGIN_TYPES
    #
    plugin.types=portlet,theme,layout-template,hook,web

    #
    # \nのキャラクターで区切られたLiferayプラグイン・レポジトリのリストを入力してください。
    #
    # Env: LIFERAY_PLUGIN_REPOSITORIES_TRUSTED
    # Env: LIFERAY_PLUGIN_REPOSITORIES_UNTRUSTED
    #
    plugin.repositories.trusted=
    plugin.repositories.untrusted=

    #
    # 新しいバージョンのプラグインがインストールされた時に 画面通知が出るのを防ぐためには、このプロパティをfalseにしてください。
    #
    # Env: LIFERAY_PLUGIN_NOTIFICATIONS_ENABLED
    #
    plugin.notifications.enabled=false

    #
    # \nのキャラクターで区切られたプラグイン・パッケージのIDリストを入力してください。 新しいバージョンのこれらのプラグインが利用可能になった時、アドミニストレーターに通知されることはないでしょう。 IDはgroupIdかartifactIdのフォームをとっています。一つ前のキャラクターで始まるどのIDとも一致させるには、IDをアスタリスクで終わらせることもできます。
    #
    # Env: LIFERAY_PLUGIN_NOTIFICATIONS_PACKAGES_IGNORED
    #
    #plugin.notifications.packages.ignored=liferay/sample-jsp-portlet

##
## ポートレット
##

    #
    # ホットデプロイされた全ての ポートレットのためにデフォルトのバーチャル・パスを設定するにはこのプロパティを用意してください。詳細は、liferay-portlet-app_7_0_0.dtd 及び virtual-path エレメントを参照してください。
    #
    # Env: LIFERAY_PORTLET_VIRTUAL_PATH
    #
    portlet.virtual.path=

    #
    # portlet.xmlをポートレット・スキーマに対して認証するには、このプロパティをtrueにしてください。
    #
    # Env: LIFERAY_PORTLET_XML_VALIDATE
    #
    portlet.xml.validate=true

    #
    # liferay-portlet.xmlを "add-default-resource" エレメントを使ってtrueに環境設定したポートレットは、それらのポートレットを どのユーザーによってどのページにもダイナミックに追加さセルことを許します。これはページにダイナミックに追加される必要があるいくつかのポートレットには便利ですが (そして必要) 、セキュリティリスクをもたらすかもしれません。どのユーザーもそれが可能になるからです。
    #
    # この動作周辺のセキュリティチェックを追加するには、このプロパティをtrueにしてください。 trueになっていれば、ポートレットは適切なセキュリティ・トークンを有している場合にのみ、ダイナミックにページへと追加されることができます。 このセキュリティ・トークンは、一つのポートレットから他のポートレットへとポートレットURLを使用している時に自動的に 渡されます。
    #
    # このセキュリティチェックからいくつかのポートレットをホワイトリストするために、"portlet.add.default.resource.check.whitelist"プロパティを修正してください。
    #
    # このセキュリティチェックは、 "auth.token.impl"のプロパティにあるインプリメンテーションを利用します。
    #
    # Env: LIFERAY_PORTLET_ADD_DEFAULT_RESOURCE_CHECK_ENABLED
    #
    portlet.add.default.resource.check.enabled=true

    #
    # プロパティ "portlet.add.default.resource.check.enabled"にあるセキュリティチェック・セットを迂回するだろう、コンマで区切られたポートレットIDのリストを設定してください。
    #
    # Env: LIFERAY_PORTLET_ADD_DEFAULT_RESOURCE_CHECK_WHITELIST
    #
    portlet.add.default.resource.check.whitelist=com_liferay_login_web_portlet_LoginPortlet,com_liferay_portlet_configuration_web_portlet_PortletConfigurationPortlet,com_liferay_portlet_configuration_css_web_portlet_PortletConfigurationCSSPortlet,145,164,166,com_liferay_product_navigation_simulation_web_portlet_SimulationPortlet,com_liferay_staging_bar_web_portlet_StagingBarPortlet

    #
    # プロパティ"portlet.add.default.resource.check.enabled"にあるセキュリティチェック・セットを迂回するだろう、コンマで区切られたストラッツ・アクションのリストを入力してください。
    #
    # Env: LIFERAY_PORTLET_ADD_DEFAULT_RESOURCE_CHECK_WHITELIST_ACTIONS
    #
    portlet.add.default.resource.check.whitelist.actions=

    #
    # 初めのログイン (利用規約、アップデート用パスワード、パスワードリマインダなど) でのチェックを迂回するだろう、 コンマで区切られたポートレットIDのリストを設定してください。
    #
    # そのようなポートレットは、テーマにも埋め込むことができます。
    #
    # テーマにポートレットが埋め込まれていない時にもアタッカーはこれらのポートレットにPOSTをリクエストできるため、これは危険な行為であることを覚えておいてください。
    #
    # Env: LIFERAY_PORTLET_INTERRUPTED_REQUEST_WHITELIST
    #
    portlet.interrupted.request.whitelist=

    #
    # 初めのログイン (利用規約、アップデート用パスワード、パスワードリマインダなどのページ) でのチェックを迂回するだろう、コンマで区切られたストラッツ・アクションのリストを入力してください。
    #
    # Env: LIFERAY_PORTLET_INTERRUPTED_REQUEST_WHITELIST_ACTIONS
    #
    portlet.interrupted.request.whitelist.actions=

    #
    # ポートレット内のリソースに役立てられないパスを禁止するための正規表現を入力してください。
    #
    # Env: LIFERAY_PORTLET_RESOURCE_ID_BANNED_PATHS_REGEXP
    #
    portlet.resource.id.banned.paths.regexp=.*[\\\\/](?:META-INF|WEB-INF)[\\\\/].*

    #
    # Set this property to true to enable portlet session replication. This is
    # only needed when session replication is enabled on the application server.
    #
    # Env: LIFERAY_PORTLET_SESSION_REPLICATE_ENABLED
    #
    portlet.session.replicate.enabled=false

##
## ポートレット・コンフィギュレーション
##

    #
    # ポートレットIDを ポートレット・コンフィギュレーション・モデルの代わりとして表示するためにはこのプロパティをtrueにしてください。
    #
    # Env: LIFERAY_PORTLET_CONFIG_SHOW_PORTLET_ID
    #
    portlet.config.show.portlet.id=false

    #
    # ロードされるだろうポートレット・リソースのリストを入力してください。
    #
    # Env: LIFERAY_PORTLET_CONFIGS
    #
    portlet.configs=\
        /WEB-INF/portlet-custom.xml,\
        /WEB-INF/portlet-ext.xml,\
        /WEB-INF/liferay-portlet.xml,\
        /WEB-INF/liferay-portlet-ext.xml,\
        /WEB-INF/web.xml

##
## ポートレット・コンテイナー
##

    #
    # リクエスト属性からのポートレット・コミュニケーションを制限するにはこのプロパティをtrueにしてください。 属性そのプロパティがどのようにこのプロパティに影響するかを確認するには、 "layout.parallel.render.enable" のプロパティを参照してください。
    #
    # Env: LIFERAY_PORTLET_CONTAINER_RESTRICT
    #
    portlet.container.restrict=true

##
## ポートレット・コーディネーション
##

    #
    # このプロパティは、クロス・レイアウトされたポートレットURLがどのように呼び出されるかを制御します。 "render"に設定されている時、render URLのみが、異なるレイアウトをまたいでの呼び出しを許可されます。 "all"に設定されている時、全てのポートレット種別が呼び出しを許可されるでしょう。
    #
    # Env: LIFERAY_PORTLET_CROSS_LAYOUT_INVOCATION_MODE
    #
    portlet.cross.layout.invocation.mode=render

    #
    # どのようにイベントが配分されるかを指定するにはこのプロパティを設定してください。もしも値が "layout-set"なら、イベントはレイアウト・セットに含まれる全てのポートレットへ分配されるでしょう。 もしも値が"layout"なら、イベントはレイアウトに存在する全てのポートレットへ分配されるでしょう。
    #
    # Env: LIFERAY_PORTLET_EVENT_DISTRIBUTION
    #
    portlet.event.distribution=layout

    #
    # パブリックなレンダリング・パラメータがどのように分配されるかを指定するにはこのプロパティを設定してください。 もし値が"layout-set"なら、パブリックなレンダリング・パラメータは、レイアウトセットに存在する全てのポートレットに分配されるでしょう。 これは、プロパティ "layout.default.p_l_reset" がfalseに設定されている場合にのみ機能します。もし 値が"layout"なら、パブリックなレンダリング・パラメータは、レイアウトに存在する全てのポートレットに分配されるでしょう。
    #
    # Env: LIFERAY_PORTLET_PUBLIC_RENDER_PARAMETER_DISTRIBUTION
    #
    portlet.public.render.parameter.distribution=layout

##
## ポートレット・ディスピレイ・テンプレート
##

    #
    # 各言語種別のポートレット・ディスプレイ・テンプレートのために、デフォルト・エラー・コンテンツのロケーションを設定してください。
    #
    # Env: LIFERAY_PORTLET_DISPLAY_TEMPLATES_ERROR_OPENBRACKET_FTL_CLOSEBRACKET_
    # Env: LIFERAY_PORTLET_DISPLAY_TEMPLATES_ERROR_OPENBRACKET_VM_CLOSEBRACKET_
    #
    portlet.display.templates.error[ftl]=com/liferay/portlet/portletdisplaytemplate/dependencies/portlet_display_template_error.ftl
    portlet.display.templates.error[vm]=com/liferay/portlet/portletdisplaytemplate/dependencies/portlet_display_template_error.vm

    #
    # 各言語種別のポートレット・ディスプレイ・テンプレートのために、デフォルト・ヘルプ・コンテンツのロケーションを設定してください。
    #
    # Env: LIFERAY_PORTLET_DISPLAY_TEMPLATES_HELP_OPENBRACKET_FTL_CLOSEBRACKET_
    # Env: LIFERAY_PORTLET_DISPLAY_TEMPLATES_HELP_OPENBRACKET_VM_CLOSEBRACKET_
    #
    portlet.display.templates.help[ftl]=com/liferay/portlet/portletdisplaytemplate/dependencies/portlet_display_template_help.ftl
    portlet.display.templates.help[vm]=com/liferay/portlet/portletdisplaytemplate/dependencies/portlet_display_template_help.vm

##
## ポートレット・フィルター
##

    #
    # 全てのポートレットに適用されるだろうポートレット・フィルターのリストを入力してください。
    #
    # Env: LIFERAY_PORTLET_FILTERS_SYSTEM
    #
    portlet.filters.system=com.liferay.portlet.ScriptDataPortletFilter

##
## ポートレット・プリファレンス
##

    #
    # PortletPreferencesFactoryImplは、XMLコンテンツがキャッシュキーとして使用されるところでポートレット・プリフェレンスのXML コンテンツをキャッシュします。 ケースによってはコンテンツは非常に大きな容量になります(例1mb以上)。このプロパティは、 XMLコンテンツをその値以下で飲みキーとして使用する、閾値を定義します。 閾値より大きい時、SHA-1ハッシュが発生しますがそれは高くつく操作です。よってこのプロパティ は慎重に指定されるべきです。デフォルト値は1 kbです。
    #
    # Env: LIFERAY_PORTLET_PREFERENCES_CACHE_KEY_THRESHOLD_SIZE
    #
    portlet.preferences.cache.key.threshold.size=1024

    #
    # ポートレット・プリフェレンスがレンダリング・フェーズの間に保管されるのを許可するPLT.17.1の制限を解くには、このプロパティをfalseに設定してください。 このプロパティは、 レガシー・ポートレットを使った後方互換性のために存在します。
    #
    # Env: LIFERAY_PORTLET_PREFERENCES_STRICT_STORE
    #
    portlet.preferences.strict.store=true

##
## テーマ
##

    #
    # 生産のためにより速くテーマの統合されたCSSファイルをローディングするには、このプロパティをtrueに設定してください。
    #
    # 開発のためにデバッグをより簡単にするには、このプロパティをfalseに設定してください。また、プロパティ"theme.css.fast.load.check.request.parameter"もtrueに設定されている時、 URLパラメータ"css_fast_load"を "0" に変更すれば、速いローディングを無効にすることができます。
    #
    # Env: LIFERAY_THEME_CSS_FAST_LOAD
    #
    theme.css.fast.load=true

    #
    # URLパラメータ"css_fast_load"を無視するには、このプロパティをfalseに設定してください。 プロパティ"theme.css.fast.load"を参照してください。
    #
    # Env: LIFERAY_THEME_CSS_FAST_LOAD_CHECK_REQUEST_PARAMETER
    #
    theme.css.fast.load.check.request.parameter=false

    #
    # 生産のためにより速くテーマの統合された画像ファイルをローディングするには、このプロパティをtrueに設定してください。
    #
    # 開発のためにデバッグをより簡単にするには、このプロパティをfalseに設定してください。 また、プロパティ"theme.images.fast.load.check.request.parameter"もtrueに設定されている時、URLパラメータ"images_fast_load"を"0" に変更すれば、速いローディングを無効にすることができます。
    #
    # Env: LIFERAY_THEME_IMAGES_FAST_LOAD
    #
    theme.images.fast.load=true

    #
    # URLパラメータ"images_fast_load"を無視するには、このプロパティをfalseに設定してください。 プロパティ"theme.images.fast.load"を参照してください。
    #
    # Env: LIFERAY_THEME_IMAGES_FAST_LOAD_CHECK_REQUEST_PARAMETER
    #
    theme.images.fast.load.check.request.parameter=false

    #
    # ディレクトリに呼び出されたJSPをテーマ内に存在する異なるバージョンのJSPで上書きすることを許可するには、このプロパティをtrueに設定してください。
    #
    # Env: LIFERAY_THEME_JSP_OVERRIDE_ENABLED
    #
    theme.jsp.override.enabled=false

    #
    # テーマのショートカット・アイコンを設定してください。
    #
    # Env: LIFERAY_THEME_SHORTCUT_ICON
    #
    theme.shortcut.icon=favicon.ico

    #
    # このプロパティを設定してください。このプロパティを設定してください。 テーマ。詳細はliferay-look-and-feel_7_0_0.dtd 及び virtual-path element を参照してください。
    #
    # Env: LIFERAY_THEME_VIRTUAL_PATH
    #
    theme.virtual.path=

    #
    # LARからインポートされたテーマファイルがどこに保存されるのかを指定するには、これを絶対パスで設定してください。このパスは、 liferay-theme-loader.xmlに指定されたfile-storageパスを上書きするでしょう。
    #
    # Env: LIFERAY_THEME_LOADER_STORAGE_PATH
    #
    theme.loader.storage.path=

    #
    # テーマはLARフィアル経由でインポートできます。 インポートされたテーマが全てのインポートで新しいテーマIDを使用するべきなら、これをtrueに設定してください。これによって、 古いテーマのコピーがテーマ・ローダーのストレージ・パスに保存されるのを確実にできます。しかしながら 、これは使われなくなったたくさんのテーマがファイル システム内に残ることを意味します。この設定はfalseにしておくことが推奨されます。
    #
    # Env: LIFERAY_THEME_LOADER_NEW_THEME_ID_ON_IMPORT
    #
    theme.loader.new.theme.id.on.import=false

    #
    # ポートレットをデフォルトで装飾するには、これをtrueにしてください。
    #
    # Env: LIFERAY_THEME_PORTLET_DECORATE_DEFAULT
    #
    theme.portlet.decorate.default=true

    #
    # ポートレットのためにシェアするアイコンを露出するには、これをtrueにしてください。
    #
    # Env: LIFERAY_THEME_PORTLET_SHARING_DEFAULT
    #
    theme.portlet.sharing.default=false

##
## リソース・アクション
##

    #
    # クラス・パスから読まれるだろう、コンマで区切られたリソース・アクション・コンフィギュレーションのリストを入力してください。
    #
    # Env: LIFERAY_RESOURCE_ACTIONS_CONFIGS
    #
    resource.actions.configs=\
        META-INF/resource-actions/default.xml,\
        resource-actions/default.xml

    #
    # これは、 アプリケーションサーバーまたはサーブレットコンテイナー外部のサービス・ビルダーによってコールされる時のみにfalseにしておくべきです。
    #
    # Env: LIFERAY_RESOURCE_ACTIONS_READ_PORTLET_RESOURCES
    #
    resource.actions.read.portlet.resources=true

##
## モデル・ヒント
##

    #
    # コンマで区切られたモデル・ヒント・コンフィギュレーションのリストを入力してください。
    #
    # Env: LIFERAY_MODEL_HINTS_CONFIGS
    #
    model.hints.configs=\
        META-INF/portal-model-hints.xml,\
        classpath*:META-INF/ext-model-hints.xml,\
        classpath*:META-INF/portlet-model-hints.xml

##
## モデル・ツリー・パス
##

    #
    # ツリーの再構築中にリターンされたバッチサイズのデータベース・クエリー結果を設定してください。-1にした場合、結果はページングされることなく、より大きなメモリのフットプリントを生じるかもしれません。
    #
    # Env: LIFERAY_MODEL_TREE_REBUILD_QUERY_RESULTS_BATCH_SIZE
    #
    model.tree.rebuild.query.results.batch.size=10000

##
## スピリング
##

    #
    # コンマで区切られたSringコンフィギュレーションのリストを入力してください。これらはweb.xmlのcontextConfigLocationパラメータが指定すbeanの定義の後にローディングされるでしょう。
    #
    # Env: LIFERAY_SPRING_CONFIGS
    #
    spring.configs=\
        META-INF/base-spring.xml,\
        \
        META-INF/util-spring.xml,\
        \
        META-INF/executor-spring.xml,\
        META-INF/fabric-spring.xml,\
        \
        META-INF/messaging-core-spring.xml,\
        META-INF/messaging-misc-spring.xml,\
        \
        META-INF/asset-spring.xml,\
        META-INF/cluster-spring.xml,\
        META-INF/comment-spring.xml,\
        META-INF/company-provider-spring.xml,\
        META-INF/document-library-spring.xml,\
        META-INF/layout-spring.xml,\
        META-INF/message-boards-spring.xml,\
        META-INF/model-listener-spring.xml,\
        META-INF/notifications-spring.xml,\
        META-INF/poller-spring.xml,\
        META-INF/prefs-spring.xml,\
        META-INF/repository-spring.xml,\
        META-INF/search-spring.xml,\
        META-INF/security-spring.xml,\
        META-INF/service-configurator-spring.xml,\
        META-INF/social-spring.xml,\
        META-INF/workflow-spring.xml,\
        \
        META-INF/counter-spring.xml,\
        META-INF/mail-spring.xml,\
        META-INF/portal-spring.xml,\
        META-INF/portlet-container-spring.xml,\
        META-INF/staging-spring.xml,\
        META-INF/virtual-layouts-spring.xml,\
        \
        META-INF/monitoring-spring.xml,\
        \
        classpath*:META-INF/ext-spring.xml

    #
    # コンマで区切られたSringインフラ・コンフィギュレーションのリストを入力してください。 これらはモジュールのフレームワークが初期化された後、しかしスタートする前にローディングされるでしょう。
    #
    # Env: LIFERAY_SPRING_INFRASTRUCTURE_CONFIGS
    #
    spring.infrastructure.configs=\
        META-INF/hibernate-spring.xml,\
        \
        META-INF/counter-infrastructure-spring.xml,\
        \
        #META-INF/dynamic-data-source-spring.xml,\
        \
        META-INF/infrastructure-spring.xml

    #
    # コンマで区切られた、プラグインのためのSringコンフィギュレーションのリストを入力してください。service.properties内の ポートレット web.xmlと spring.configs にある portalContextConfigLocationパラメータの前に、これらはローディングされるでしょう。
    #
    # Env: LIFERAY_SPRING_PORTLET_CONFIGS
    #
    spring.portlet.configs=\
        com/liferay/portal/spring/context/xml/*-spring.xml

    #
    # Liferayデータ・ソースのためにbean名を設定してください。
    #
    # Env: LIFERAY_SPRING_HIBERNATE_DATA_SOURCE
    #
    spring.hibernate.data.source=liferayDataSource

    #
    # Liferayセッション・ファクトリーのためにbean名を設定してください。
    #
    # Env: LIFERAY_SPRING_HIBERNATE_SESSION_FACTORY
    #
    spring.hibernate.session.factory=&liferaySessionFactory

    #
    # 正しいトランザクション・マネージャーによってこのセッション・ファクトリーが所有されていることを立証するには、このプロパティをtrueにしてください。より良いパフォーマンスの立証を行わないようにするには、このプロパティをfalseにしてください。
    #
    # Env: LIFERAY_SPRING_HIBERNATE_SESSION_FACTORY_VERIFY
    #
    spring.hibernate.session.factory.verify=true

    #
    # PreloadClassloader によってプリロードされ、プラグインのHibernateセッション・ファクトリーに利用できることになるポータル・クラスのリストを設定してください。
    #
    # Env: LIFERAY_SPRING_HIBERNATE_CONFIGURATION_PROXY_FACTORY_PRELOAD_CLASSLOADER_CLASSES
    #
    spring.hibernate.configuration.proxy.factory.preload.classloader.classes=\
        javassist.util.proxy.MethodHandler,\
        javassist.util.proxy.ProxyObject,\
        javassist.util.proxy.RuntimeSupport,\
        org.hibernate.proxy.HibernateProxy,\
        org.hibernate.proxy.LazyInitializer

    #
    # PreloadClassloader によってプリロードされ、プラグインのHibernateセッション・ファクトリーに利用できることになるポータル・クラスのリストを設定してください。
    #
    # Env: LIFERAY_SPRING_HIBERNATE_SESSION_FACTORY_PRELOAD_CLASSLOADER_CLASSES
    #
    spring.hibernate.session.factory.preload.classloader.classes=\
        org.hibernate.engine.jdbc.WrappedBlob

    #
    # 手動でセッションを開いたり閉じたりするには、このプロパティをfalseにしてください。
    #
    # Env: LIFERAY_SPRING_HIBERNATE_SESSION_DELEGATED
    #
    spring.hibernate.session.delegated=true

##
## ハイバネート
##

    #
    # コンマで区切られたHibernateコンフィギュレーションのリストを入力してください。
    #
    # Env: LIFERAY_HIBERNATE_CONFIGS
    #
    hibernate.configs=\
        META-INF/mail-hbm.xml,\
        META-INF/portal-hbm.xml,\
        classpath*:META-INF/ext-hbm.xml

    #
    # Liferayは、 com.liferay.portal.spring.PortalHibernateConfiguration内のHibernate言語を自動的に検出するでしょう。自動検出された言語を手動で上書きするには、このプロパティを設定してください。
    #
    # Env: LIFERAY_HIBERNATE_DIALECT
    #
    #hibernate.dialect=

    #
    # Hibernateリリース・モードを設定してください。 何をすべきか確かでないなら、これは変更すべきではありません。 スプリングによって処理されるトランザクションには、デフォルト設定が最良です。これがどのように機能するか理解するには、クラス org.springframework.orm.hibernate3.LocalSessionFactoryBean の中にあるbuildSessionFactoryを参照し、 "on_close" と言うフレーズを検索してください。
    #
    # Env: LIFERAY_HIBERNATE_CONNECTION_RELEASE_UNDERLINE_MODE
    #
    #hibernate.connection.release_mode=on_close

    #
    # パフォーマンスの改善にはJDBCバッチサイズを設定してください。
    #
    # Hypersonicを使用しているなら、Hypersonicドライバでのバグを記録するためにワークアラウンドとしてバッチサイズを0に設定すべきです。 詳細な情報については、 LPS-5426を参照ください。
    #
    # Oracle 9iを使用しているなら、Oracleドライバでバグを停止するためのワークアラウンドとしてバッチサイズは必ず0に設定されなければいけません。 詳細な情報については、 LPS-1234を参照ください。
    #
    # Env: LIFERAY_HIBERNATE_JDBC_BATCH_UNDERLINE_SIZE
    #
    #hibernate.jdbc.batch_size=0
    hibernate.jdbc.batch_size=20

    #
    # その他の雑多なHybernateプロパティを設定してください。
    #
    # Env: LIFERAY_HIBERNATE_BYTECODE_USE_UNDERLINE_REFLECTION_UNDERLINE_OPTIMIZER
    # Env: LIFERAY_HIBERNATE_JDBC_USE_UNDERLINE_SCROLLABLE_UNDERLINE_RESULTSET
    # Env: LIFERAY_HIBERNATE_SHOW_UNDERLINE_SQL
    #
    hibernate.jdbc.use_scrollable_resultset=true
    hibernate.bytecode.use_reflection_optimizer=true
    hibernate.show_sql=false

    #
    # WebLogicとHibernate 3がうまく働くまで、クラシックなクエリー・ファクトリーを使用してください。詳細はhttp://www.hibernate.org/250.html#A23 を参照ください。
    #
    # Env: LIFERAY_HIBERNATE_QUERY_FACTORY_UNDERLINE_CLASS
    #
    hibernate.query.factory_class=org.hibernate.hql.classic.ClassicQueryTranslatorFactory

    #
    # Hibernateキャッシュ・モニタリングを有効にするには、このプロパティをtrueにしてください。参照 詳細の情報をLPS-2056
    #
    # Env: LIFERAY_HIBERNATE_GENERATE_UNDERLINE_STATISTICS
    #
    hibernate.generate_statistics=false

##
## JDBC
##

    #
    # JDBCデータ・ソースをルックアップするためのJNDI名を設定してください。もし何も設定されなければ 、ポータルは "jdbc.default."とプリフィクスされたプロパティを基に、JDBCデータ・ソースを作成しようと試みるでしょう。
    #
    # Env: LIFERAY_JDBC_DEFAULT_JNDI_NAME
    #
    #jdbc.default.jndi.name=jdbc/LiferayPool

    #
    # JDBCデータ・ソースを作成するために使用されるプロパティを設定します。これらのプロパティは、 "jdbc.default.jndi.name"プロパティが設定されていない場合にのみ読み取られます。
    #
    # Hypersonicと呼ばれるデフォルト環境が 設定されていますが生産目的に使用するのは推奨されていません。他のデータベースを使うためにプロパティを変更してください
    #
    # ポータルがリード・コールのために一つのデータベースを使用し、ライト・コールのためにもう一つのデータベース・クラスターを使用するようにするために、dynamic-data-source-spring.xml をプロパティ"spring.configs"へと追加してください。 コンベンションは、リード・コースを扱うために"jdbc.read."でプリフィクスされるプロパティと、ライト・コールを扱うために"jdbc.write"でプリフィクスされるその他のプロパティを作成するものです。 これらのデータ・ソースは、 プロパティ"jdbc.read.jndi.name" と"jdbc.write.jndi.name"を設定することによってJDNDIから作成されることができます。 これらの設定は、独立していますが、デフォルト設定を新たな値で上書きしたコピーであることに注意してください。
    #

    #
    # DB2
    #
    # Env: LIFERAY_JDBC_DEFAULT_DRIVER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_PASSWORD
    # Env: LIFERAY_JDBC_DEFAULT_URL
    # Env: LIFERAY_JDBC_DEFAULT_USERNAME
    #
    #jdbc.default.driverClassName=com.ibm.db2.jcc.DB2Driver
    #jdbc.default.url=jdbc:db2://localhost:50000/lportal:deferPrepares=false;fullyMaterializeInputStreams=true;fullyMaterializeLobData=true;progresssiveLocators=2;progressiveStreaming=2;
    #jdbc.default.username=db2admin
    #jdbc.default.password=lportal

    #
    # ハイパーソニック
    #
    # Env: LIFERAY_JDBC_DEFAULT_DRIVER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_PASSWORD
    # Env: LIFERAY_JDBC_DEFAULT_URL
    # Env: LIFERAY_JDBC_DEFAULT_USERNAME
    #
    jdbc.default.driverClassName=org.hsqldb.jdbc.JDBCDriver
    jdbc.default.url=jdbc:hsqldb:${liferay.home}/data/hypersonic/lportal;hsqldb.write_delay=false
    jdbc.default.username=sa
    jdbc.default.password=

    #
    # マリアDB
    #
    # Env: LIFERAY_JDBC_DEFAULT_DRIVER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_PASSWORD
    # Env: LIFERAY_JDBC_DEFAULT_URL
    # Env: LIFERAY_JDBC_DEFAULT_USERNAME
    #
    #jdbc.default.driverClassName=org.mariadb.jdbc.Driver
    #jdbc.default.url=jdbc:mariadb://localhost/lportal?useUnicode=true&characterEncoding=UTF-8&useFastDateParsing=false
    #jdbc.default.username=
    #jdbc.default.password=

    #
    # MySQL
    #
    # Env: LIFERAY_JDBC_DEFAULT_DRIVER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_PASSWORD
    # Env: LIFERAY_JDBC_DEFAULT_URL
    # Env: LIFERAY_JDBC_DEFAULT_USERNAME
    #
    #jdbc.default.driverClassName=com.mysql.jdbc.Driver
    #jdbc.default.url=jdbc:mysql://localhost/lportal?characterEncoding=UTF-8&dontTrackOpenResources=true&holdResultsOpenOverStatementClose=true&useFastDateParsing=false&useUnicode=true
    #jdbc.default.username=
    #jdbc.default.password=

    #
    # Oracle
    #
    # Env: LIFERAY_JDBC_DEFAULT_DRIVER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_PASSWORD
    # Env: LIFERAY_JDBC_DEFAULT_URL
    # Env: LIFERAY_JDBC_DEFAULT_USERNAME
    #
    #jdbc.default.driverClassName=oracle.jdbc.OracleDriver
    #jdbc.default.url=jdbc:oracle:thin:@localhost:1521:xe
    #jdbc.default.username=lportal
    #jdbc.default.password=lportal

    #
    # P6Spy
    #
    # Env: LIFERAY_JDBC_DEFAULT_DRIVER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_PASSWORD
    # Env: LIFERAY_JDBC_DEFAULT_URL
    # Env: LIFERAY_JDBC_DEFAULT_USERNAME
    #
    #jdbc.default.driverClassName=com.p6spy.engine.spy.P6SpyDriver
    #jdbc.default.url=jdbc:mysql://localhost/lportal?characterEncoding=UTF-8&dontTrackOpenResources=true&holdResultsOpenOverStatementClose=true&useFastDateParsing=false&useUnicode=true
    #jdbc.default.username=
    #jdbc.default.password=

    #
    # PostgreSQL
    #
    # Env: LIFERAY_JDBC_DEFAULT_DRIVER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_PASSWORD
    # Env: LIFERAY_JDBC_DEFAULT_URL
    # Env: LIFERAY_JDBC_DEFAULT_USERNAME
    #
    #jdbc.default.driverClassName=org.postgresql.Driver
    #jdbc.default.url=jdbc:postgresql://localhost:5432/lportal
    #jdbc.default.username=sa
    #jdbc.default.password=

    #
    # SQLサーバー
    #
    # Env: LIFERAY_JDBC_DEFAULT_DRIVER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_PASSWORD
    # Env: LIFERAY_JDBC_DEFAULT_URL
    # Env: LIFERAY_JDBC_DEFAULT_USERNAME
    #
    #jdbc.default.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
    #jdbc.default.url=jdbc:sqlserver://localhost;databaseName=lportal
    #jdbc.default.username=sa
    #jdbc.default.password=

    #
    # Sybase
    #
    # Env: LIFERAY_JDBC_DEFAULT_DRIVER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_PASSWORD
    # Env: LIFERAY_JDBC_DEFAULT_URL
    # Env: LIFERAY_JDBC_DEFAULT_USERNAME
    #
    #jdbc.default.driverClassName=com.sybase.jdbc4.jdbc.SybDriver
    #jdbc.default.url=jdbc:sybase:Tds:localhost:5000/lportal
    #jdbc.default.username=sa
    #jdbc.default.password=

    #
    # Liferayはコネクション・プーリングのためにC3PO、DBCP、HikariCP、またはTomcatを使用できます。 実際の導入例には com.liferay.portal.dao.jdbc.util.DataSourceFactoryBean を参照してください。 あなたのデプロイメント・シナリオに最も適したものを選ぶために、各プロバイダの長所と短所を理解しておくことが重要です。 プロバイダ特定のプロパティは、プロバイダへのディレクトリを伝えることもできます。例えば、プロパティ "jdbc.default.acquireIncrement" 　はC3POによって読み込まれ、プロパティ "jdbc.default.maxActive" はDBCPによって読み込まれます。
    #
    # デフォルトのプロバイダはHikariCPです。
    #
    # Env: LIFERAY_JDBC_DEFAULT_LIFERAY_POOL_PROVIDER
    #
    #jdbc.default.liferay.pool.provider=c3po
    #jdbc.default.liferay.pool.provider=dbcp
    jdbc.default.liferay.pool.provider=hikaricp
    #jdbc.default.liferay.pool.provider=tomcat

    #
    # Liferayがプロパティ "jdbc.default.liferay.pool.provider"内のC3POを使用するように設定されている場合、次のプロパティはC3POによって読み込まれます。データベース・コネクション設定のためにC3POによって使われる追加のフィールドリストについては、 http://www.mchange.com/projects/c3p0/index.html#configuration を参照してください。
    #
    # Env: LIFERAY_JDBC_DEFAULT_ACQUIRE_UPPERCASEI_NCREMENT
    # Env: LIFERAY_JDBC_DEFAULT_ACQUIRE_UPPERCASER_ETRY_UPPERCASEA_TTEMPTS
    # Env: LIFERAY_JDBC_DEFAULT_ACQUIRE_UPPERCASER_ETRY_UPPERCASED_ELAY
    # Env: LIFERAY_JDBC_DEFAULT_CONNECTION_UPPERCASEC_USTOMIZER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JDBC_DEFAULT_IDLE_UPPERCASEC_ONNECTION_UPPERCASET_EST_UPPERCASEP_ERIOD
    # Env: LIFERAY_JDBC_DEFAULT_INITIAL_UPPERCASEP_OOL_UPPERCASES_IZE
    # Env: LIFERAY_JDBC_DEFAULT_MAX_UPPERCASEI_DLE_UPPERCASET_IME
    # Env: LIFERAY_JDBC_DEFAULT_MAX_UPPERCASEP_OOL_UPPERCASES_IZE
    # Env: LIFERAY_JDBC_DEFAULT_MIN_UPPERCASEP_OOL_UPPERCASES_IZE
    # Env: LIFERAY_JDBC_DEFAULT_NUM_UPPERCASEH_ELPER_UPPERCASET_HREADS
    # Env: LIFERAY_JDBC_DEFAULT_TRANSACTION_UPPERCASEI_SOLATION
    #
    jdbc.default.acquireIncrement=5
    jdbc.default.acquireRetryAttempts=3
    jdbc.default.acquireRetryDelay=1000
    jdbc.default.connectionCustomizerClassName=com.liferay.portal.dao.jdbc.pool.c3p0.PortalConnectionCustomizer
    jdbc.default.idleConnectionTestPeriod=60
    jdbc.default.initialPoolSize=10
    jdbc.default.maxIdleTime=3600
    jdbc.default.maxPoolSize=100
    jdbc.default.minPoolSize=10
    jdbc.default.numHelperThreads=10
    #jdbc.default.transactionIsolation=1

    #
    # Liferayがプロパティ "jdbc.default.liferay.pool.provider"内のHikariCPを使用するように設定されている場合、次のプロパティはHikariCPによって読み込まれます。データベース・コネクションの設定にHikariCPが使う追加のフィールドリストは、 https://github.com/brettwooldridge/HikariCP を参照してください。
    #
    # HikariCPはまた、データベース設定のチューニングを推奨しています。データベースの詳細は https://github.com/brettwooldridge/HikariCP/wiki を参照してください。
    #
    # Env: LIFERAY_JDBC_DEFAULT_AUTO_UPPERCASEC_OMMIT
    # Env: LIFERAY_JDBC_DEFAULT_CONNECTION_UPPERCASET_EST_UPPERCASEQ_UERY
    # Env: LIFERAY_JDBC_DEFAULT_CONNECTION_UPPERCASET_IMEOUT
    # Env: LIFERAY_JDBC_DEFAULT_IDLE_UPPERCASET_IMEOUT
    # Env: LIFERAY_JDBC_DEFAULT_INITIALIZATION_UPPERCASEF_AIL_UPPERCASEF_AST
    # Env: LIFERAY_JDBC_DEFAULT_MAXIMUM_UPPERCASEP_OOL_UPPERCASES_IZE
    # Env: LIFERAY_JDBC_DEFAULT_MAX_UPPERCASEL_IFETIME
    # Env: LIFERAY_JDBC_DEFAULT_MINIMUM_UPPERCASEI_DLE
    # Env: LIFERAY_JDBC_DEFAULT_REGISTER_UPPERCASEM_BEANS
    #
    #jdbc.default.autoCommit=true
    #jdbc.default.connectionTestQuery=SELECT releaseId FROM Release_
    jdbc.default.connectionTimeout=30000
    jdbc.default.idleTimeout=600000
    #jdbc.default.initializationFailFast=false
    jdbc.default.maximumPoolSize=100
    jdbc.default.maxLifetime=0
    jdbc.default.minimumIdle=10
    jdbc.default.registerMbeans=true

    #
    # Liferayが プロパティ "jdbc.default.liferay.pool.provider"内でDBCPもしくはTomcat JDBCのコネクション・プールを使用するように設定されている場合、次のプロパティはDBCPとTomcat JDBCのコネクション・プール両方によって読み込まれるでしょう。データベース・コネクションの設定のためにDBCPまたはTomcat JDBCのコネクション・プールによって使用される追加フィールドのリストには、 http://commons.apache.org/dbcp/configuration.html と http://people.apache.org/~fhanik/jdbc-pool/jdbc-pool.html を参照してください。
    #
    # Env: LIFERAY_JDBC_DEFAULT_DEFAULT_UPPERCASET_RANSACTION_UPPERCASEI_SOLATION
    # Env: LIFERAY_JDBC_DEFAULT_LOG_UPPERCASEA_BANDONED
    # Env: LIFERAY_JDBC_DEFAULT_MAX_UPPERCASEA_CTIVE
    # Env: LIFERAY_JDBC_DEFAULT_MIN_UPPERCASEI_DLE
    # Env: LIFERAY_JDBC_DEFAULT_REMOVE_UPPERCASEA_BANDONED_UPPERCASET_IMEOUT
    # Env: LIFERAY_JDBC_DEFAULT_TEST_UPPERCASEW_HILE_UPPERCASEI_DLE
    # Env: LIFERAY_JDBC_DEFAULT_TIME_UPPERCASEB_ETWEEN_UPPERCASEE_VICTION_UPPERCASER_UNS_UPPERCASEM_ILLIS
    # Env: LIFERAY_JDBC_DEFAULT_VALIDATION_UPPERCASEQ_UERY
    #
    #jdbc.default.defaultTransactionIsolation=READ_UNCOMMITTED
    #jdbc.default.logAbandoned=true
    jdbc.default.maxActive=100
    jdbc.default.minIdle=10
    #jdbc.default.removeAbandonedTimeout=3600
    jdbc.default.testWhileIdle=true
    jdbc.default.timeBetweenEvictionRunsMillis=30000
    jdbc.default.validationQuery=SELECT releaseId FROM Release_

    #
    # Liferが"jdbc.default.liferay.pool.provider"内のTomcat JDBC コネクション・プールを使用するように設定されている場合、次のプロパティはTomcat JDBC コネクション・プールによって読み込まれます。データベース・コネクション設定のためにTomcat JDBCコネクション・プールによって使用される追加のフィールドリストについては http://people.apache.org/~fhanik/jdbc-pool/jdbc-pool.html を参照してください。
    #
    # Env: LIFERAY_JDBC_DEFAULT_FAIR_UPPERCASEQ_UEUE
    # Env: LIFERAY_JDBC_DEFAULT_JDBC_UPPERCASEI_NTERCEPTORS
    # Env: LIFERAY_JDBC_DEFAULT_JMX_UPPERCASEE_NABLED
    # Env: LIFERAY_JDBC_DEFAULT_USE_UPPERCASEE_QUALS
    #
    jdbc.default.jdbcInterceptors=org.apache.tomcat.jdbc.pool.interceptor.ConnectionState
    jdbc.default.jmxEnabled=true
    jdbc.default.fairQueue=true
    jdbc.default.useEquals=false

##
## カスタム SQL
##

    #
    # ワイルドカードからリテラル値へ自動的にエスケープするには、このプロパティをtrueにしてください。
    #
    # Env: LIFERAY_CUSTOM_SQL_AUTO_ESCAPE_WILDCARDS_ENABLED
    #
    custom.sql.auto.escape.wildcards.enabled=false

    #
    # コンマで区切られたSQLコンフィギュレーションのリストを入力してください。
    #
    # Env: LIFERAY_CUSTOM_SQL_CONFIGS
    #
    custom.sql.configs=custom-sql/default.xml

    #
    # データベースにはNULL IS NULLチェックを認識しないものがあります。特定のデータベースのためのプロパティは "custom.sql.function.isnull" と "custom.sql.function.isnotnull" を設定してください。
    #
    # これらのプロパティは手動で設定する必要がありません。 com.liferay.portal.spring.PortalHibernateConfiguration ですでに設定されているからです。 これらのプロパティが用意されているのは、 PortalHibernateConfiguration がまだ自動設定できないデータベースにどのように上書きができるかを閲覧できるようにするためです。
    #

    #
    # DB2
    #
    # Env: LIFERAY_CUSTOM_SQL_FUNCTION_ISNOTNULL
    # Env: LIFERAY_CUSTOM_SQL_FUNCTION_ISNULL
    #
    #custom.sql.function.isnull=CAST(? AS VARCHAR(32672)) IS NULL
    #custom.sql.function.isnotnull=CAST(? AS VARCHAR(32672)) IS NOT NULL

    #
    # MySQL (テスト用限定)
    #
    # Env: LIFERAY_CUSTOM_SQL_FUNCTION_ISNOTNULL
    # Env: LIFERAY_CUSTOM_SQL_FUNCTION_ISNULL
    #
    #custom.sql.function.isnull=IFNULL(?, '1') = '1'
    #custom.sql.function.isnotnull=IFNULL(?, '1') = '0'

    #
    # Sybase
    #
    # Env: LIFERAY_CUSTOM_SQL_FUNCTION_ISNOTNULL
    # Env: LIFERAY_CUSTOM_SQL_FUNCTION_ISNULL
    #
    #custom.sql.function.isnull=CONVERT(VARCHAR,?) IS NULL
    #custom.sql.function.isnotnull=CONVERT(VARCHAR,?) IS NOT NULL

##
## データベース
##

    #
    # スタートアップのデータベース・インデックスを更新するためには、このプロパティをtrueにしてください。これによって、必要なインデックス全てが追加され、不必要なインデックス全てが削除されることを確実にできます。 "LIFERAY_" または "IX_" に合致する名前のインデックスのみがアップデートされます。 あなたのカスタム・インデックスが不必要なインデックスとして削除されないようにするために、それらがLiferayのパターンに合致しないように確かめてください。
    #
    # Env: LIFERAY_DATABASE_INDEXES_UPDATE_ON_STARTUP
    #
    database.indexes.update.on.startup=false

    #
    # ORDER BYの条項にあるコラムの最大数を設定してください。
    #
    # Env: LIFERAY_DATABASE_ORDER_BY_MAX_COLUMNS_OPENBRACKET_SYBASE_CLOSEBRACKET_
    #
    database.order.by.max.columns[sybase]=31

    #
    # ストリングタイプのインデックスに最大の長さを設定してください。
    #
    # Env: LIFERAY_DATABASE_STRING_INDEX_MAX_LENGTH_OPENBRACKET_MARIADB_CLOSEBRACKET_
    # Env: LIFERAY_DATABASE_STRING_INDEX_MAX_LENGTH_OPENBRACKET_MYSQL_CLOSEBRACKET_
    #
    database.string.index.max.length[mariadb]=255
    database.string.index.max.length[mysql]=255

    #
    # ベンダー特定の設定にあるいずれかのデータベースを特定してください。
    #

    #
    # MySQL
    #

    #
    # MySQLエンジンの種別を設定してください。トランザクション・インテグリティを提供するため、InnoDBが推奨エンジンです。 トランザクションのまとまりを提供します。
    #
    # Env: LIFERAY_DATABASE_MYSQL_ENGINE
    #
    database.mysql.engine=InnoDB

##
## トランザクション
##

    #
    # カウンターサービスのための、トランザクション・アイソレーション・レベルを設定してください。 詳細情報は "transaction.isolation.portal" を参照してください。トランザクション・マネージャーがサポートする時、 好まれる値は8です。もしトランザクション・マネージャーが サポートしないなら、データベースのデフォルトのアイソレーション・レベルを使用するためにこれを-1にしてください。
    #
    # Env: LIFERAY_TRANSACTION_ISOLATION_COUNTER
    #
    transaction.isolation.counter=2

    #
    # "ポータル"トランザクション・アイソレーション・レベルを定義してください。この "ポータル"トランザクションのアイソレーション・レベルは、実際のアイソレーション・レベルではありません。これは 、このプロパティの設定によて決められる実際のアイソレーション・レベルの指標です。 データベースのデフォルトのアイソレーション・レベルを使用するには、値を-1 にしてください。"read committed"を使用するには、値を2にしてください。""read uncommitted"を使用するには、値を1にしてください。 "repeatable read"を使用するには、値を4にしてください。 "serializable"を使用するには、値を8にしてください。
    #
    # Env: LIFERAY_TRANSACTION_ISOLATION_PORTAL
    #
    transaction.isolation.portal=2

    #
    # トランザクションのマネージャーを設定してください。それは org.springframework.transaction.support.AbstractPlatformTransactionManager を拡張するクラスでなければいけません。
    #
    # アプリケーション・サーバ特定のトランザクション・マネージャーは、アプリケーション・サーバ特定のデータ・ソースをレバレッジすることで XAトランザクションを提供します。よって、追加のアプリケーション・サーバ特定のコンフィギュレーションが必要になります。 何をすべきか確かでないなら、これは変更すべきではありません。
    #
    # Env: LIFERAY_TRANSACTION_MANAGER_IMPL
    #
    transaction.manager.impl=com.liferay.portal.spring.hibernate.LastSessionRecorderHibernateTransactionManager
    #transaction.manager.impl=org.springframework.transaction.jta.JtaTransactionManager
    #transaction.manager.impl=org.springframework.transaction.jta.OC4JJtaTransactionManager
    #transaction.manager.impl=org.springframework.transaction.jta.WebLogicJtaTransactionManager
    #transaction.manager.impl=org.springframework.transaction.jta.WebSphereUowTransactionManager

    #
    # "transaction.manager.property.*" のパターンをフォローする追加のプロパティは、トランザクション・マネージャー上でセッターを呼び出すために読み込まれるでしょう。 例えば、 プロパティ "transaction.manager.property.globalRollbackOnParticipationFailure" は、トランザクション・マネージャー上で セッター "setGlobalRollbackOnParticipationFailure" を呼び出します。 利用可能なセッターのリストは、プロパティ "transaction.manager.impl" 内で特定されている履行次第です。
    #
    # JtaTransactionManager を使用する時、"allosCustomIsolationLevels"はtrueに設定されるべきです。
    #
    # Env: LIFERAY_TRANSACTION_MANAGER_PROPERTY_ALLOW_UPPERCASEC_USTOM_UPPERCASEI_SOLATION_UPPERCASEL_EVELS
    # Env: LIFERAY_TRANSACTION_MANAGER_PROPERTY_GLOBAL_UPPERCASER_OLLBACK_UPPERCASEO_N_UPPERCASEP_ARTICIPATION_UPPERCASEF_AILURE
    #
    #transaction.manager.property.allowCustomIsolationLevels=true
    transaction.manager.property.globalRollbackOnParticipationFailure=false

##
## トランザクショナル・キャッシュ
##

    #
    # トランザクショナル・キャッシュを有効にするには、このプロパティをtrueにしてください。有効にされると、トランザクションが成功した時にキャッシュへの変更が有効になります。 キャッシュは、トランザクションが後退復帰する時に、後退復帰します。
    #
    # Env: LIFERAY_TRANSACTIONAL_CACHE_ENABLE
    #
    transactional.cache.enable=true

    #
    # コンマで区切られたトランザクションのポータル・キャッシュ名リストを設定してください。"?" の字は、一文字のワイルドカードを表します。 "*" のシンボルは 複数文字のワイルドカードです。"%" は、字をエスケープするのに使われます。
    #
    # Env: LIFERAY_TRANSACTIONAL_CACHE_NAMES
    #
    transactional.cache.names=com.liferay.portal.kernel.dao.orm.EntityCache*,com.liferay.portal.kernel.dao.orm.FinderCache*,com.liferay.portal.kernel.service.persistence.impl.TableMapper-*,com.liferay.portlet.PortalPreferencesWrapperCacheUtil

##
## イーエイチ・キャッシュ
##

    #
    # インターナルキャッシュのためのEhcacheの設定ファイルのロケーションへのクラスパスを設定してください。 キャッシュ。クラスターされたキャッシュを有効にするために、プロパティ "ehcache.multi-vm.config.location" 内に特定されたファイルを編集してください。
    #
    # Env: LIFERAY_EHCACHE_MULTI_VM_CONFIG_LOCATION
    # Env: LIFERAY_EHCACHE_SINGLE_VM_CONFIG_LOCATION
    #
    ehcache.single.vm.config.location=/ehcache/liferay-single-vm.xml
    ehcache.multi.vm.config.location=/ehcache/liferay-multi-vm-clustered.xml

    #
    # Ehcacheぼブートストラップ・キャッシュ・ローダーを有効にするにはこれをtrueにしてください。
    #
    # Env: LIFERAY_EHCACHE_BOOTSTRAP_CACHE_LOADER_ENABLED
    #
    ehcache.bootstrap.cache.loader.enabled=false

    #
    # デフォルト・キャッシュのためのブートストラップ・ローダー・ プロパティを設定するには、コンマで区切られたキーバリューを入力してください。
    #
    # Env: LIFERAY_EHCACHE_BOOTSTRAP_CACHE_LOADER_PROPERTIES_DEFAULT
    #
    ehcache.bootstrap.cache.loader.properties.default=

    #
    # 特定のキャッシュのためのブートストラップ・ローダー・ プロパティを設定するには、コンマで区切られたキーバリューを入力してください。
    #
    # Env: LIFERAY_EHCACHE_BOOTSTRAP_CACHE_LOADER_PROPERTIES__null__OPENCURLYBRACE_SPECIFIC_CACHE_NAME_CLOSECURLYBRACE_
    #
    #ehcache.bootstrap.cache.loader.properties.${specific.cache.name}=

    #
    # デフォルト・キャッシュのためのクラスター・リンクの自己複製プロパティ
    #
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_DEFAULT
    #
    ehcache.cluster.link.replicator.properties.default=

    #
    # 特定のキャッシュのためのクラスター・リンクの自己複製プロパティを設定するには、コンマで区切られたキーバリューを入力してください。
    #
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_COM_LIFERAY_PORTAL_KERNEL_TEMPLATE__UPPERCASET_EMPLATE_UPPERCASER_ESOURCE_UPPERCASEL_OADER_CSS
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_COM_LIFERAY_PORTAL_KERNEL_TEMPLATE__UPPERCASET_EMPLATE_UPPERCASER_ESOURCE_UPPERCASEL_OADER_FTL
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_COM_LIFERAY_PORTAL_KERNEL_TEMPLATE__UPPERCASET_EMPLATE_UPPERCASER_ESOURCE_UPPERCASEL_OADER_VM
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_COM_LIFERAY_PORTAL_KERNEL_WEBSERVER__UPPERCASEW_EB_UPPERCASES_ERVER_UPPERCASES_ERVLET_UPPERCASET_OKEN
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_COM_LIFERAY_PORTAL_SECURITY_PERMISSION__UPPERCASEP_ERMISSION_UPPERCASEC_ACHE_UPPERCASEU_TIL_UNDERLINE__UPPERCASEP__UPPERCASEE__UPPERCASER__UPPERCASEM__UPPERCASEI__UPPERCASES__UPPERCASES__UPPERCASEI__UPPERCASEO__UPPERCASEN_
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_COM_LIFERAY_PORTAL_SECURITY_PERMISSION__UPPERCASEP_ERMISSION_UPPERCASEC_ACHE_UPPERCASEU_TIL_UNDERLINE__UPPERCASEP__UPPERCASEE__UPPERCASER__UPPERCASEM__UPPERCASEI__UPPERCASES__UPPERCASES__UPPERCASEI__UPPERCASEO__UPPERCASEN__UNDERLINE__UPPERCASEC__UPPERCASEH__UPPERCASEE__UPPERCASEC__UPPERCASEK__UPPERCASEE__UPPERCASER__UNDERLINE__UPPERCASEB__UPPERCASEA__UPPERCASEG_
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_COM_LIFERAY_PORTAL_SECURITY_PERMISSION__UPPERCASEP_ERMISSION_UPPERCASEC_ACHE_UPPERCASEU_TIL_UNDERLINE__UPPERCASER__UPPERCASEE__UPPERCASES__UPPERCASEO__UPPERCASEU__UPPERCASER__UPPERCASEC__UPPERCASEE__UNDERLINE__UPPERCASEB__UPPERCASEL__UPPERCASEO__UPPERCASEC__UPPERCASEK__UNDERLINE__UPPERCASEI__UPPERCASED__UPPERCASES__UNDERLINE__UPPERCASEB__UPPERCASEA__UPPERCASEG_
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_COM_LIFERAY_PORTAL_SERVLET_FILTERS_CACHE__UPPERCASEC_ACHE_UPPERCASEU_TIL
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES_COM_LIFERAY_PORTLET_SOCIAL_SERVICE_IMPL__UPPERCASES_OCIAL_UPPERCASEA_CTIVITY_UPPERCASES_ETTING_UPPERCASEL_OCAL_UPPERCASES_ERVICE_UPPERCASEI_MPL
    # Env: LIFERAY_EHCACHE_CLUSTER_LINK_REPLICATOR_PROPERTIES__null__OPENCURLYBRACE_SPECIFIC_CACHE_NAME_CLOSECURLYBRACE_
    #
    #ehcache.cluster.link.replicator.properties.${specific.cache.name}=
    ehcache.cluster.link.replicator.properties.com.liferay.portal.kernel.template.TemplateResourceLoader.css=replicatePuts=false
    ehcache.cluster.link.replicator.properties.com.liferay.portal.kernel.template.TemplateResourceLoader.ftl=replicatePuts=false
    ehcache.cluster.link.replicator.properties.com.liferay.portal.kernel.template.TemplateResourceLoader.vm=replicatePuts=false
    ehcache.cluster.link.replicator.properties.com.liferay.portal.security.permission.PermissionCacheUtil_PERMISSION=replicatePuts=false
    ehcache.cluster.link.replicator.properties.com.liferay.portal.security.permission.PermissionCacheUtil_PERMISSION_CHECKER_BAG=replicatePuts=false
    ehcache.cluster.link.replicator.properties.com.liferay.portal.security.permission.PermissionCacheUtil_RESOURCE_BLOCK_IDS_BAG=replicatePuts=false
    ehcache.cluster.link.replicator.properties.com.liferay.portal.servlet.filters.cache.CacheUtil=replicatePuts=false
    ehcache.cluster.link.replicator.properties.com.liferay.portal.kernel.webserver.WebServerServletToken=replicatePuts=false
    ehcache.cluster.link.replicator.properties.com.liferay.portlet.social.service.impl.SocialActivitySettingLocalServiceImpl=replicatePuts=false

    #
    # com.liferay.portal.cache.EhcachePortalCacheManager 内のJMX Integrationを有効にするには、こレをtrueにしてください。もし WebSphereの下でポータルがリロードされる必要がある場合は、これをfalseにしてください。
    #
    # Env: LIFERAY_EHCACHE_PORTAL_CACHE_MANAGER_JMX_ENABLED
    #
    ehcache.portal.cache.manager.jmx.enabled=true

    #
    # Ehcacheがブロックしているキャッシュを使えるようにするには、これをtrueにしてください。これは、 キャッシュ全体の代わりにキーをロックすることによってパフォーマンスを著しく向上させます。 欠点は、キャッシュが適切に使われなければスレッドがハングアップするかもしれないことです。 ミスをリターンするすべてのクエリーが直ちにキャッシュを入れるように確かめてください。そうでなければ クエリー上で同じキーによってブロックされたスレッドはハングアップし続けます。 EhcacheのBlockingCach で詳細情報を参照してください。 BlockingCacheについては、LiferayのBlockinPortalCache がより安全で速いパフォーマンスを生みます。
    #
    # トランザクション・キャッシュはトランザクション全体でキャッシュのポピュレーション・ビジビリティに影響するため、キャッシュのブロックとトランザクション・キャッシュは同時にはうまく機能しません。 トランザクション。トランザクション・キャッシュがオンの時、トランザクションのウィンドウタイムが短くない限り、キャッシュのブロックは何の役にも立たない可能性が高いでしょう。 キャッシュのブロックがオフの時、データベース全体でパフォーマンスをよくするにはキャッシュのブロックをオフにしたほうが良いでしょう。
    #
    # Env: LIFERAY_EHCACHE_BLOCKING_CACHE_ALLOWED
    #
    ehcache.blocking.cache.allowed=false

    ehcache.rmi.peer.listener.factory.class=com.liferay.portal.cache.ehcache.internal.rmi.LiferayRMICacheManagerPeerListenerFactory
    ehcache.rmi.peer.listener.factory.properties=
    ehcache.rmi.peer.provider.factory.class=net.sf.ehcache.distribution.RMICacheManagerPeerProviderFactory
    ehcache.rmi.peer.provider.factory.properties=peerDiscovery=automatic,multicastGroupAddress=${multicast.group.address["multi-vm"]},multicastGroupPort=${multicast.group.port["multi-vm"]},timeToLive=1

    #
    # ソケット・タイムアウトをミリ秒単位で設定してください。
    #
    # Env: LIFERAY_EHCACHE_SOCKET_SO_TIMEOUT
    #
    ehcache.socket.so.timeout=10000

    #
    # Ehcacheソケットのためのスタート・ポートを設定してください。ポートの数は、未使用のポートを見つけるまで1ずつ増え続けます。
    #
    # Env: LIFERAY_EHCACHE_SOCKET_START_PORT
    #
    ehcache.socket.start.port=32454

##
## ジャバスクリプト
##

    #
    # /html/common/themes/top_js.jsp に自動的にロードされるJavaScript ファイルのリストを設定してください。
    #
    # "javascript.barebone.files" と "javascript.everything.files" 内に2つのファイルリストが特定されています。
    #
    # 名前からうかがえるように、べアボーンのリストはほとんどの場合で必要とされるJavaScriptファイルの最小限のリストです。 everything リストはべアボーンの中にリストされていない全てを含みます。
    #
    # 2つのリストが存在するのはパフォーマンスのためで、認証されていないユーザーは通常利用可能なJavaScriptの全てを使わないせいです。 べアボーンリストがいつ使用され、everythingリストがいつ使用され、そしてそれらをカスタマイズするにはどうすればいいのかという詳細はプロパティ"javascript.barebone.enabled" を参照ください。
    #
    # ファイルのリストはまた、将来のパフォーマンス改善のために統合されパックされます。 詳細は"javascript.fast.load" のプロパティを参照ください。
    #

    #
    # べアボーンファイルのリストを指定してください。
    #
    # JavaScriptファイルのオーダーは重要です。
    #
    # Liferayのスクリプトは、初めのグループが2つめと3つめのグループによって使われるユーティリティ・スクリプトを示すようにグルーピングされています。 2つめのグルーピングは1つめのグループに頼るユーティリティ・クラスを意味しますが、 2つめまたは3つめのグループには 頼りません。3つめのグルーピングは、1つめと2つめのグループに頼るモジュールを意味します。
    #
    # Env: LIFERAY_JAVASCRIPT_BAREBONE_FILES
    #
    javascript.barebone.files=\
        \
        #
        # jQuery Core
        #
        \
        jquery/jquery.js,\
        \
        #
        # Bootstrap Core
        #
        \
        lexicon/bootstrap.js,\
        \
        #
        # Loader Core
        #
        \
        loader/config.js,\
        loader/loader.js,\
        \
        #
        # Lodash Core
        #
        \
        lodash/lodash.js,\
        \
        #
        # YUI Core
        #
        \
        aui/aui/aui.js,\
        aui/aui-base-html5-shiv/aui-base-html5-shiv.js,\
        \
        #
        # Liferay Module Definitions
        #
        \
        liferay/browser_selectors.js,\
        liferay/modules.js,\
        \
        #
        # AUI Sandbox
        #
        \
        liferay/aui_sandbox.js,\
        \
        #
        # Lexicon Modules
        #
        \
        lexicon/collapsible-search.js,\
        lexicon/side-navigation.js,\
        \
        #
        # jQuery Plugins
        #
        \
        jquery/fm.js,\
        jquery/form.js,\
        \
        #
        # Lodash Plugins
        #
        \
        lodash/util.js,\
        \
        #
        # svg4everybody
        #
        \
        misc/svg4everybody.js,\
        \
        #
        # YUI Modules
        #
        \
        aui/arraylist-add/arraylist-add.js,\
        aui/arraylist-filter/arraylist-filter.js,\
        aui/arraylist/arraylist.js,\
        aui/array-extras/array-extras.js,\
        aui/array-invoke/array-invoke.js,\
        aui/attribute-base/attribute-base.js,\
        aui/attribute-complex/attribute-complex.js,\
        aui/attribute-core/attribute-core.js,\
        aui/attribute-observable/attribute-observable.js,\
        aui/attribute-extras/attribute-extras.js,\
        aui/base-base/base-base.js,\
        aui/base-pluginhost/base-pluginhost.js,\
        aui/classnamemanager/classnamemanager.js,\
        aui/datatype-xml-format/datatype-xml-format.js,\
        aui/datatype-xml-parse/datatype-xml-parse.js,\
        aui/dom-base/dom-base.js,\
        aui/dom-core/dom-core.js,\
        aui/dom-screen/dom-screen.js,\
        aui/dom-style/dom-style.js,\
        aui/event-base/event-base.js,\
        aui/event-custom-base/event-custom-base.js,\
        aui/event-custom-complex/event-custom-complex.js,\
        aui/event-delegate/event-delegate.js,\
        aui/event-focus/event-focus.js,\
        aui/event-hover/event-hover.js,\
        aui/event-key/event-key.js,\
        aui/event-mouseenter/event-mouseenter.js,\
        aui/event-mousewheel/event-mousewheel.js,\
        aui/event-outside/event-outside.js,\
        aui/event-resize/event-resize.js,\
        aui/event-simulate/event-simulate.js,\
        aui/event-synthetic/event-synthetic.js,\
        aui/intl/intl.js,\
        aui/io-base/io-base.js,\
        aui/io-form/io-form.js,\
        aui/io-queue/io-queue.js,\
        aui/io-upload-iframe/io-upload-iframe.js,\
        aui/io-xdr/io-xdr.js,\
        aui/json-parse/json-parse.js,\
        aui/json-stringify/json-stringify.js,\
        aui/node-base/node-base.js,\
        aui/node-core/node-core.js,\
        aui/node-event-delegate/node-event-delegate.js,\
        aui/node-event-simulate/node-event-simulate.js,\
        aui/node-focusmanager/node-focusmanager.js,\
        aui/node-pluginhost/node-pluginhost.js,\
        aui/node-screen/node-screen.js,\
        aui/node-style/node-style.js,\
        aui/oop/oop.js,\
        aui/plugin/plugin.js,\
        aui/pluginhost-base/pluginhost-base.js,\
        aui/pluginhost-config/pluginhost-config.js,\
        aui/querystring-stringify-simple/querystring-stringify-simple.js,\
        aui/queue-promote/queue-promote.js,\
        aui/selector-css2/selector-css2.js,\
        aui/selector-css3/selector-css3.js,\
        aui/selector-native/selector-native.js,\
        aui/selector/selector.js,\
        aui/widget-base/widget-base.js,\
        aui/widget-htmlparser/widget-htmlparser.js,\
        aui/widget-skin/widget-skin.js,\
        aui/widget-uievents/widget-uievents.js,\
        aui/yui-throttle/yui-throttle.js,\
        \
        #
        # Alloy Core
        #
        \
        aui/aui-base-core/aui-base-core.js,\
        aui/aui-base-lang/aui-base-lang.js,\
        \
        #
        # Alloy Modules
        #
        \
        aui/aui-classnamemanager/aui-classnamemanager.js,\
        aui/aui-component/aui-component.js,\
        aui/aui-debounce/aui-debounce.js,\
        aui/aui-delayed-task-deprecated/aui-delayed-task-deprecated.js,\
        aui/aui-event-base/aui-event-base.js,\
        aui/aui-event-input/aui-event-input.js,\
        aui/aui-form-validator/aui-form-validator.js,\
        aui/aui-node-base/aui-node-base.js,\
        aui/aui-node-html5/aui-node-html5.js,\
        aui/aui-selector/aui-selector.js,\
        aui/aui-timer/aui-timer.js,\
        \
        #
        # Liferay Base Utility Scripts
        #
        \
        liferay/dependency.js,\
        liferay/dom_task_runner.js,\
        liferay/events.js,\
        liferay/language.js,\
        liferay/liferay.js,\
        liferay/util.js,\
        \
        #
        # Liferay Utility Scripts
        #
        \
        liferay/portal.js,\
        liferay/portlet.js,\
        liferay/workflow.js,\
        \
        #
        # Liferay Modules
        #
        \
        liferay/address.js,\
        liferay/form.js,\
        liferay/form_placeholders.js,\
        liferay/icon.js,\
        liferay/menu.js,\
        liferay/notice.js,\
        liferay/poller.js

    #
    # everythingファイル (べアボーンファイルのリストにないもの全て) のリスト を特定してください。
    #
    # Env: LIFERAY_JAVASCRIPT_EVERYTHING_FILES
    #
    javascript.everything.files=\
        \
        #
        # YUI Modules
        #
        \
        aui/async-queue/async-queue.js,\
        aui/base-build/base-build.js,\
        aui/cookie/cookie.js,\
        aui/event-touch/event-touch.js,\
        aui/overlay/overlay.js,\
        aui/querystring-stringify/querystring-stringify.js,\
        aui/widget-child/widget-child.js,\
        aui/widget-position-align/widget-position-align.js,\
        aui/widget-position-constrain/widget-position-constrain.js,\
        aui/widget-position/widget-position.js,\
        aui/widget-stack/widget-stack.js,\
        aui/widget-stdmod/widget-stdmod.js,\
        \
        #
        # Alloy Modules
        #
        \
        aui/aui-aria/aui-aria.js,\
        aui/aui-io-plugin-deprecated/aui-io-plugin-deprecated.js,\
        aui/aui-io-request/aui-io-request.js,\
        aui/aui-loading-mask-deprecated/aui-loading-mask-deprecated.js,\
        aui/aui-overlay-base-deprecated/aui-overlay-base-deprecated.js,\
        aui/aui-overlay-context-deprecated/aui-overlay-context-deprecated.js,\
        aui/aui-overlay-manager-deprecated/aui-overlay-manager-deprecated.js,\
        aui/aui-overlay-mask-deprecated/aui-overlay-mask-deprecated.js,\
        aui/aui-parse-content/aui-parse-content.js,\
        \
        #
        # Liferay Modules
        #
        \
        liferay/layout_exporter.js,\
        liferay/session.js,\
        \
        #
        # Deprecated JS
        #
        \
        liferay/deprecated.js

    #
    # プロパティ "javascript.everything.files" 内にリストされているJavaScript ファイルを常にロードするには、これをfalseにしてください。時々 "javascript.barebone.files" をロードし、そして時々 "javascript.everything.files" をロードするには、これをtrueにしてください。
    #
    # デフォルトのロジックは、認証されていないユーザーがべアボーンのJavascriptファイルを得て、認証ユーザーはべアボーンのJavascriptファイルとeverything Javascriptファイルの両方を得るように、com.liferay.portal.events.ServicePreAction 内にコーディングされています。
    #
    # Env: LIFERAY_JAVASCRIPT_BAREBONE_ENABLED
    #
    javascript.barebone.enabled=true

    #
    # プロパティ "javascript.barebone.files" または "javascript.everything.files" 内にリストされているパックされたバージョンのファイルをロードするには、このプロパティをtrueにしてください。
    #
    # 開発のためにデバッグをより簡単にするには、このプロパティをfalseに設定してください。 URLパラメータ "js_fast_load" を "0" にすることで、速いローディングを無効にできます。
    #
    # Env: LIFERAY_JAVASCRIPT_FAST_LOAD
    #
    javascript.fast.load=true

    #
    # JavaScript ミニファイヤのための有効なバンドルIDになっている、コンマで区切られたプロパティのリストを入力してください。
    #
    # Env: LIFERAY_JAVASCRIPT_BUNDLE_IDS
    #
    javascript.bundle.ids=\
        javascript.barebone.files,\
        javascript.everything.files

    #
    # "javascript.bundle.ids" 内にリストされている各プロパティのバンドル・ディレクトリを定義してください。
    #
    # Env: LIFERAY_JAVASCRIPT_BUNDLE_DIR_OPENBRACKET_JAVASCRIPT_BAREBONE_FILES_CLOSEBRACKET_
    # Env: LIFERAY_JAVASCRIPT_BUNDLE_DIR_OPENBRACKET_JAVASCRIPT_EVERYTHING_FILES_CLOSEBRACKET_
    #
    javascript.bundle.dir[javascript.barebone.files]=/
    javascript.bundle.dir[javascript.everything.files]=/

    #
    # "javascript.bundle.ids" 内にリストされているいずれかのプロパティを使ってバンドルの依存性を定義してください。
    #
    # Env: LIFERAY_JAVASCRIPT_BUNDLE_DEPENDENCIES_OPENBRACKET_JAVASCRIPT_EVERYTHING_FILES_CLOSEBRACKET_
    #
    javascript.bundle.dependencies[javascript.everything.files]=javascript.barebone.files

    #
    # JavaScriptのログ表示を有効にするにはこれをtrueにしてください。
    #
    # Env: LIFERAY_JAVASCRIPT_LOG_ENABLED
    #
    javascript.log.enabled=false

    #
    # Single Page アプリケーションのリンクを有効にするにはこれをtrueにしてください。
    #
    # Env: LIFERAY_JAVASCRIPT_SINGLE_PAGE_APPLICATION_ENABLED
    #
    javascript.single.page.application.enabled=true

    #
    # SPA ナビゲーションがタイムアウトしてスタンダード・ナビゲーションに戻る前の タイムアウトをミリ秒単位で設定してください。
    #
    # Env: LIFERAY_JAVASCRIPT_SINGLE_PAGE_APPLICATION_TIMEOUT
    #
    javascript.single.page.application.timeout=0

##
## SQL データ
##

    #
    # コモン・オブジェクトのためのSQL IDデフォルトを設定してください。
    #
    # Env: LIFERAY_SQL_DATA_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEC_OUNTRY_COUNTRY_ID
    # Env: LIFERAY_SQL_DATA_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEL_IST_UPPERCASET_YPE_ACCOUNT_ADDRESS
    # Env: LIFERAY_SQL_DATA_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEL_IST_UPPERCASET_YPE_ACCOUNT_EMAIL_ADDRESS
    # Env: LIFERAY_SQL_DATA_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEL_IST_UPPERCASET_YPE_CONTACT_EMAIL_ADDRESS
    # Env: LIFERAY_SQL_DATA_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEL_IST_UPPERCASET_YPE_ORGANIZATION_STATUS
    # Env: LIFERAY_SQL_DATA_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASER_EGION_REGION_ID
    #
    sql.data.com.liferay.portal.kernel.model.Country.country.id=19
    sql.data.com.liferay.portal.kernel.model.Region.region.id=5
    sql.data.com.liferay.portal.kernel.model.ListType.account.address=10000
    sql.data.com.liferay.portal.kernel.model.ListType.account.email.address=10004
    sql.data.com.liferay.portal.kernel.model.ListType.contact.email.address=11003
    sql.data.com.liferay.portal.kernel.model.ListType.organization.status=12017

    #
    # SQLトランザクションのクエリが取り込めるパラメータの最大数を設定してください。いくつかの データベースは2000以上のパラメータをクエリに置けません。
    #
    # Env: LIFERAY_SQL_DATA_MAX_PARAMETERS
    #
    sql.data.max.parameters=1000

##
## ウェブロジック
##

    #
    # Weblogic上で直列化できないラッピングのための戦略を設定してください。trueに設定した場合には、 ラッピングは全てのオブジェクトに適用されます。falseに設定した場合にはラッピングはされませんが、 Weblogicはリクエスト属性を直列化可能にしないように設定されなければいけません。
    #
    # Env: LIFERAY_WEBLOGIC_REQUEST_WRAP_NON_SERIALIZABLE
    #
    weblogic.request.wrap.non.serializable=true

##
## 会社
##

    company.default.name=Liferay

    #
    # これはデフォルトのウェブ IDを設定します。オムニアドミン ユーザーは、カンパニーに属している必要があります。
    #
    # Env: LIFERAY_COMPANY_DEFAULT_WEB_ID
    #
    company.default.web.id=liferay.com

    #
    # これにより、ポータルのデフォルトホームURLが設定されます。
    #
    # Env: LIFERAY_COMPANY_DEFAULT_HOME_URL
    #
    company.default.home.url=/web/guest

    #
    # これは system.properties 内で特定された "user.language" と"user.country" を上書きして、ポータルのデフォルトの場所を設定します。
    #
    # Env: LIFERAY_COMPANY_DEFAULT_LOCALE
    #
    #company.default.locale=en_US

    #
    # これにより、ポータルのデフォルトのタイムゾーンが設定されます。
    #
    # Env: LIFERAY_COMPANY_DEFAULT_TIME_ZONE
    #
    company.default.time.zone=UTC

    #
    # これは、会社レベルの暗号化アルゴリズム (プロパティ"passwords.encryption.algorithm" 経由で定義される パスワードの暗号化を除く) で使用されるのに適した暗号化アルゴリズムに設定してください。
    #
    # もしもこの設定を変更した場合には、望まれる暗号化キーサイズを設定するために、 "company.encryption.key.size" のプロパティも変更する必要があるかもしれません。
    #
    # 暗号化キーの詳細については、Java Cryptography Extensionのドキュメントを参照してください。
    #
    # Env: LIFERAY_COMPANY_ENCRYPTION_ALGORITHM
    #
    company.encryption.algorithm=AES
    #company.encryption.algorithm=Blowfish
    #company.encryption.algorithm=DES
    #company.encryption.algorithm=DESede

    #
    # これは、会社全体の暗号化キーで使用されるサイズを定義するために設定してください。もし この設定を変更した場合には、アルゴリズムがあなたのキーサイズをサポートすることを確認するために、 "company.encryption.algorithm" のプロパティも変更する必要があるかもしれません。 ほとんどの暗号化アルゴリズムの履行では、128以上の強度のキーサイズはサポートされません。 無制限の暗号書記がある場合のみ、それより強度のあるキーがサポートされます。
    #
    # 暗号化キーのサポートされるキーサイズについての詳細は、 Java Cryptography Extension のドキュメントを参照してください。
    #
    # Env: LIFERAY_COMPANY_ENCRYPTION_KEY_SIZE
    #
    #company.encryption.key.size=56
    company.encryption.key.size=128
    #company.encryption.key.size=168
    #company.encryption.key.size=256
    #company.encryption.key.size=384
    #company.encryption.key.size=512

    #
    # もし ログインが入力されず、ユーザーの認証がEメールアドレスに基づいた場合は、ログインのフィールドは会社のドメイン名によって入力されます。 この動作を無効にするには、これをfalseに設定してください。
    #
    # Env: LIFERAY_COMPANY_LOGIN_PREPOPULATE_DOMAIN
    #
    company.login.prepopulate.domain=true

    #
    # ポータルは、Eメールアドレス、スクリーンネーム、またはユーザーIDに基づいてユーザーを認証することができます。
    #
    # Env: LIFERAY_COMPANY_SECURITY_AUTH_TYPE
    #
    company.security.auth.type=emailAddress
    #company.security.auth.type=screenName
    #company.security.auth.type=userId

    #
    # ユーザーがhttpでログインするのを確かにするために、これをtrueにしてください。もしこれがtrueで、 ログイン後のHTTPセッションにあなたのクレデンシャルが含まれるようにしたい場合には、 プロパティ "session.enable.phishing.protection" はfalseに設定されていなければいけません。 そうでなければ、あなたのクレデンシャルはHTTPSセッションでのみ利用可能になります。
    #
    # Env: LIFERAY_COMPANY_SECURITY_AUTH_REQUIRES_HTTPS
    #
    company.security.auth.requires.https=false

    #
    # 自動的にポータルへログインするためにユーザーが"わたしを思い出して"機能を選択できるようにするには、これをtrueにしてください。
    #
    # Env: LIFERAY_COMPANY_SECURITY_AUTO_LOGIN
    #
    company.security.auto.login=true

    #
    # これを、"わたしを思い出して" 機能を有効にするブラウザークッキーの最大エイジ (秒単位で) に設定してください。 31536000の値は、1年間のライフスパンを意味します。 -1の値は、ブラウザーセッションのライフスパンを意味します。
    #
    # これを0に設定するよりは、"わたしを思い出して"機能を無効にするために "company.security.auto.login" のプロパティをfalseにしてください。
    #
    # Env: LIFERAY_COMPANY_SECURITY_AUTO_LOGIN_MAX_AGE
    #
    company.security.auto.login.max.age=31536000

    #
    # ユーザーに、以前入力された値に基づいた自動的なログインフォーム入力を許可するには、これをtrueにしてください。
    #
    # Env: LIFERAY_COMPANY_SECURITY_LOGIN_FORM_AUTOCOMPLETE
    #
    company.security.login.form.autocomplete=true

    #
    # ユーザーに、以前入力された値に基づいた自動的なリマインダー・クエリー・フォーム入力を許可するには、これをtrueにしてください。
    #
    # Env: LIFERAY_COMPANY_SECURITY_PASSWORD_REMINDER_QUERY_FORM_AUTOCOMPLETE
    #
    company.security.password.reminder.query.form.autocomplete=true

    #
    # ユーザーがポータルにパスワードの送付依頼をできるように許可するには、これをtrueにしてください。
    #
    # Env: LIFERAY_COMPANY_SECURITY_SEND_PASSWORD
    #
    company.security.send.password=true

    #
    # ユーザーがポータルにパスワードのリセット・リンクを送付依頼できるように許可するには、これをtrueにしてください。
    #
    # Env: LIFERAY_COMPANY_SECURITY_SEND_PASSWORD_RESET_LINK
    #
    company.security.send.password.reset.link=true

    #
    # ユーザーでない者がアカウントを作成してポータルに登録できるようにするには、これをtrueに設定してください。
    #
    # Env: LIFERAY_COMPANY_SECURITY_STRANGERS
    #
    company.security.strangers=true

    #
    # ユーザーがログイン・ポートレットの "アカウント作成" リンクをクリックする度に使用される、新しいアカウントを作るためのフレンドリーURLを入力してください。 これは、アカウント作成のためにカスタムのポートレットを提供することを許可します。デフォルトにより、 ポータルのアカウント作成はクローズされます。
    #
    # Env: LIFERAY_COMPANY_SECURITY_STRANGERS_URL
    #
    #company.security.strangers.url=/create_account

    #
    # 会社のメール・サフィックスに合致するEメールアドレスでユーザーでない者がアカウントを作成できるようにするには、これをtrueにしてください。このプロパティは、 "company.security.strangers" もtrueに設定されていない限り使われません。
    #
    # Env: LIFERAY_COMPANY_SECURITY_STRANGERS_WITH_MX
    #
    company.security.strangers.with.mx=true

    #
    # アカウントを作成するユーザーでない者がEメールを通して認証される必要がある場合、これをtrueにしてください。
    #
    # Env: LIFERAY_COMPANY_SECURITY_STRANGERS_VERIFY
    #
    company.security.strangers.verify=false

    #
    # サイト管理者が企業ロゴの代わりに自分のロゴを使えるのを許可するには、これをtrueにしてください。
    #
    # Env: LIFERAY_COMPANY_SECURITY_SITE_LOGO
    #
    company.security.site.logo=true

    #
    # 会社の認証設定フォームの一部として含まれるセクションのリストを入力してください。
    #
    # Env: LIFERAY_COMPANY_SETTINGS_FORM_AUTHENTICATION
    #
    company.settings.form.authentication=

##
## ユーザー
##

    #
    # ユーザーが削除できない場合は、これをfalseにしてください。
    #
    # Env: LIFERAY_USERS_DELETE
    #
    users.delete=true

    #
    # バリデーションで数値のスクリーン名作成を可能にしたい場合には、これをtrueに設定してください。
    #
    # このプロパティがtrueの時、全ての数字の値が許可されるわけではありません。 ユーザーのフレンドリーURLは、そのスクリーンネームです。 グループのフレンドリーURLは、そのグループIDです。それら2つは同じにすることができません。
    #
    # Env: LIFERAY_USERS_SCREEN_NAME_ALLOW_NUMERIC
    #
    users.screen.name.allow.numeric=false

    #
    # ユーザーが特定のユーザー・スクリーンネームを入力しても常に自動的にユーザー・スクリーンネームを作成するには、これをtrueにしてください。 もしもこれがtrueなら、プロパティ "company.security.auth.type" がスクリーンネームに設定されていても 、LDAPインポーターはEメールアドレスを使ってユーザーをフェッチしてくるでしょう。
    #
    # Env: LIFERAY_USERS_SCREEN_NAME_ALWAYS_AUTOGENERATE
    #
    users.screen.name.always.autogenerate=false

    #
    # com.liferay.portal.security.auth.ScreenNameGenerator を実装するクラス名を入力してください。このクラスは 、ユーザー・スクリーンネームを生成するために呼び出されます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_USERS_SCREEN_NAME_GENERATOR
    #
    #users.screen.name.generator=com.liferay.portal.security.auth.DefaultScreenNameGenerator

    #
    # スクリーンネームに許可される特殊文字のリストを入力してください。この プロパティは、デフォルトのスクリーンネーム・バリデーター・インプルメンテーションによって読み取られます。 カスタムの実装は、特殊文字を使ったスクリーンネームを説明するためにこのプロパティも使う必要があります。
    #
    # Env: LIFERAY_USERS_SCREEN_NAME_SPECIAL_CHARACTERS
    #
    users.screen.name.special.characters=-._

    #
    # com.liferay.portal.security.auth.ScreenNameValidator を実装するクラス名を入力してください。このクラスは 、ユーザー・スクリーンネームを認証するために呼び出されます。
    #
    # このプロパティは 、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_USERS_SCREEN_NAME_VALIDATOR
    #
    #users.screen.name.validator=com.liferay.portal.security.auth.DefaultScreenNameValidator
    #users.screen.name.validator=com.liferay.portal.security.auth.LiberalScreenNameValidator

    #
    # Eメール アドレスなしでユーザーを作成できるようにしたい場合は、これをfalseにしてください。Eメールアドレスは、プロパティ "users.email.address.auto.suffix" に基づいてユーザーに自動的に割り当てられます。
    #
    # Env: LIFERAY_USERS_EMAIL_ADDRESS_REQUIRED
    #
    users.email.address.required=true

    #
    # 自動的に作成されるEメールアドレスのサフィックスを設定してください。 Eメールアドレスを持たないユーザー向け このプロパティは、プロパティ "users.email.address.required" がfalseに設定されている場合には使われません。 自動生成されるEメールアドレスは、ユーザーIDに指定のサフィックスを加えたものです。
    #
    # Env: LIFERAY_USERS_EMAIL_ADDRESS_AUTO_SUFFIX
    #
    users.email.address.auto.suffix=@no-emailaddress.com

    #
    # com.liferay.portal.security.auth.EmailAddressGenerator を実装するクラス名を入力してください。 このクラスを呼び出して、Eメールアドレスを指定しないユーザーのEメールアドレスを生成します。 このクラスは、プロパティ "users.email.address.required" がfalseに設定されている場合にのみ使用されます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_USERS_EMAIL_ADDRESS_GENERATOR
    #
    #users.email.address.generator=com.liferay.portal.security.auth.DefaultEmailAddressGenerator

    #
    # com.liferay.portal.security.auth.EmailAddressValidatorを実装するクラス名を入力してください。 このクラスを呼び出して、ユーザーのEメールアドレスを有効化します。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_USERS_EMAIL_ADDRESS_VALIDATOR
    #
    #users.email.address.validator=com.liferay.portal.security.auth.DefaultEmailAddressValidator
    #users.email.address.validator=com.liferay.portal.security.auth.LiberalEmailAddressValidator

    #
    # com.liferay.portal.security.auth.FullNameGeneratorを実装するクラス名を入力してください。 このクラスをお呼び出して、ユーザーの名前、ミドルネーム、苗字からフルネームを生成します。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_USERS_FULL_NAME_GENERATOR
    #
    #users.full.name.generator=com.liferay.portal.security.auth.DefaultFullNameGenerator
    #users.full.name.generator=com.liferay.portal.security.auth.FamilyNameFirstFullNameGenerator

    #
    # com.liferay.portal.security.auth.FullNameValidatorを実装するクラス名を入力してください。 このクラスを呼び出して、ユーザーの名前、ミドルネーム、苗字を有効化します。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_USERS_FULL_NAME_VALIDATOR
    #
    #users.full.name.validator=com.liferay.portal.security.auth.DefaultFullNameValidator

    # ユーザーの最終ログイン情報を記録するには、これをtrueに設定してください。
    #
    users.update.last.login=true

    #
    # 許可されたユーザーのリストビューを設定してください。
    #
    # Env: LIFERAY_USERS_LIST_VIEWS
    #
    users.list.views=tree,flat-user-groups

    #
    # ユーザーのパスワードをリセットする際に使われるリマインダー クエリを有効にするには、これをtrueに設定してください。
    #
    # Env: LIFERAY_USERS_REMINDER_QUERIES_CUSTOM_QUESTION_ENABLED
    # Env: LIFERAY_USERS_REMINDER_QUERIES_ENABLED
    #
    users.reminder.queries.enabled=true
    users.reminder.queries.custom.question.enabled=true

    #
    # ユーザーがリマインダー クエリなしでパスワードのリセットをできるようにするには、これをfalseに設定してください。
    #
    # Env: LIFERAY_USERS_REMINDER_QUERIES_REQUIRED
    #
    users.reminder.queries.required=false

    #
    # リマインダー クエリに使われる質問リストを入力してください。
    #
    # Env: LIFERAY_USERS_REMINDER_QUERIES_QUESTIONS
    #
    users.reminder.queries.questions=what-is-your-primary-frequent-flyer-number,what-is-your-library-card-number,what-was-your-first-phone-number,what-was-your-first-teacher's-name,what-is-your-father's-middle-name

    #
    # インデックスからユーザーを検索するには、これをtrueに設定してください。 データベースからユーザーを検索するには、これをfalseに設定してください。 これをfalseに設定することで、Expandoアトリビュートに基づくユーザー検索の機能が無効になりますのでご注意ください。 この設定は、コントロールパネルからインデクサーを有効にしていない場合には使われません。
    #
    # Env: LIFERAY_USERS_SEARCH_WITH_INDEX
    #
    users.search.with.index=true

    #
    # プレフィックス "users.update.user.name." でプロパティを、さらにユーザー名が変更された際にアップデートされることになるクラス名で、サフィックスを設定してください。
    #
    # Env: LIFERAY_USERS_UPDATE_USER_NAME_COM_LIFERAY_MESSAGE_BOARDS_KERNEL_MODEL__UPPERCASEM__UPPERCASEB__UPPERCASEM_ESSAGE
    #
    users.update.user.name.com.liferay.message.boards.kernel.model.MBMessage=true

    #
    # ユーザーをCSVファイルにエクスポートする際に含まれるユーザー アトリビュートのリストを入力してください。 アトリビュート名にプレフィックス "expando:" を追加することで、カスタム欄を含めることができます。
    #
    # Env: LIFERAY_USERS_EXPORT_CSV_FIELDS
    #
    users.export.csv.fields=fullName,emailAddress

    #
    # ユーザーのプロフィールページにフレンドリーURLを設定してください。 何も指定されていない場合には、ポータルは実行時にユーザーの最初のパブリックページを照会します。
    #
    # 次の変数が使用できます: ${liferay:screenName} および ${liferay:userId}。
    #
    # Env: LIFERAY_USERS_PROFILE_FRIENDLY_URL
    #
    #users.profile.friendly.url=/web/${liferay:screenName}/profile

    #
    # ユーザーのアドミニストレーション検索コンテナで、各ユーザーに表示される組織、ロール、ユーザーグループの最大数を設定してください。
    #
    # Env: LIFERAY_USERS_ADMIN_ORGANIZATION_COLUMN_LIMIT
    # Env: LIFERAY_USERS_ADMIN_ROLE_COLUMN_LIMIT
    # Env: LIFERAY_USERS_ADMIN_USER_GROUP_COLUMN_LIMIT
    #
    users.admin.organization.column.limit=50
    users.admin.role.column.limit=50
    users.admin.user.group.column.limit=50

##
## グループとロール
##

    #
    # 標準のシステムグループ以外に存在するコンマ区切りのシステムグループのリストを入力してください。 サーバーを起動すると、ポータルはすべてのシステムグループが間違いなく存在することを確認します。 欠落しているシステムグループがあれば、ポータルが作成します。
    #
    # Env: LIFERAY_SYSTEM_GROUPS
    #
    system.groups=

    #
    # 標準のシステムロール以外に存在するコンマ区切りのシステムロール名のリストを入力してください。 サーバーを起動すると、ポータルはすべてのシステムロールが間違いなく存在することを確認します。 欠落しているシステムロールがあれば、ポータルが作成します。
    #
    # 標準のシステムロールは次の通りです: アドミニストレータ、ゲスト、パワーユーザー、ユーザー。 これらロールの削除または名称変更はできません。
    #
    # Env: LIFERAY_SYSTEM_ROLES
    #
    system.roles=

    #
    # アドミニストレータのシステムロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_ROLE__UPPERCASEA_DMINISTRATOR_DESCRIPTION
    #
    system.role.Administrator.description=Administrators are super users who can do anything.

    #
    # ゲストのシステムロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_ROLE__UPPERCASEG_UEST_DESCRIPTION
    #
    system.role.Guest.description=Unauthenticated users always have this role.

    #
    # オーナーのシステムロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_ROLE__UPPERCASEO_WNER_DESCRIPTION
    #
    system.role.Owner.description=This is an implied role with respect to the objects users create.

    #
    # パワーユーザーのシステムロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_ROLE__UPPERCASEP_OWER__UPPERCASEU_SER_DESCRIPTION
    #
    system.role.Power.User.description=Power Users have their own personal site.

    #
    # ユーザーのシステムロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_ROLE__UPPERCASEU_SER_DESCRIPTION
    #
    system.role.User.description=Authenticated users should be assigned this role.

    #
    # 標準のシステム組織ロール以外に存在するコンマ区切りのシステム組織ロール名のリストを入力してください。 サーバーを起動すると、ポータルはすべてのシステム組織ロールが間違いなく存在することを確認します。欠落しているシステム組織ロールがあれば、ポータルが作成します。
    #
    # 標準のシステム組織ロールは次の通りです: 組織アドミニストレータ、組織メンバー、組織オーナー。これらロールの削除または名称変更はできません。
    #
    # Env: LIFERAY_SYSTEM_ORGANIZATION_ROLES
    #
    system.organization.roles=

    #
    # 組織アドミニストレータのシステム組織ロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_ORGANIZATION_ROLE__UPPERCASEO_RGANIZATION__UPPERCASEA_DMINISTRATOR_DESCRIPTION
    #
    system.organization.role.Organization.Administrator.description=Organization Administrators are super users of their organization but cannot make other users into Organization Administrators.

    #
    # 組織メンバーのシステム組織ロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_ORGANIZATION_ROLE__UPPERCASEO_RGANIZATION__UPPERCASEU_SER_DESCRIPTION
    #
    system.organization.role.Organization.User.description=All users who belong to an organization have this role within that organization.

    #
    # 組織オーナーのシステム組織ロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_ORGANIZATION_ROLE__UPPERCASEO_RGANIZATION__UPPERCASEO_WNER_DESCRIPTION
    #
    system.organization.role.Organization.Owner.description=Organization Owners are super users of their organization and can assign organization roles to users.

    #
    # 標準のシステムサイトロール以外に存在するコンマ区切りのシステムサイトロール名のリストを入力してください。 サーバーを起動すると、ポータルはすべてのシステムサイトロールが間違いなく存在することを確認します。 欠落しているシステムサイトロールがあれば、ポータルが作成します。
    #
    # 標準のシステムサイトロールは次の通りです: サイトアドミニストレータ、サイトメンバー、サイトオーナー。これらロールの削除または名称変更はできません。
    #
    # Env: LIFERAY_SYSTEM_SITE_ROLES
    #
    system.site.roles=

    #
    # サイトアドミニストレータのシステムサイトロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_SITE_ROLE__UPPERCASES_ITE__UPPERCASEA_DMINISTRATOR_DESCRIPTION
    #
    system.site.role.Site.Administrator.description=Site Administrators are super users of their site but cannot make other users into Site Administrators.

    #
    # サイトメンバーのシステムサイトロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_SITE_ROLE__UPPERCASES_ITE__UPPERCASEM_EMBER_DESCRIPTION
    #
    system.site.role.Site.Member.description=All users who belong to a site have this role within that site.

    #
    # サイトオーナーのシステムサイトロールの詳細を設定してください。
    #
    # Env: LIFERAY_SYSTEM_SITE_ROLE__UPPERCASES_ITE__UPPERCASEO_WNER_DESCRIPTION
    #
    system.site.role.Site.Owner.description=Site Owners are super users of their site and can assign site roles to users.

    #
    # オムニアドミニ ユーザーは、以下のポータルのコア機能を管理することができます: gc、シャットダウンなど。オムニアドミニ ユーザーは、デフォルト カンパニーに属している必要があります。
    #
    # 1つのアプリケーションサーバーに複数のポータル インスタンスを展開できますが、すべてのアドミニストレータがこのコア機能へのアクセスをできるようにすべきではありません。オムニアドミニ ユーザーとなるユーザーのIDを入力してください。
    #
    # 正しいカンパニーに属し、アドミニストレータのロールを持つユーザーにポータルのコア機能の管理が許可されている場合には、この欄は空白のままにしてください。
    #
    # Env: LIFERAY_OMNIADMIN_USERS
    #
    omniadmin.users=

    #
    # すべてのユーザーが利用規約に同意する必要がある場合には、これをtrueに設定してください。
    #
    # Env: LIFERAY_TERMS_OF_USE_REQUIRED
    #
    terms.of.use.required=true

    #
    # データベース層でのフィルタリングをデリゲートする複雑なSQLクエリのトリガーとなるグループクラス名のリストを入力してください。 グループクラス名は、Group_ tableにあるclassNameと一致します。 単純なSQLクエリ後のアプリケーション層のメモリでのフィルタリングで、パフォーマンスが大幅に向上する可能性があります。
    #
    # Env: LIFERAY_GROUPS_COMPLEX_SQL_CLASS_NAMES
    #
    groups.complex.sql.class.names=com.liferay.portal.kernel.model.User

    #
    # 独自の基準を使ってのロール検索を希望する場合には、ロールのサブタイプを指定してください。
    #
    # Env: LIFERAY_ROLES_ORGANIZATION_SUBTYPES
    # Env: LIFERAY_ROLES_REGULAR_SUBTYPES
    # Env: LIFERAY_ROLES_SITE_SUBTYPES
    #
    roles.site.subtypes=
    roles.organization.subtypes=
    roles.regular.subtypes=

    #
    # バリデーションで数値名のロール作成を可能にしたい場合には、これをtrueに設定してください。
    #
    # Env: LIFERAY_ROLES_NAME_ALLOW_NUMERIC
    #
    roles.name.allow.numeric=false

##
## 組織
##

    organizations.types=organization

    organizations.rootable[organization]=true
    organizations.children.types[organization]=organization
    organizations.country.enabled[organization]=true
    organizations.country.required[organization]=false

    #
    # 組織のアドミニストレータすべてが、その組織にあらゆるユーザーを割り当てられるようにしたい場合には、このプロパティをfalseに設定してください。 デフォルトでは、アドミニストレータが管理可能な組織およびサブ組織のユーザーのみを割り当てることができます。
    #
    # Env: LIFERAY_ORGANIZATIONS_ASSIGNMENT_STRICT
    #
    organizations.assignment.strict=true

    #
    # ユーザーが明示的に割り当てられている組織のみのメンバーにしたい場合には、このプロパティをtrueに設定してください。 デフォルトでは、ユーザーは暗黙的に所属組織の上位組織のメンバーともなります。 例えば、ユーザーがLiferay Spainに属する場合、そのユーザーは暗黙的に上位組織であるLiferay EuropeおよびLiferay Globalのメンバーとなり、それらの非公開ページにアクセスすることができます。
    #
    # Env: LIFERAY_ORGANIZATIONS_MEMBERSHIP_STRICT
    #
    organizations.membership.strict=false

    #
    # インデックスから組織を検索するには、これをtrueに設定してください。 データベースから組織を検索するには、これをfalseに設定してください。 これをfalseに設定することで、Expandoアトリビュートに基づく組織検索の機能が無効になりますのでご注意ください。 この設定は、コントロールパネルからインデクサーを有効にしていない場合には使われません。
    #
    # Env: LIFERAY_ORGANIZATIONS_SEARCH_WITH_INDEX
    #
    organizations.search.with.index=true

##
## ユーザーグループ
##

    #
    # バリデーションで数値名のグループ作成を可能にしたい場合には、これをtrueに設定してください。
    #
    # Env: LIFERAY_USER_GROUPS_NAME_ALLOW_NUMERIC
    #
    user.groups.name.allow.numeric=false

    #
    # ユーザーグループ ページをユーザーの個人サイトにコピーする従来の動作を有効にするには、これをtrueに設定してください。 この動作は推奨されず廃止予定であり、今後のリリースでは別のスキームに置き換わる可能性があります。
    #
    # Env: LIFERAY_USER_GROUPS_COPY_LAYOUTS_TO_USER_PERSONAL_SITE
    #
    user.groups.copy.layouts.to.user.personal.site=false

    #
    # インデックスからユーザーグループを検索するには、これをtrueに設定してください。 データベースからユーザーグループを検索するには、これをfalseに設定してください。 これをfalseに設定することで、Expandoアトリビュートに基づくユーザーグループ検索の機能が無効になりますのでご注意ください。 この設定は、コントロールパネルからインデクサーを有効にしていない場合には使われません。
    #
    # Env: LIFERAY_USER_GROUPS_SEARCH_WITH_INDEX
    #
    user.groups.search.with.index=true

##
## メンバーシップのポリシー
##

    #
    # 毎回サーバーが起動されるたびに、あるいはメンバーシップ ポリシーに関する注意が展開された際に、メンバーシップ ポリシーの確認を行うには、これをtrueに設定してください。
    #
    # Env: LIFERAY_MEMBERSHIP_POLICY_AUTO_VERIFY
    #
    membership.policy.auto.verify=false

    #
    # com.liferay.portal.security.membershippolicy.OrganizationMembershipPolicyを実装するクラス名を入力してください。 このクラスは、ユーザーが組織から追加・削除されたとき、またはユーザーの組織ロールへの割り当てを実施あるいは解除したとき、もしくは新組織が追加または更新されたときに呼び出されます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_MEMBERSHIP_POLICY_ORGANIZATIONS
    #
    #membership.policy.organizations=com.liferay.portal.security.membershippolicy.DummyOrganizationMembershipPolicy

    #
    # com.liferay.portal.security.membershippolicy.RoleMembershipPolicyを実装するクラス名を入力してください。 このクラスは、ユーザーの通常ロールへの割り当てが実施または解除されたとき、あるいは新しいロールが追加または更新されたときに呼び出されます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_MEMBERSHIP_POLICY_ROLES
    #
    #membership.policy.roles=com.liferay.portal.security.membershippolicy.DummyRoleMembershipPolicy

    #
    # com.liferay.portal.security.membershippolicy.SiteMembershipPolicyを実装するクラス名を入力してください。 このクラスは、ユーザーがサイトから追加・削除されたとき、またはユーザーのサイトロールへの割り当てを実施あるいは解除したとき、もしくは新しいサイトが追加または更新されたときに呼び出されます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_MEMBERSHIP_POLICY_SITES
    #
    #membership.policy.sites=com.liferay.portal.security.membershippolicy.DummySiteMembershipPolicy
    #membership.policy.sites=com.liferay.portal.security.membershippolicy.DefaultSiteMembershipPolicy

    #
    # com.liferay.portal.security.membershippolicy.UserGroupsMembershipPolicyを実装するクラス名を入力してください。 このクラスは、ユーザーがユーザーグループから追加または削除されたとき、あるいは新しいユーザーグループが追加または更新されたときに呼び出されます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_MEMBERSHIP_POLICY_USER_GROUPS
    #
    #membership.policy.user.groups=com.liferay.portal.security.membershippolicy.DummyUserGroupMembershipPolicy

##
## 言語とタイムゾーン
##

    #
    # 有効なロケールを指定してください。 特定の言語に対応するメッセージは、content/Language_*.properties.のものと一致するファイル名を持つプロパティファイルに指定されます。 これらの値は、content/Language-ext_*.properties.のものと一致するファイル名を持つプロパティファイル内で上書きすることも可能です。 各エントリーを区分するにはコンマを使ってください。
    #
    # 同一の言語で2つ以上のロケールが存在する場合には、同一言語の別のロケールで翻訳を要求されても、翻訳された値が見つからない際には、リストの上位にあるものが使われます。 例えば、pt_BRおよびpt_PTという順序で2つのロケールが存在する場合、pt_PTで見つからないキーはpt_BRで検索されます。
    #
    # 言語コードはISO 639-1規格に従います。 各ロケールのコンテンツはUTF-8にエンコードされている必要があります。
    #
    # 言語および国コードの指定は、以下のリンクをご覧ください:
    #     http://www.loc.gov/standards/iso639-2/php/code_list.php
    #     http://userpage.chemie.fu-berlin.de/diverse/doc/ISO_3166.html
    #
    # Env: LIFERAY_LOCALES
    #
    locales=ar_SA,eu_ES,bg_BG,ca_AD,ca_ES,zh_CN,zh_TW,hr_HR,cs_CZ,da_DK,nl_NL,nl_BE,en_US,en_GB,en_AU,et_EE,fi_FI,fr_FR,fr_CA,gl_ES,de_DE,el_GR,iw_IL,hi_IN,hu_HU,in_ID,it_IT,ja_JP,ko_KR,lo_LA,lt_LT,nb_NO,fa_IR,pl_PL,pt_BR,pt_PT,ro_RO,ru_RU,sr_RS,sr_RS_latin,sl_SI,sk_SK,es_ES,sv_SE,th_TH,tr_TR,uk_UA,vi_VN

    #
    # ベータ内のロケールを指定してください。 翻訳作業に参加するには、http://translate.liferay.comに進んでください。
    #
    # Env: LIFERAY_LOCALES_BETA
    #
    locales.beta=ar_SA,eu_ES,bg_BG,ca_AD,zh_TW,hr_HR,cs_CZ,da_DK,nl_BE,en_GB,en_AU,et_EE,gl_ES,el_GR,hi_IN,in_ID,it_IT,ko_KR,lo_LA,lt_LT,nb_NO,fa_IR,pl_PL,pt_PT,ro_RO,ru_RU,sr_RS,sr_RS_latin,sl_SI,sk_SK,sv_SE,tr_TR,uk_UA,vi_VN

    #
    # デフォルトによって有効化されるロケールを指定してください。
    #
    # Env: LIFERAY_LOCALES_ENABLED
    #
    locales.enabled=ca_ES,zh_CN,nl_NL,en_US,fi_FI,fr_FR,de_DE,iw_IL,hu_HU,ja_JP,pt_BR,es_ES

    #
    # 認証を受けていないユーザーがAccept-Languageから希望する言語を選ぶ場合には、これをtrueに設定してください。 認証を受けていないユーザーが本人のカンパニーから希望する言語を選ぶ場合には、これをfalseに設定してください。
    #
    # Env: LIFERAY_LOCALE_DEFAULT_REQUEST
    #
    locale.default.request=false

    #
    # ロケールが自動的にURLに付加されない場合には、これを0に設定してください。 これにより、各URLが潜在的に異なる多くの言語を提示できるようになります。 例えば、URL http://localhost:8080/web/guest/homeは、異なる多くの言語でユーザーによる閲覧が可能となります。
    #
    # 要求されたロケールがデフォルト ロケールでないときに、自動的にロケールがURLに付加される場合には、これを1に設定してください。 これにより、各URLは1か国語のみを提示することとなります。 例えば、URL http://localhost:8080/web/guest/homeは、デフォルト言語を提示することとなります。 URL http://localhost:8080/zh/web/guest/homeとhttp://localhost:8080/zh_CN/web/guest/homeの双方とも、中国語を提示することとなります。
    #
    # 付加されるロケールが "zh" で完全なロケール "zh_CN" でない場合には、返される完全なロケールは、ロケールがプロパティ "locales" に現れる順序に基づきます。 "zh_CN" が "zh_TW" の前に現れる場合には、"zh" が "zh_TW" の簡略形になります。
    #
    # デフォルト言語は、system.properties内でプロパティ "user.country" および "user.language" を使って設定されます。
    #
    # ロケールが自動的に各URLに付加される場合には、これを2に設定してください。 これにより、各URLは1か国語のみを提示することとなります。
    #
    # 要求されたロケールがデフォルトのユーザー ロケールでないときに、ロケールが自動的にURLに付加される場合には、これを3に設定してください。 ゲストユーザーの場合には、動作は1の値のときと同じです。
    #
    # 各言語は、プロパティ "locales" およびI18n Servletのweb.xmlにあるサーブレット マッピングにエントリーをする必要があります。
    #
    # Env: LIFERAY_LOCALE_PREPEND_FRIENDLY_URL_STYLE
    #
    locale.prepend.friendly.url.style=3

    #
    # 要求されたURLに "locales" および "locales.beta" プロパティで設定されたロケールでないものが含まれる場合に、HTTP 404ステータスコードおよびページを返すには、これをfalseに設定してください。
    #
    # 例えば、スペイン語が有効なロケールのひとつでなく、http://localhost:8080/es/web/guestが要求された場合には、404エラーコードおよびページが返されます。
    #
    # これにより、インスタレーション内に定義済みの有効なロケールが存在する場合に、ページの重複を避けることができるので、SEOが向上する可能性があります。
    #
    # Env: LIFERAY_LOCALE_USE_DEFAULT_IF_NOT_AVAILABLE
    #
    locale.use.default.if.not.available=false

    #
    # 言語の翻訳を無効にするには、これをtrueに設定してください。 キー "first-name" の翻訳が要求されたときに、英語 (あるいは該当するロケール) で "First Name" を返すのではなく、"first-name" が返されます。
    #
    # Env: LIFERAY_TRANSLATIONS_DISABLED
    #
    translations.disabled=false

    #
    # 有効なタイムゾーンを指定してください。 指定したIDは、クラスjava.util.TimeZone.からのものと一致している必要があります。
    #
    # Env: LIFERAY_TIME_ZONES
    #
    time.zones=\
        Pacific/Midway,\
        Pacific/Honolulu,\
        America/Anchorage,\
        America/Los_Angeles,\
        America/Phoenix,\
        America/Denver,\
        America/Chicago,\
        America/New_York,\
        America/Caracas,\
        America/Puerto_Rico,\
        America/St_Johns,\
        America/Sao_Paulo,\
        America/Noronha,\
        Atlantic/Azores,\
        UTC,\
        Europe/Lisbon,\
        Europe/Paris,\
        Europe/Istanbul,\
        Asia/Jerusalem,\
        Asia/Baghdad,\
        Asia/Tehran,\
        Asia/Dubai,\
        Asia/Kabul,\
        Asia/Karachi,\
        Asia/Calcutta,\
        Asia/Katmandu,\
        Asia/Dhaka,\
        Asia/Rangoon,\
        Asia/Saigon,\
        Asia/Shanghai,\
        Asia/Tokyo,\
        Asia/Seoul,\
        Australia/Perth,\
        Australia/Eucla,\
        Australia/Darwin,\
        Australia/Sydney,\
        Australia/Lord_Howe,\
        Pacific/Guadalcanal,\
        Pacific/Auckland,\
        Pacific/Enderbury,\
        Pacific/Kiritimati

##
## 外観と感覚
##

    #
    # システムがユーザーによる外観と感覚の変更を許可しない場合には、これをfalseに設定してください。
    #
    # Env: LIFERAY_LOOK_AND_FEEL_MODIFIABLE
    #
    look.and.feel.modifiable=true

    #
    # デフォルトのレイアウト テンプレートIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_LAYOUT_TEMPLATE_ID
    #
    default.layout.template.id=2_columns_ii

    #
    # デフォルトのポートレット デコレーターCSSクラスを設定してください。
    #
    # Env: LIFERAY_DEFAULT_PORTLET_DECORATOR_CSS_CLASS
    #
    default.portlet.decorator.css.class=decorate

    #
    # デフォルトのポートレット デコレーターIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_PORTLET_DECORATOR_ID
    #
    default.portlet.decorator.id=decorate

    #
    # 通常テーマ用のデフォルト テーマIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_REGULAR_THEME_ID
    #
    default.regular.theme.id=classic_WAR_classictheme

    #
    # 通常テーマ用のデフォルト カラースキームIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_REGULAR_COLOR_SCHEME_ID
    #
    default.regular.color.scheme.id=01

    #
    # 公開または非公開グループのテーマ選択における変更を自動的にもう一方に適用することを希望する場合には、これをtrueに設定してください (すなわち、公開および非公開グループのテーマが常に一緒になります)。
    #
    # Env: LIFERAY_THEME_SYNC_ON_GROUP
    #
    theme.sync.on.group=false

##
## リクエスト
##

    #
    # liferay-portlet.xml内の非公開リクエスト アトリビュートを使用するために構成されているポートレットは、複数のリクエスト アトリビュートも共有したい場合があります。 このプロパティによって、どのリクエスト アトリビュートを共有するかを構成することが可能となります。 アトリビュート名が指定したアトリビュート名のいずれかで始まるときに共有されるアトリビュート名を、コンマ区切りのリストで設定してください。 例えば、その値を "hello_,world_" に設定すると、"hello_" または "world_" で始まるアトリビュート名が共有されます。
    #
    # Env: LIFERAY_REQUEST_SHARED_ATTRIBUTES
    #
    request.shared.attributes=LIFERAY_SHARED_

    #
    # サーブレット リクエストの管理でアンラップされる必要のあるJavaパッケージをコンマ区切りのリストで設定してください。詳細な情報については、 LPS-67793を参照ください。
    #
    # Env: LIFERAY_REQUEST_UNWRAP_PACKAGES
    #
    request.unwrap.packages=com.liferay.,com.ibm.ws.cache.servlet.

##
## セッション
##

    #
    # SessionClicksを通じてセッション内に格納可能なキー数値の最大ペア数を設定してください。詳細な情報については、 LPS-20096を参照ください。
    #
    # Env: LIFERAY_SESSION_CLICKS_MAX_ALLOWED_VALUES
    #
    session.clicks.max.allowed.values=1024

    #
    # SessionClicksを通じてセッション内に格納可能なキーおよび数値の最大サイズを設定してください。詳細な情報については、 LPS-20096を参照ください。
    #
    # Env: LIFERAY_SESSION_CLICKS_MAX_SIZE_TERMS
    #
    session.clicks.max.size.terms=1024

    #
    # 複合セッションIDを分解するデリミターを指定してください。
    #
    # これにより、Weblogicならびに、アプリケーションサーバーがセッションIDに一意のJVMコードを追加するすべてのアプリケーションサーバーの問題が解決されます。 LPS-18587をご覧ください。
    #
    # ポータルがアプリケーションサーバーに基づくデリミターの検出を試みるためのブランク デリミターを設定してください。
    #
    # Env: LIFERAY_SESSION_ID_DELIMITER
    # Env: LIFERAY_SESSION_ID_WEBLOGIC_DELIMITER
    #
    session.id.delimiter=
    session.id.weblogic.delimiter=!

    #
    # 許可するセッションの最大数を指定してください。 0以下の数値は無制限を意味します。 1以上の値は、新しいセッションを無効にして、セッション数を制限します。
    #
    # このプロパティは、セッション最大許可フィルタが有効になっていない場合には使用されません。
    #
    # Env: LIFERAY_SESSION_MAX_ALLOWED
    #
    session.max.allowed=0

    #
    # セッションの時間切れまでの分数を指定してください。 この値は、web.xml.で設定された値に常に上書きされます。
    #
    # Env: LIFERAY_SESSION_TIMEOUT
    #
    session.timeout=30

    #
    # ユーザーにセッションの時間切れ通知の警告を送信するまでの分数を指定してください。 警告を無効にするには、0を指定してください。
    #
    # Env: LIFERAY_SESSION_TIMEOUT_WARNING
    #
    session.timeout.warning=1

    #
    # ユーザーにセッションの延長をたずねる必要性を回避するには、自動延長モードをtrueに設定してください。そうすると、自動的に延長されます。 このモードの目的は、ポータルページが読み込まれた状態で、ユーザーのブラウザが開かれている限り、セッションを維持することです。 より快適なパフォーマンスには、5分程度の短い "session.timeout" に合わせて、この設定を使うことが推奨されます。
    #
    # Env: LIFERAY_SESSION_TIMEOUT_AUTO_EXTEND
    #
    session.timeout.auto.extend=false

    #
    # When the property "session.timeout.auto.extend" is set to true, set the
    # number of seconds between when the extend process is launched and the
    # actual expiration of the session.
    #
    # Env: LIFERAY_SESSION_TIMEOUT_AUTO_EXTEND_OFFSET
    #
    session.timeout.auto.extend.offset=0

    #
    # セッションが時間切れになったときに、ユーザーがデフォルトページにリダイレクトされる場合には、これをtrueに設定してください。
    #
    # Env: LIFERAY_SESSION_TIMEOUT_REDIRECT_ON_EXPIRE
    #
    session.timeout.redirect.on.expire=false

    #
    # liferay-portlet.xml内の非公開セッション アトリビュートを使用するために構成されているポートレットは、複数のセッション アトリビュートも共有したい場合があります。 このプロパティにより、どのセッション アトリビュートを共有するかを構成することが可能となります。 アトリビュート名が指定したアトリビュート名のいずれかで始まるときに共有されるアトリビュート名を、コンマ区切りのリストで設定してください。 例えば、その値を "hello_,world_" に設定すると、"hello_" または "world_" で始まるアトリビュート名が共有されます。
    #
    # このプロパティは、ポータルからポートレットへのセッション アトリビュート共有の指定に使われることにご留意ください。 これは、ポートレットWAR間またはポートレットからポータルへのセッション共有の指定には使われません。
    #
    # Env: LIFERAY_SESSION_SHARED_ATTRIBUTES
    #
    session.shared.attributes=COMPANY_,LIFERAY_SHARED_,org.apache.struts.action.LOCALE,PORTLET_RENDER_PARAMETERS_,PUBLIC_RENDER_PARAMETERS_POOL_,USER_

    #
    # ポータルからポートレットへ共有されるアトリビュートを間違いなく除いてください。
    #
    # Env: LIFERAY_SESSION_SHARED_ATTRIBUTES_EXCLUDES
    #
    session.shared.attributes.excludes=USER_PASSWORD

    #
    # ユーザーのパスワードをセッションに格納するには、これをtrueに設定してください。
    #
    # Env: LIFERAY_SESSION_STORE_PASSWORD
    #
    session.store.password=false

    #
    # すべてのパーシステント クッキーを無効にするには、これをfalseに設定してください。 自動ログインなどの機能が使えなくなります。
    #
    # Env: LIFERAY_SESSION_ENABLE_PERSISTENT_COOKIES
    #
    session.enable.persistent.cookies=true

    #
    # クッキーが無効になっているときに、セッションを有効にするには、これをtrueに設定してください。 LEP-4787をご覧ください。 それを有効にすることで、特定のセットアップが損なわれる可能性があるので、この動作は構成可能です。
    #
    # Env: LIFERAY_SESSION_ENABLE_URL_WITH_SESSION_ID
    #
    session.enable.url.with.session.id=false

    #
    # パーシステント クッキーが有効になっていると、ログインプロセスで複数のクッキーが設定されます。 それらクッキーのドメインを設定するには、このプロパティを設定してください。
    #
    # Env: LIFERAY_SESSION_COOKIE_DOMAIN
    #
    #session.cookie.domain=

    #
    # クッキー ドメイン値に完全なホスト名を使うには、これをtrueに設定してください。 デフォルトでは、クロスドメインのログインが可能となるよう、ドメインはルートドメインのみ使用するように調整されています。
    #
    # Env: LIFERAY_SESSION_COOKIE_USE_FULL_HOSTNAME
    #
    session.cookie.use.full.hostname=false

    #
    # ユーザーがポータルにログインしたときに、セッションを無効にするには、これをtrueに設定してください。これはフィッシング防止に役立ちます。 ゲストユーザーと認証済みユーザーが同一のセッションを持つことが必要である場合には、これをfalseに設定してください。
    #
    # プロパティ "company.security.auth.requires.https" がtrueに設定されており、HTTPとHTTPSセッションを跨いで同じ認証情報を維持したい場合には、これをfalseに設定してください。
    #
    # Env: LIFERAY_SESSION_ENABLE_PHISHING_PROTECTION
    #
    session.enable.phishing.protection=true

    #
    # プロパティ "session.enable.phishing.protection" がtrueに設定されている場合に、新しいセッションにコピーされるアトリビュート名をコンマで区切ったリストで設定してください。
    #
    # Env: LIFERAY_SESSION_PHISHING_PROTECTED_ATTRIBUTES
    #
    session.phishing.protected.attributes=HTTPS_INITIAL,LAST_PATH

    #
    # ユーザーがサインインする前に、クッキー サポートがあるかどうかをテストするには、これをtrueに設定してください。
    #
    # Env: LIFERAY_SESSION_TEST_COOKIE_SUPPORT
    #
    session.test.cookie.support=true

    #
    # 追加されたセッション変数がシリアル化可能かどうかをcom.liferay.portal.kernel.servlet.SerializableSessionAttributeListenerがテストできるようにするには、これをtrueに設定してください。 セッションにシリアル化不能の数値が格納されていると、セッション レプリケーションがアプリケーションサーバーによって有効にされていても、セッションがレプリケートされないことが起こります。
    #
    # Env: LIFERAY_SESSION_VERIFY_SERIALIZABLE_ATTRIBUTE
    #
    session.verify.serializable.attribute=true

    #
    # セッションを無効にするには、これをtrueに設定してください。 これをすることで、リクエスト全般についてクッキーを使ってユーザーを記憶します。 これは、ユーザーが毎回のリクエストごとに異なるサーバーに送られる可能性があるような非常に大きなサイトの展開を望んでいる場合に便利です。 このアプローチの欠点は、サーブレットとポートレットの仕様によって提供されるセッションに関して、APIに依存してはいけないということです。
    #
    # この欠点はTomcatのみに当てはまり、Tomcatのマネージャ クラスを "com.liferay.support.tomcat.session.SessionLessManagerBase" に設定する必要があります。
    #
    # これをtrueに設定しても、ajaxレンダリングにはセッションの有効化が必要なので、"layout.ajax.render.enable" は強制的にfalseに設定されます。
    #
    # Env: LIFERAY_SESSION_DISABLED
    #
    session.disabled=false

    #
    # com.liferay.portal.struts.SessionActionを拡張するクラス名のコンマで区切ったリストを入力してください。 これらのクラスは特定のイベントで実行されます。
    #

    #
    # サーブレット セッション作成イベント
    #
    # Env: LIFERAY_SERVLET_SESSION_CREATE_EVENTS
    #
    servlet.session.create.events=com.liferay.portal.events.SessionCreateAction

    #
    # サーブレット セッション取消イベント
    #
    # Env: LIFERAY_SERVLET_SESSION_DESTROY_EVENTS
    #
    servlet.session.destroy.events=com.liferay.portal.events.SessionDestroyAction,com.liferay.portal.events.ChannelSessionDestroyAction

    #
    # ユーザーのセッションの間、メモリ内でユーザークリックを追跡するには、これをtrueに設定してください。 これをtrueに設定することで、アドミニ ポートレット内ですべてのライブセッションを確認できるようになります。
    #
    # Env: LIFERAY_SESSION_TRACKER_MEMORY_ENABLED
    #
    session.tracker.memory.enabled=true

    #
    # ユーザーのセッションが無効になった後に、データベース内でユーザークリックを追跡するには、これをtrueに設定してください。 これをtrueに設定することにより、データベースから利用状況レポートを生成できるようになります。 これは多くの利用データを格納することになりますので、慎重にお使いください。
    #
    # Env: LIFERAY_SESSION_TRACKER_PERSISTENCE_ENABLED
    #
    session.tracker.persistence.enabled=false

    #
    # 追跡されたパスをフレンドリーURLに変換するには、これをtrueに設定してください。
    #
    # Env: LIFERAY_SESSION_TRACKER_FRIENDLY_PATHS_ENABLED
    #
    session.tracker.friendly.paths.enabled=false

    #
    # 追跡の必要がないパスのコンマで区切ったリストを入力してください。
    #
    # Env: LIFERAY_SESSION_TRACKER_IGNORE_PATHS
    #
    session.tracker.ignore.paths=\
        /portal/render_portlet,\
        \
        /document_library/get_file

##
## JAAS
##

    #
    # JAASセキュリティ チェックを無効にするには、これをfalseに設定してください。 JAASを無効にするとログインが速くなります。 アドミニストレータが他のユーザーになりすますことができるようにする場合には、JAASは無効にする必要があります。
    #
    # Env: LIFERAY_PORTAL_JAAS_ENABLE
    #
    portal.jaas.enable=false

    #
    # JAASは、プロパティ "company.security.auth.type" によって決定されるEメールアドレス、スクリーン名、ユーザーID、またはログインに基づいてユーザーを認証できます。
    #
    # Env: LIFERAY_PORTAL_JAAS_AUTH_TYPE
    #
    #portal.jaas.auth.type=emailAddress
    #portal.jaas.auth.type=screenName
    portal.jaas.auth.type=userId
    #portal.jaas.auth.type=login

    #
    # デフォルトでは、com.liferay.portal.security.jaas.PortalLoginModuleは、ポータルが展開されているアプリケーション サーバーまたはサーブレット コンテナに基づいて、正しいJAASログイン モジュールを読み込みます。 この動作を上書きするには、JAAS実装クラスを設定してください。
    #
    # Env: LIFERAY_PORTAL_JAAS_IMPL
    #
    #portal.jaas.impl=

    #
    # JAASログイン モジュールの中には、プレーンテキストのパスワードでのみ機能するものがあります。 プレーンテキストのパスワードをJAASに受け渡すには、このプロパティをtrueに設定してください。
    #
    # Env: LIFERAY_PORTAL_JAAS_PLAIN_PASSWORD
    #
    portal.jaas.plain.password=false

    #
    # JAASプロセスは暗号化されたパスワードを受け渡すことがあり、完全に一致する場合にのみ認証が成功します。 ユーザーが暗号化されていないパスワードを入力できるよう、この動作を解除するには、このプロパティをfalseに設定してください。
    #
    # Env: LIFERAY_PORTAL_JAAS_STRICT_PASSWORD
    #
    portal.jaas.strict.password=false

    #
    # アドミニストレータが他のユーザーになりすますことができるようにするには、これをtrueに設定してください。
    #
    # Env: LIFERAY_PORTAL_IMPERSONATION_ENABLE
    #
    portal.impersonation.enable=true

    #
    # これにより、ポータルのデフォルト偽装URLが設定されます。 カンパニーにホームURLセットがある場合には、このプロパティは使われません。
    #
    # Env: LIFERAY_PORTAL_IMPERSONATION_DEFAULT_URL
    #
    portal.impersonation.default.url=/web/guest

##
## JNDI
##

    #
    # JNDIコンテクストの構成値を設定してください。 "jndi.environment." のプレフィックスが付いたあらゆるプロパティは、環境変数としてJNDIコンテクストに受け渡されます。 有効な値はjavax.naming.Contextに指定されているとおりです。
    #
    # Env: LIFERAY_JNDI_ENVIRONMENT_JAVA_NAMING_SECURITY_CREDENTIALS
    # Env: LIFERAY_JNDI_ENVIRONMENT_JAVA_NAMING_SECURITY_PRINCIPAL
    #
    #jndi.environment.java.naming.security.credentials=
    #jndi.environment.java.naming.security.principal=

##
## セキュリティ マネージャ
##

    #
    # アプリケーション サーバーによって構成されるデフォルトのセキュリティ マネージャを使うには、このプロパティを "default" に設定してください。 アプリケーション サーバーによって構成されていない場合には、セキュリティ マネージャは使われません。
    #
    # アプリケーション サーバーがセキュリティ マネージャを構成していない場合にLiferayのセキュリティ マネージャを使うには、このプロパティを "liferay" に設定してください。
    #
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_STRATEGY
    #
    portal.security.manager.strategy=default

    #
    # セキュリティ マネージャの許可確認に使うPACLポリシー チェッカーを設定してください。
    #
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_COM_LIFERAY_PORTAL_KERNEL_SECURITY_PACL_PERMISSION__UPPERCASEP_ORTAL_UPPERCASEH_OOK_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_COM_LIFERAY_PORTAL_KERNEL_SECURITY_PACL_PERMISSION__UPPERCASEP_ORTAL_UPPERCASEM_ESSAGE_UPPERCASEB_US_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_COM_LIFERAY_PORTAL_KERNEL_SECURITY_PACL_PERMISSION__UPPERCASEP_ORTAL_UPPERCASER_UNTIME_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_COM_LIFERAY_PORTAL_KERNEL_SECURITY_PACL_PERMISSION__UPPERCASEP_ORTAL_UPPERCASES_ERVICE_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_MANAGEMENT_REMOTE__UPPERCASES_UBJECT_UPPERCASED_ELEGATION_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_MANAGEMENT__UPPERCASEM__UPPERCASEB_EAN_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_MANAGEMENT__UPPERCASEM__UPPERCASEB_EAN_UPPERCASES_ERVER_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_MANAGEMENT__UPPERCASEM__UPPERCASEB_EAN_UPPERCASET_RUST_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_NET_SSL__UPPERCASES__UPPERCASES__UPPERCASEL__UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_SECURITY_AUTH_KERBEROS__UPPERCASED_ELEGATION_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_SECURITY_AUTH_KERBEROS__UPPERCASES_ERVICE_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_SECURITY_AUTH__UPPERCASEA_UTH_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_SECURITY_AUTH__UPPERCASEP_RIVATE_UPPERCASEC_REDENTIAL_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVAX_SOUND_SAMPLED__UPPERCASEA_UDIO_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_AWT__UPPERCASEA__UPPERCASEW__UPPERCASET__UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_IO__UPPERCASEF_ILE_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_IO__UPPERCASES_ERIALIZABLE_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_LANG_MANAGEMENT__UPPERCASEM_ANAGEMENT_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_LANG_REFLECT__UPPERCASER_EFLECT_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_LANG__UPPERCASER_UNTIME_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_NET__UPPERCASEN_ET_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_NET__UPPERCASES_OCKET_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_SECURITY__UPPERCASEA_LL_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_SECURITY__UPPERCASES_ECURITY_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_SECURITY__UPPERCASEU_NRESOLVED_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_SQL__UPPERCASES__UPPERCASEQ__UPPERCASEL__UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_UTIL_LOGGING__UPPERCASEL_OGGING_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PACL_POLICY_CHECKER_OPENBRACKET_JAVA_UTIL__UPPERCASEP_ROPERTY_UPPERCASEP_ERMISSION_CLOSEBRACKET_
    #
    portal.security.manager.pacl.policy.checker[com.liferay.portal.kernel.security.pacl.permission.PortalHookPermission]=com.liferay.portal.security.pacl.checker.PortalHookChecker
    portal.security.manager.pacl.policy.checker[com.liferay.portal.kernel.security.pacl.permission.PortalMessageBusPermission]=com.liferay.portal.security.pacl.checker.PortalMessageBusChecker
    portal.security.manager.pacl.policy.checker[com.liferay.portal.kernel.security.pacl.permission.PortalRuntimePermission]=com.liferay.portal.security.pacl.checker.PortalRuntimeChecker
    portal.security.manager.pacl.policy.checker[com.liferay.portal.kernel.security.pacl.permission.PortalServicePermission]=com.liferay.portal.security.pacl.checker.PortalServiceChecker
    portal.security.manager.pacl.policy.checker[java.awt.AWTPermission]=com.liferay.portal.security.pacl.checker.AWTChecker
    portal.security.manager.pacl.policy.checker[java.io.FilePermission]=com.liferay.portal.security.pacl.checker.FileChecker
    portal.security.manager.pacl.policy.checker[java.io.SerializablePermission]=com.liferay.portal.security.pacl.checker.DefaultRejectChecker
    portal.security.manager.pacl.policy.checker[java.lang.RuntimePermission]=com.liferay.portal.security.pacl.checker.RuntimeChecker
    #portal.security.manager.pacl.policy.checker[java.lang.management.ManagementPermission]=com.liferay.portal.security.pacl.checker.DefaultAcceptChecker
    portal.security.manager.pacl.policy.checker[java.lang.reflect.ReflectPermission]=com.liferay.portal.security.pacl.checker.ReflectChecker
    portal.security.manager.pacl.policy.checker[java.net.NetPermission]=com.liferay.portal.security.pacl.checker.NetChecker
    portal.security.manager.pacl.policy.checker[java.net.SocketPermission]=com.liferay.portal.security.pacl.checker.SocketChecker
    #portal.security.manager.pacl.policy.checker[java.security.AllPermission]=
    portal.security.manager.pacl.policy.checker[java.security.SecurityPermission]=com.liferay.portal.security.pacl.checker.SecurityChecker
    #portal.security.manager.pacl.policy.checker[java.security.UnresolvedPermission]=
    portal.security.manager.pacl.policy.checker[java.sql.SQLPermission]=com.liferay.portal.security.pacl.checker.DefaultRejectChecker
    portal.security.manager.pacl.policy.checker[java.util.PropertyPermission]=com.liferay.portal.security.pacl.checker.PropertyChecker
    #portal.security.manager.pacl.policy.checker[java.util.logging.LoggingPermission]=com.liferay.portal.security.pacl.checker.DefaultAcceptChecker
    portal.security.manager.pacl.policy.checker[javax.management.MBeanPermission]=com.liferay.portal.security.pacl.checker.MBeanChecker
    portal.security.manager.pacl.policy.checker[javax.management.MBeanServerPermission]=com.liferay.portal.security.pacl.checker.MBeanChecker
    portal.security.manager.pacl.policy.checker[javax.management.MBeanTrustPermission]=com.liferay.portal.security.pacl.checker.MBeanChecker
    portal.security.manager.pacl.policy.checker[javax.management.remote.SubjectDelegationPermission]=com.liferay.portal.security.pacl.checker.MBeanChecker
    portal.security.manager.pacl.policy.checker[javax.net.ssl.SSLPermission]=com.liferay.portal.security.pacl.checker.DefaultRejectChecker
    #portal.security.manager.pacl.policy.checker[javax.security.auth.AuthPermission]=com.liferay.portal.security.pacl.checker.DefaultAcceptChecker
    #portal.security.manager.pacl.policy.checker[javax.security.auth.PrivateCredentialPermission]=com.liferay.portal.security.pacl.checker.DefaultAcceptChecker
    #portal.security.manager.pacl.policy.checker[javax.security.auth.kerberos.DelegationPermission]=com.liferay.portal.security.pacl.checker.DefaultAcceptChecker
    #portal.security.manager.pacl.policy.checker[javax.security.auth.kerberos.ServicePermission]=com.liferay.portal.security.pacl.checker.DefaultAcceptChecker
    #portal.security.manager.pacl.policy.checker[javax.sound.sampled.AudioPermission]=com.liferay.portal.security.pacl.checker.DefaultAcceptChecker

    #
    # com.liferay.portal.security.pacl.checker.FileCheckerによって使われるデフォルトのリードパスを設定してください。
    #
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_FILE_CHECKER_DEFAULT_READ_PATHS_OPENBRACKET_GLASSFISH_CLOSEBRACKET_
    #
    portal.security.manager.file.checker.default.read.paths[glassfish]=\
        ${liferay.web.portal.dir}html/common/-,\
        ${liferay.web.portal.dir}html/taglib/-

    portal.security.manager.file.checker.default.read.paths[jetty]=\
        ${liferay.web.portal.dir},\
        ${liferay.web.portal.dir}html/common/-,\
        ${liferay.web.portal.dir}html/taglib/-

    portal.security.manager.file.checker.default.read.paths[resin]=\
        ${resin.home}ext-lib/-,\
        ${liferay.web.portal.dir},\
        ${liferay.web.portal.dir}html/common/-,\
        ${liferay.web.portal.dir}html/taglib/-

    portal.security.manager.file.checker.default.read.paths[weblogic]=\
        ${auto.deploy.installed.dir}/${plugin.servlet.context.name}/-,\
        ${auto.deploy.installed.dir}/ROOT/html/common/-,\
        ${auto.deploy.installed.dir}/ROOT/html/taglib/-

    portal.security.manager.file.checker.default.read.paths[websphere]=\
        ${liferay.web.portal.dir}html/common/-,\
        ${liferay.web.portal.dir}html/taglib/-,\
        ${liferay.web.portal.dir}WEB-INF/classes,\
        ${liferay.web.portal.dir}WEB-INF/classes/html/common/-,\
        ${liferay.web.portal.dir}WEB-INF/classes/html/taglib/-

    #
    # ポータル セキュリティ マネージャが有効になっているときに、プラグインで利用できるようにするために、PreloadClassloaderによってプリロードされるクラスのリストを設定してください。 これらのクラスは、クラスの読み込みに起因するセキュリティ チェックから除外されます。
    #
    # Env: LIFERAY_PORTAL_SECURITY_MANAGER_PRELOAD_CLASSLOADER_CLASSES
    #
    portal.security.manager.preload.classloader.classes=\
        org.aopalliance.aop.Advice,\
        org.springframework.aop.Advisor,\
        org.springframework.aop.SpringProxy,\
        org.springframework.aop.TargetSource,\
        org.springframework.aop.framework.Advised,\
        org.springframework.aop.framework.AopConfigException,\
        org.springframework.jmx.export.MBeanExporter

##
## LDAP
##

    #
    # ユーザーまたはグループがLDAPストアにインポートされる前に、com.liferay.portal.security.ldap.AttributesTransformerを実装する独自のクラスを作成して、LDAPアトリビュートを変換することができます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_LDAP_ATTRS_TRANSFORMER_IMPL
    #
    #ldap.attrs.transformer.impl=com.liferay.portal.security.ldap.DefaultAttributesTransformer

##
## 基本的な認証
##

    #
    # 基本的な認証を使うときに、パスワードを要求するには、これをtrueに設定してください。 ユーザーが適切に認証されていることを確実にする追加のセキュリティ手段が実施されている場合にのみ、これをfalseに設定してください。
    #
    # Env: LIFERAY_BASIC_AUTH_PASSWORD_REQUIRED
    #
    basic.auth.password.required=true

##
## NTLM
##

    #
    # 利用可能なプロパティについての詳細は、http://jcifs.samba.org/src/docs/ntlmhttpauth.htmlをご覧ください。
    #
    # Env: LIFERAY_JCIFS_NETBIOS_CACHE_UPPERCASEP_OLICY
    # Env: LIFERAY_JCIFS_SMB_CLIENT_SO_UPPERCASET_IMEOUT
    #
    #jcifs.netbios.cachePolicy=30
    #jcifs.smb.client.soTimeout=35000

##
## オープンID
##

    #open.id.providers=yahoo

    #open.id.ax.schema[default]=email,firstname,lastname
    #open.id.ax.type.email[default]=http://schema.openid.net/contact/email
    #open.id.ax.type.firstname[default]=http://schema.openid.net/namePerson/first
    #open.id.ax.type.lastname[default]=http://schema.openid.net/namePerson/last

    #open.id.ax.schema[yahoo]=email,fullname
    #open.id.ax.type.email[yahoo]=http://axschema.org/contact/email
    #open.id.ax.type.fullname[yahoo]=http://axschema.org/namePerson
    #open.id.url[yahoo]=open.login.yahooapis.com

##
## リクエスト ヘッダ
##

    #
    # ユーザーがポータルに存在しない場合に、LDAPから自動的にユーザーをインポートするには、これをtrueに設定してください。 リクエスト ヘッダ認証を有効にするには、プロパティ "auto.login.hooks" にクラスcom.liferay.portal.security.auto.login.request.header.RequestHeaderAutoLoginへの参照が含まれている必要があります。
    #
    # Env: LIFERAY_REQUEST_HEADER_AUTH_IMPORT_FROM_LDAP
    #
    #request.header.auth.import.from.ldap=false

    #
    # リクエスト ヘッダから自動的に認証できるIPのコンマ区切りのリストを入力してください。 リクエスト ヘッダからあらゆるIPによる自動認証ができるようにするには、ブランクリストを入力してください。 SERVER_IPは、ホストサーバーのIPで置換されます。
    #
    # Env: LIFERAY_REQUEST_HEADER_AUTH_HOSTS_ALLOWED
    #
    #request.header.auth.hosts.allowed=

    #
    # ヘッダ フィルタによってリクエスト ヘッダ内に設定されることのない初期パラメータのコンマ区切りのリストを入力してください。
    #
    # Env: LIFERAY_REQUEST_HEADER_IGNORE_INIT_PARAMS
    #
    request.header.ignore.init.params=url-regex-ignore-pattern,url-regex-pattern

##
## Authenticated User UUID Store
##

    #
    # Set this to true to enable user UUID store. User UUID store is deprecated
    # and will be removed in a future release.
    #
    # Env: LIFERAY_AUTH_USER_UUID_STORE_ENABLED
    #
    auth.user.uuid.store.enabled=false

##
## 認証パイプライン
##

    #
    # com.liferay.portal.security.auth.Authenticatorを実装するクラス名のコンマ区切りのリストを入力してください。 これらのクラスは、ポータル認証の前または後で実行されます。
    #
    # 認証符号クラスは、インターフェイスを実装しているクラスからのリターンコードとして使われるべき一定値を定義します。 認証が成功すると、SUCCESSが返されます。ユーザーが存在するものの、パスワードが合致しない場合には、FAILUREが返されます。システム上にユーザーが存在しないと、DNEが返されます。
    #
    # プレ認証パイプラインで、内部ポータル認証によってパスワード確認をスキップしたい場合には、認証符号はSKIP_LIFERAY_CHECKを返すことになります。 これは、パスワードがポータルにインポートされていない場合に必要です。
    #
    # 認証符号における定数:
    #     public static final int DNE = 0;
    #     public static final int FAILURE = -1;
    #     public static final int SKIP_LIFERAY_CHECK = 2;
    #     public static final int SUCCESS = 1;
    #
    # 認証パイプラインに複数のクラスが存在する場合に、ユーザーがログインできることを望むなら、それらすべてがSKIP_LIFERAY_CHECKまたはSUCCESSを返す必要があります。 いずれかの認証符号がDNEまたはFAILUREを返すと、ログインは失敗となります。
    #
    # 特定の状況下では、外部データベースまたはLDAPサーバーと同期して、ポータル データベースに情報を保持することを希望することがあります。 これは、ユーザーがサインインした際に、ポータル ユーザー データベースに格納されている情報を更新するLDAPAuthを介したクラスを実装することで、簡単に実現することができます。
    #
    # 各ポータル インスタンスは、実行時にユーザーIDまたはEメールアドレスに基づいて認証するように構成できます。 詳細はアドミニ ポートレットをご覧ください。
    #
    # 有効な認証符号は次の通りです:
    #     com.liferay.portal.security.auth.LDAPAuth
    #
    # LDAPAuthクラスの動作を構成するには、LDAPプロパティをご確認ください。
    #
    # このプロパティは非推奨で、ドキュメント目的でのみ提供されます。
    #
    # Env: LIFERAY_AUTH_PIPELINE_POST
    # Env: LIFERAY_AUTH_PIPELINE_PRE
    #
    #auth.pipeline.pre=com.liferay.portal.security.auth.LDAPAuth
    #auth.pipeline.post=

    #
    # 内部ポータル認証によるパスワード確認を有効にするには、これをtrueに設定してください。 falseに設定すると、基本的にパスワード確認を "auth.pipeline.pre" および "auth.pipeline.post" 設定で構成されている認証符号に委ねることになります。
    #
    # Env: LIFERAY_AUTH_PIPELINE_ENABLE_LIFERAY_CHECK
    #
    auth.pipeline.enable.liferay.check=true

    #
    # com.liferay.portal.security.auth.AuthFailureを実装するクラス名のコンマ区切りのリストを入力してください。 これらのクラスは、ユーザーがログインに失敗したとき、またはユーザーのログイン失敗が最大数に達したときに実行されます。
    #
    # このプロパティは非推奨で、ドキュメント目的でのみ提供されます。
    #
    # Env: LIFERAY_AUTH_FAILURE
    # Env: LIFERAY_AUTH_MAX_FAILURES
    #
    #auth.failure=com.liferay.portal.security.auth.LoginFailure
    #auth.max.failures=com.liferay.portal.security.auth.LoginMaxFailures

    #
    # ユーザーが異なるセッションからの同時ログインを許可されている場合には、以下をtrueに設定してください。 このプロパティは、プロパティ "live.users.enabled" がtrueに設定されていない限り使われません。
    #
    # Env: LIFERAY_AUTH_SIMULTANEOUS_LOGINS
    #
    auth.simultaneous.logins=true

    #
    # ユーザーがログイン成功時に、最後に訪問したパスに転送される場合には、これをtrueに設定してください。 falseに設定されると、ユーザーはデフォルトのレイアウトページに転送されます。
    #
    # Env: LIFERAY_AUTH_FORWARD_BY_LAST_PATH
    #
    auth.forward.by.last.path=true

    #
    # ログインページは、 "redirect" という名前のパラメータでリダイレクトを読み取ります。 このプロパティがtrueに設定されていると、ユーザーはログイン成功時に、予め定められたリダイレクトパスにリダイレクトされます。 ユーザーにそのページを閲覧する権限がない場合には、プロパティ "auth.forward.by.last.path" で設定されたルールが適用されます。
    #
    # URLに "redirect" パラメータを付加して、別のアプリケーションからマニュアルでリダイレクトを設定することができ、それは次のようになります: /c/portal/login?redirect=%2Fgroup%2Femployees%2Fcalendar。 このURLは、ログイン成功時にパス "/group/employees/calendar" にユーザーをリダイレクトします。
    #
    # Env: LIFERAY_AUTH_FORWARD_BY_REDIRECT
    #
    auth.forward.by.redirect=true

    #
    # 最後に訪問したパスの一部と見なされるパスのコンマ区切りのリストを入力してください。
    #
    # Env: LIFERAY_AUTH_FORWARD_LAST_PATHS
    #
    auth.forward.last.paths=/document_library/get_file

    #
    # 必要な時にポータル ユーザーをログインさせるのに使われるURLを入力してください。 デフォルトでは、ポータルのログインページが使われます。
    #
    # Env: LIFERAY_AUTH_LOGIN_URL
    #
    #auth.login.url=/web/guest/home

    #
    # ゲストユーザーがポータルの保護されたページ リソースにアクセスしようとしたときに、ログインするように促すには、これをtrueに設定してください。 この値をfalseに設定すると、ユーザーにリソースを閲覧する権限がなければ、ポータルは要求されたリソースが見つからない旨を通知します。 ユーザーがゲストユーザーである場合にも、ポータルはログインを促しません。 この動作はOWASPのベストプラクティスに従っています。
    #
    # Env: LIFERAY_AUTH_LOGIN_PROMPT_ENABLED
    #
    auth.login.prompt.enabled=true

    #
    # ユーザーがサイトをナビゲートして、認証が必要なときに、ポータル ユーザーをログインさせるのに使われるページのフレンドリーURLを入力してください。 デフォルトでは、ポータルのログインページまたはプロパティ "auth.login.url" で設定されているURLが使われます。
    #
    # Env: LIFERAY_AUTH_LOGIN_SITE_URL
    #
    auth.login.site.url=/login

    #
    # 前のプロパティのURLで識別されるページで使われるログイン ポートレットの名前を入力してください (設定されている場合)。 これにより、ポートレットによるリダイレクト パラメータへのアクセスが可能となり、必要に応じてユーザーがアクセスしようとしていたページに転送することができます。 独自のカスタム ログイン ポートレットがない限り、デフォルト値のままにしておくことをお勧めします。
    #
    # Env: LIFERAY_AUTH_LOGIN_PORTLET_NAME
    #
    auth.login.portlet.name=com_liferay_login_web_portlet_LoginPortlet

    #
    # あらゆるユーザーがポータルにログインできないようにするには、これをtrueに設定してください。 ユーザーがポータルにログインできないようにすると、ポータルの読み取り専用バージョンが提供され、アップグレード中のサイトの停止を最小限に抑えるためにこれを使うことができます。
    #
    # Env: LIFERAY_AUTH_LOGIN_DISABLED
    # Env: LIFERAY_AUTH_LOGIN_DISABLED_PATH
    #
    auth.login.disabled=false
    auth.login.disabled.path=/portal/login_disabled

    #
    # 認証を必要としないパスのコンマ区切りのリストを入力してください。
    #
    # Env: LIFERAY_AUTH_PUBLIC_PATHS
    #
    auth.public.paths=\
        /activities/rss,\
        \
        /asset/get_categories,\
        \
        /document_library/find_file_entry,\
        /document_library/find_folder,\
        /document_library/get_file,\
        \
        /dynamic_data_lists/find_record,\
        \
        /dynamic_data_mapping/render_structure_field,\
        \
        /flags/edit_flag,\
        \
        /iframe/proxy,\
        \
        /image_gallery_display/find_folder,\
        /image_gallery_display/find_image,\
        \
        /login/facebook_connect_oauth,\
        \
        /message_boards/find_category,\
        /message_boards/find_message,\
        /message_boards/find_thread,\
        /message_boards/get_message_attachment,\
        /message_boards/rss,\
        \
        /portal/comment/edit_discussion,\
        /portal/comment/get_comments,\
        /portal/emoticons,\
        /portal/expire_session,\
        /portal/extend_session,\
        /portal/extend_session_confirm,\
        /portal/json_service,\
        /portal/license,\
        /portal/logout,\
        /portal/open_id_request,\
        /portal/open_id_response,\
        /portal/portlet_url,\
        /portal/robots,\
        /portal/session_click,\
        /portal/session_tree_js_click,\
        /portal/sitemap,\
        /portal/status

##
## 認証ベリファイア
##

    #
    # com.liferay.portal.security.auth.AuthVerifierを実装するクラス名のコンマ区切りのリストを入力してください。 これらのクラスは、リクエストが認証済みか否かの検証に使われます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_AUTH_VERIFIER_PIPELINE
    #
    #auth.verifier.pipeline=com.liferay.portal.security.auth.verifier.basic.auth.header.BasicAuthHeaderAuthVerifier,com.liferay.portal.security.auth.verifier.DigestAuthenticationAuthVerifier,com.liferay.portal.security.auth.verifier.request.parameter.RequestParameterAuthVerifier,com.liferay.portal.security.auth.verifier.PortalSessionAuthVerifier,com.liferay.portal.security.auth.verifier.internal.tunnel.TunnelAuthVerifier

    #
    # 各認証検証ベリファイアは、プロパティ プレフィックス "auth.verifier." から設定されたカスタム プロパティおよび認証検証機能のシンプルなクラス名を持つことができます。 すべてのプロパティ サフィックスはプレフィックスを取り除かれ、直接認証ベリファイアに受け渡されます。 例えば、プロパティ "auth.verifier.BasicAuthHeaderAuthVerifier.hosts.allowed" は、"hosts.allowed" としてBasicAuthHeaderAuthVerifierに受け渡されます。
    #
    # 予想されるプロパティ サフィックスは "hosts.allowed" および "urls" です。 プロパティ サフィックス "hosts.allowed" に許容される値については、プロパティ "json.service.auth.token.hosts.allowed" をご覧ください。
    #
    # プロパティ サフィックス "urls.includes" は、認証ベリファイアに適用される有効なURLを示します。
    #
    # プロパティ サフィックス "urls.excludes" は、"urls.includes" で設定されたパターンと一致しても、処理されないURLを示します。
    #

    #
    # BasicAuthHeaderAuthVerifier
    #
    # Env: LIFERAY_AUTH_VERIFIER__UPPERCASEB_ASIC_UPPERCASEA_UTH_UPPERCASEH_EADER_UPPERCASEA_UTH_UPPERCASEV_ERIFIER_HOSTS_ALLOWED
    # Env: LIFERAY_AUTH_VERIFIER__UPPERCASEB_ASIC_UPPERCASEA_UTH_UPPERCASEH_EADER_UPPERCASEA_UTH_UPPERCASEV_ERIFIER_URLS_EXCLUDES
    # Env: LIFERAY_AUTH_VERIFIER__UPPERCASEB_ASIC_UPPERCASEA_UTH_UPPERCASEH_EADER_UPPERCASEA_UTH_UPPERCASEV_ERIFIER_URLS_INCLUDES
    #
    #auth.verifier.BasicAuthHeaderAuthVerifier.hosts.allowed=
    #auth.verifier.BasicAuthHeaderAuthVerifier.urls.includes=/api/*,/xmlrpc/*
    #auth.verifier.BasicAuthHeaderAuthVerifier.urls.excludes=/api/liferay/do

    #
    # DigestAuthenticationAuthVerifier
    #
    # Env: LIFERAY_AUTH_VERIFIER__UPPERCASED_IGEST_UPPERCASEA_UTHENTICATION_UPPERCASEA_UTH_UPPERCASEV_ERIFIER_HOSTS_ALLOWED
    # Env: LIFERAY_AUTH_VERIFIER__UPPERCASED_IGEST_UPPERCASEA_UTHENTICATION_UPPERCASEA_UTH_UPPERCASEV_ERIFIER_URLS_INCLUDES
    #
    #auth.verifier.DigestAuthenticationAuthVerifier.hosts.allowed=
    #auth.verifier.DigestAuthenticationAuthVerifier.urls.includes=N/A

    #
    # PortalSessionAuthVerifier
    #
    # Env: LIFERAY_AUTH_VERIFIER__UPPERCASEP_ORTAL_UPPERCASES_ESSION_UPPERCASEA_UTH_UPPERCASEV_ERIFIER_HOSTS_ALLOWED
    # Env: LIFERAY_AUTH_VERIFIER__UPPERCASEP_ORTAL_UPPERCASES_ESSION_UPPERCASEA_UTH_UPPERCASEV_ERIFIER_URLS_INCLUDES
    #
    #auth.verifier.PortalSessionAuthVerifier.hosts.allowed=
    #auth.verifier.PortalSessionAuthVerifier.urls.includes=\
    #    /api/json/*,\
    #    /api/jsonws/*,\
    #    /c/portal/json_service/*

    #
    # RequestParameterAuthVerifier
    #
    # Env: LIFERAY_AUTH_VERIFIER__UPPERCASER_EQUEST_UPPERCASEP_ARAMETER_UPPERCASEA_UTH_UPPERCASEV_ERIFIER_HOSTS_ALLOWED
    # Env: LIFERAY_AUTH_VERIFIER__UPPERCASER_EQUEST_UPPERCASEP_ARAMETER_UPPERCASEA_UTH_UPPERCASEV_ERIFIER_URLS_INCLUDES
    #
    #auth.verifier.RequestParameterAuthVerifier.hosts.allowed=
    #auth.verifier.RequestParameterAuthVerifier.urls.includes=N/A

##
## 認証トークン
##

    #
    # 認証トークンのセキュリティチェックを有効にするには、これをtrueに設定してください。 プロパティ "auth.token.ignore.actions" を通じて特定のアクションの、またはportlet.xmlの初期パラメータ "check-auth-token" を通じて特定のポートレットのチェックを無効にすることができます。
    #
    # Env: LIFERAY_AUTH_TOKEN_CHECK_ENABLED
    #
    auth.token.check.enabled=true

    #
    # 認証トークン クラスを設定してください。 このクラスは、com.liferay.portal.security.auth.AuthTokenを実装する必要があります。 このクラスは、CSRF攻撃を防ぐのに使われます。 詳細はhttps://issues.liferay.com/browse/LPS-8399をご確認ください。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_AUTH_TOKEN_IMPL
    #
    #auth.token.impl=com.liferay.portal.security.auth.SessionAuthToken

    #
    # 認証トークンに関して確認が行われないstrutsアクションのコンマ区切りのリストを入力してください。
    #
    # Env: LIFERAY_AUTH_TOKEN_IGNORE_ACTIONS
    #
    auth.token.ignore.actions=\
        /asset/rss,\
        \
        /blogs/edit_entry,\
        /blogs/rss,\
        /blogs/trackback,\
        \
        /blogs_aggregator/edit_entry,\
        /blogs_aggregator/rss,\
        \
        /document_library/edit_file_entry,\
        \
        /login/create_account,\
        /login/login,\
        \
        /message_boards/edit_message,\
        /message_boards/rss,\
        \
        /portal/comment/edit_discussion,\
        /portal/comment/get_comments

    #
    # 認証トークンに関して確認が行われないオリジンのコンマ区切りのリストを入力してください。
    #
    # Env: LIFERAY_AUTH_TOKEN_IGNORE_ORIGINS
    #
    #auth.token.ignore.origins=\
    #    com.liferay.portal.action.JSONServiceAction:com.liferay.portlet.expando.service.ExpandoValueServiceUtil#getJSONData,\
    #    com.liferay.portal.jsonwebservice.JSONWebServiceServiceAction:/classname/,\
    #    com.liferay.portal.jsonwebservice.JSONWebServiceServiceAction:/user/get-user-by-email-address,\
    #    com.liferay.portlet.asset.action.GetCategoriesAction,\
    #    com.liferay.portlet.portletconfiguration.action.GetLookAndFeelAction

    #
    # 認証トークンに関して確認が行われないポートレットIDのコンマ区切りのリストを入力してください。
    #
    # Env: LIFERAY_AUTH_TOKEN_IGNORE_PORTLETS
    #
    auth.token.ignore.portlets=

    #
    # 認証トークンの長さを設定してください。 長い認証トークンは生成により多くのCPUサイクルを要し、全体のパフォーマンスに影響を及ぼす可能性があります。
    #
    # Env: LIFERAY_AUTH_TOKEN_LENGTH
    #
    auth.token.length=8

    #
    # 認証トークンの生成が可能でない場合のリクエストに使われる共有秘密を設定してください (WSRPなど)。
    #
    # Env: LIFERAY_AUTH_TOKEN_SHARED_SECRET
    #
    #auth.token.shared.secret=

##
## 自動ログイン
##

    #
    # com.liferay.portal.kernel.security.auto.login.AutoLoginを実装するクラス名のコンマ区切りのリストを入力してください。 これらのクラスは、認証されていないすべてのユーザーのいずれかが、有効なユーザーIDとパスワードの組み合わせを返すまで、その全員に対して順番に実行されます。 有効な組み合わせが返されない場合、リクエストは引き続き正常に処理されます。 有効な組み合わせが返された場合、ポータルは返されたユーザーIDとパスワードの組み合わせを使って、そのユーザーを自動的にログインさせます。
    #
    # 例えば、com.liferay.portal.security.auto.login.remember.me.RememberMeAutoLoginは、"Remember Me" ボックスの確認をして、クッキーから読み取って、過去にログインしたユーザーを自動的にログインさせます。
    #
    # このインターフェイスによ、デプロイヤーは他のSSOサーバーと連動するポータルを容易に構成することが可能となります。 YaleのSSOサーバーでポータルを構成する方法の例については、com.liferay.portal.security.sso.cas.internal.auto.login.CASAutoLoginをご覧してください。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_AUTO_LOGIN_HOOKS
    #
    #auto.login.hooks=com.liferay.portal.security.sso.cas.internal.auto.login.CASAutoLogin,com.liferay.portal.security.sso.facebook.connect.auto.login.FacebookConnectAutoLogin,com.liferay.portal.security.sso.ntlm.auto.login.NtlmAutoLogin,com.liferay.portal.security.sso.openid.auto.login.OpenIdAutoLogin,com.liferay.portal.security.sso.opensso.auto.login.OpenSSOAutoLogin,com.liferay.portal.security.auto.login.remember.me.RememberMeAutoLogin

    #
    # 自動ログインに対して無視されるホストを設定してください。
    #
    # Env: LIFERAY_AUTO_LOGIN_IGNORE_HOSTS
    #
    auto.login.ignore.hosts=

    #
    # 自動ログインに対して無視されるパスを設定してください。
    #
    # Env: LIFERAY_AUTO_LOGIN_IGNORE_PATHS
    #
    auto.login.ignore.paths=

##
## SSO with MAC (メッセージ認証コード)
##

    #
    # SSO with MACを使うには、次のようにURLに掲示してください:
    #     http://localhost:8080/c/portal/login?cmd=already-registered&login=<userId|emailAddress>&password=<MAC>
    #
    # MACをパスワード欄に受け渡します。 MACにはURLに許可されていない文字が含まれている可能性があるため、URLとエンコードされていることを確認してください。
    #
    # またSSO with MACでは、system.properties内で以下のプロパティが設定されている必要があります。
    #
    #     com.liferay.util.servlet.SessionParameters=false
    #
    # 次のリンクを参照してください:
    #     https://issues.liferay.com/browse/LEP-1288
    #     http://en.wikipedia.org/wiki/Message_authentication_code
    #
    # SSO with MACを有効化するには、これをtrueに設定してください。
    #
    # Env: LIFERAY_AUTH_MAC_ALLOW
    #
    auth.mac.allow=false

    #
    # MAC暗号化に使用するアルゴリズムを設定してください。
    #
    # Env: LIFERAY_AUTH_MAC_ALGORITHM
    #
    auth.mac.algorithm=MD5

    #
    # MAC生成に使用する共有キーを設定してください。 共有キーは空白であってはならず、総当たり攻撃に耐え得るよう、十分な長さで複雑なものでなければなりません。
    #
    # Env: LIFERAY_AUTH_MAC_SHARED_KEY
    #
    auth.mac.shared.key=

##
## パスワード
##

    #
    # 移行されるパスワード暗号化アルゴリズムを指定するには、次の暗号化アルゴリズムを設定してください。 これは、6.2以前のリリースからアップグレードする場合、またはポータルでパスワードを持つユーザーが存在している状態で、パスワードの暗号化アルゴリズムを切り替えたい場合にのみ必要です。
    #
    # Env: LIFERAY_PASSWORDS_ENCRYPTION_ALGORITHM_LEGACY
    #
    #passwords.encryption.algorithm.legacy=BCRYPT
    #passwords.encryption.algorithm.legacy=MD2
    #passwords.encryption.algorithm.legacy=MD5
    #passwords.encryption.algorithm.legacy=NONE
    #passwords.encryption.algorithm.legacy=SHA
    #passwords.encryption.algorithm.legacy=SHA-256
    #passwords.encryption.algorithm.legacy=SHA-384
    #passwords.encryption.algorithm.legacy=SSHA
    #passwords.encryption.algorithm.legacy=UFC-CRYPT

    #
    # パスワードを暗号化するには、以下の暗号化アルゴリズムを設定してください。 デフォルトのアルゴリズムは、PBKDF2WithHmacSHA1 / 160/128000で、128,000ラウンドを使用して160ビットのハッシュを生成します。
    #
    # 作成ハードウェアが遅い場合には、ラウンド値を減らすことは可能ですが、2014年のOWASPでは128,000が推奨値であることにご留意ください。
    #
    # NONEに設定すると、パスワードはプレーンテキストとして、データベースに格納されます。
    #
    # Env: LIFERAY_PASSWORDS_ENCRYPTION_ALGORITHM
    #
    #passwords.encryption.algorithm=BCRYPT/10
    #passwords.encryption.algorithm=MD2
    #passwords.encryption.algorithm=MD5
    #passwords.encryption.algorithm=NONE
    passwords.encryption.algorithm=PBKDF2WithHmacSHA1/160/128000
    #passwords.encryption.algorithm=SHA
    #passwords.encryption.algorithm=SHA-256
    #passwords.encryption.algorithm=SHA-384
    #passwords.encryption.algorithm=SSHA
    #passwords.encryption.algorithm=UFC-CRYPT

    #
    # ダイジェストされたパスワードは、base64または16進エンコーディングでエンコードされます。 デフォルトはbase64です。
    #
    # Env: LIFERAY_PASSWORDS_DIGEST_ENCODING
    #
    passwords.digest.encoding=base64
    #passwords.digest.encoding=hex

    #
    # com.liferay.portal.security.pwd.Toolkitを実装するクラス名を入力してください。 このクラスは、パスワードの生成と有効化の目的で呼び出されます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_PASSWORDS_TOOLKIT
    #
    #passwords.toolkit=com.liferay.portal.security.pwd.PasswordPolicyToolkit
    #passwords.toolkit=com.liferay.portal.security.pwd.RegExpToolkit

    #
    # パスワード ツールキットとしてcom.liferay.portal.security.pwd.PasswordPolicyToolkitの使用を選択した場合には、静的または動的パスワード生成のいずれかを選択できます。 静的生成は、プロパティ "passwords.passwordpolicytoolkit.static" を通じて設定され、動的生成は、クラスcom.liferay.util.PwdGeneratorを使ってパスワードを生成します。 LDAPパスワード構文チェックを使用している場合にも、静的ジェネレータを使用する必要があり、これによってパスワードが規則に従っていることを保証できます。
    #
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_GENERATOR
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_STATIC
    #
    #passwords.passwordpolicytoolkit.generator=static
    passwords.passwordpolicytoolkit.generator=dynamic
    passwords.passwordpolicytoolkit.static=iheartliferay

    #
    # パスワード生成用の文字セットを設定してください。 これらは、バリデーション文字セットのサブセットである必要があります。
    #
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_GENERATOR_CHARSET_LOWERCASE
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_GENERATOR_CHARSET_NUMBERS
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_GENERATOR_CHARSET_SYMBOLS
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_GENERATOR_CHARSET_UPPERCASE
    #
    passwords.passwordpolicytoolkit.generator.charset.lowercase=abcdefghjkmnpqrstuvwxyz
    passwords.passwordpolicytoolkit.generator.charset.numbers=0123456789
    passwords.passwordpolicytoolkit.generator.charset.symbols=_.!@$*=-?
    passwords.passwordpolicytoolkit.generator.charset.uppercase=ABCDEFGHJKLMNPQRSTUVWXYZ

    #
    # パスワード バリデーション用の文字セットを設定してください。
    #
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_VALIDATOR_CHARSET_LOWERCASE
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_VALIDATOR_CHARSET_NUMBERS
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_VALIDATOR_CHARSET_SYMBOLS
    # Env: LIFERAY_PASSWORDS_PASSWORDPOLICYTOOLKIT_VALIDATOR_CHARSET_UPPERCASE
    #
    passwords.passwordpolicytoolkit.validator.charset.lowercase=abcdefghijklmnopqrstuvwxyz
    passwords.passwordpolicytoolkit.validator.charset.numbers=0123456789
    passwords.passwordpolicytoolkit.validator.charset.symbols=_.!@$*=-?
    passwords.passwordpolicytoolkit.validator.charset.uppercase=ABCDEFGHIJKLMNOPQRSTUVWXYZ

    #
    # パスワード ツールキットとしてcom.liferay.portal.security.pwd.RegExpToolkitの使用を選択した場合には、パスワードの生成および有効化に使われる通常の表現パターンを設定してください。
    #
    # Javaで機能するよう、 \ は \\ に置き換えられることにご注意ください。
    #
    # 最初のパターンでは、パスワードに数字または文字で構成された有効な文字が、少なくとも4つ必要であることを確実にします。
    #
    # 2番目のパターンでは、パスワードに数字または文字で構成された有効な文字が、少なくとも8つ必要であることを確実にします。
    #
    # Env: LIFERAY_PASSWORDS_REGEXPTOOLKIT_PATTERN
    #
    passwords.regexptoolkit.pattern=(?=.{4})(?:[a-zA-Z0-9]*)
    #passwords.regexptoolkit.pattern=(?=.{8})(?:[a-zA-Z0-9]*)

    #
    # パスワード生成の長さおよびキーを設定してください。
    #
    # Env: LIFERAY_PASSWORDS_REGEXPTOOLKIT_CHARSET
    # Env: LIFERAY_PASSWORDS_REGEXPTOOLKIT_LENGTH
    #
    #passwords.regexptoolkit.charset=0123456789
    passwords.regexptoolkit.charset=0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz
    #passwords.regexptoolkit.length=4
    passwords.regexptoolkit.length=8

    #
    # デフォルトのパスワード ポリシーのプロパティを設定してください。
    #
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_ALLOW_DICTIONARY_WORDS
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_CHANGEABLE
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_CHANGE_REQUIRED
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_CHECK_SYNTAX
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_EXPIREABLE
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_GRACE_LIMIT
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_HISTORY
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_HISTORY_COUNT
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_LOCKOUT
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_LOCKOUT_DURATION
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_MAX_AGE
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_MAX_FAILURE
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_MIN_AGE
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_MIN_ALPHANUMERIC
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_MIN_LENGTH
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_MIN_LOWERCASE
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_MIN_NUMBERS
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_MIN_SYMBOLS
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_MIN_UPPERCASE
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_NAME
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_REGEX
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_RESET_FAILURE_COUNT
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_RESET_TICKET_MAX_AGE
    # Env: LIFERAY_PASSWORDS_DEFAULT_POLICY_WARNING_TIME
    #
    passwords.default.policy.allow.dictionary.words=true
    passwords.default.policy.changeable=true
    passwords.default.policy.change.required=true
    passwords.default.policy.check.syntax=false
    passwords.default.policy.expireable=false
    passwords.default.policy.grace.limit=0
    passwords.default.policy.history=false
    passwords.default.policy.history.count=6
    passwords.default.policy.lockout=false
    passwords.default.policy.lockout.duration=0
    passwords.default.policy.max.age=8640000
    passwords.default.policy.max.failure=3
    passwords.default.policy.min.age=0
    passwords.default.policy.min.alphanumeric=0
    passwords.default.policy.min.length=6
    passwords.default.policy.min.lowercase=0
    passwords.default.policy.min.numbers=1
    passwords.default.policy.min.symbols=0
    passwords.default.policy.min.uppercase=1
    passwords.default.policy.name=Default Password Policy
    passwords.default.policy.regex=(?=.{4})(?:[a-zA-Z0-9]*)
    passwords.default.policy.reset.failure.count=600
    passwords.default.policy.reset.ticket.max.age=86400
    passwords.default.policy.warning.time=86400

##
## 許可
##

    #
    # オブジェクトにおけるアクションの許可をチェックするには、com.liferay.portal.security.permission.PermissionCheckerFactoryで使用されるデフォルトの許可チェッカークラスを設定してください。 このクラスは、com.liferay.portal.security.permission.PermissionCheckerを実装するカスタムクラスで上書きされる可能性があります。
    #
    # Env: LIFERAY_PERMISSIONS_CHECKER
    #
    #permissions.checker=com.liferay.portal.security.permission.SimplePermissionChecker
    permissions.checker=com.liferay.portal.security.permission.AdvancedPermissionChecker

    #
    # 許可のキャッシュ化をブロックする構成とするには、これをtrueに設定してください。 詳細については、プロパティ "ehcache.blocking.cache.allowed" をご確認ください。
    #
    # Env: LIFERAY_PERMISSIONS_OBJECT_BLOCKING_CACHE
    #
    permissions.object.blocking.cache=false

    #
    # カスタムSQLファインダを使用して、リソースの許可を確認するタイミングを指定するには、この閾値を構成してください。
    #
    # Env: LIFERAY_PERMISSIONS_ROLE_RESOURCE_PERMISSION_QUERY_THRESHOLD
    #
    permissions.role.resource.permission.query.threshold=10

    #
    # インラインSQL許可チェックを有効にするには、これをtrueに設定してください。
    #
    # Env: LIFERAY_PERMISSIONS_INLINE_SQL_CHECK_ENABLED
    #
    permissions.inline.sql.check.enabled=true

    #
    # リソースブロックIDを直接インラインSQLステートメントに受け渡すタイミング、およびサブセレクトを使ってリソースブロックIDを決定するタイミングを指定するには、この閾値を構成してください。
    #
    # Env: LIFERAY_PERMISSIONS_INLINE_SQL_RESOURCE_BLOCK_QUERY_THRESHOLD
    #
    permissions.inline.sql.resource.block.query.threshold=100

    #
    # デフォルトでカスタム アトリビュートを読み取るときに、許可チェックを使用するには、これをtrueに設定してください。
    #
    # Env: LIFERAY_PERMISSIONS_CUSTOM_ATTRIBUTE_READ_CHECK_BY_DEFAULT
    #
    permissions.custom.attribute.read.check.by.default=true

    #
    # デフォルトでカスタム アトリビュートを書き込むときに、許可チェックを使用するには、これをtrueに設定してください。
    #
    # Env: LIFERAY_PERMISSIONS_CUSTOM_ATTRIBUTE_WRITE_CHECK_BY_DEFAULT
    #
    permissions.custom.attribute.write.check.by.default=true

    #
    # 特定のアイテムの許可をチェックする際に、親カテゴリまたはフォルダの閲覧許可を自動的にチェックするには、以下をtrueに設定してください。
    #
    # 例えばtrueに設定すると、ユーザーがドキュメントにアクセスできるようになるには、そのドキュメントのフォルダとすべての親フォルダに対する閲覧許可を持っている必要があります。 あるいは、ユーザーがコメントにアクセスするには、コメントのカテゴリとすべての親カテゴリに対する閲覧許可を持っている必要があります。
    #
    # Env: LIFERAY_PERMISSIONS_VIEW_DYNAMIC_INHERITANCE
    #
    permissions.view.dynamic.inheritance=true

    #
    # モデル間の許可の伝達を可能にするには、以下をtrueに設定してください。
    #
    # 例えば、特定のWikiノードに対する許可を設定する際に、あるロールに許可 (DELETEなど) を割り当てると、その許可の割り当ては、そのWikiノードに属するすべてのWikiページにも伝達されます。
    #
    # モデル間での許可伝達のされ方に関する実際のロジックは、ポートレットごとに指定されます。 liferay-portlet.xmlのエレメント "permission-propagator" の使用をご参照ください。
    #
    # Env: LIFERAY_PERMISSIONS_PROPAGATION_ENABLED
    #
    permissions.propagation.enabled=false

    #
    # リソースが、すべてのユーザーにゲストロールがあると仮定する必要がある場合は、これをtrueに設定してください。リソースが、すべてのユーザーにないと仮定する場合には、これをfalseに設定してください ゲストロール、従って、ゲストロールに属する許可を 自動で引き継ぐことはありません。
    #
    # このプロパティを偽に設定することにより、ユーザーが サイトメンバーやユーザー等のロールへ許可を付与する必要が生じる可能性があります。
    #
    # Env: LIFERAY_PERMISSIONS_CHECK_GUEST_ENABLED
    #
    permissions.check.guest.enabled=true

##
## スタートアップ・イベント
##

    #
    # 次を拡張するクラス名をコンマ区切りで入力してください。 com.liferay.portal.struts.SimpleAction.これらのクラスは 特定のイベントで実行します。
    #

    #
    # グローバルスタートアップイベントはポータルの開始時に一度実行します。
    #
    # Env: LIFERAY_GLOBAL_STARTUP_EVENTS
    #
    global.startup.events=com.liferay.portal.events.GlobalStartupAction,com.liferay.portal.events.CryptoStartupAction

    #
    # 開始するポータルのウェブサイトインスタンス毎に実行するアプリケーションスタートアップイベント。
    #
    # Env: LIFERAY_APPLICATION_STARTUP_EVENTS
    #
    application.startup.events=com.liferay.portal.events.AppStartupAction,com.liferay.portal.events.ChannelHubAppStartupAction
    #application.startup.events=com.liferay.portal.events.AppStartupAction,com.liferay.portal.events.SampleAppStartupAction

##
## シャットダウン・イベント
##

    #
    # 次を拡張するクラス名をコンマ区切りで入力してください。 com.liferay.portal.struts.SimpleAction.これらのクラスは 特定のイベントで実行します。
    #

    #
    # グローバルシャットダウンイベントはポータルの開始時に一度実行します。
    #
    # Env: LIFERAY_GLOBAL_SHUTDOWN_EVENTS
    #
    global.shutdown.events=com.liferay.portal.events.GlobalShutdownAction

    #
    # 開始するポータルのウェブサイトインスタンス毎に実行するアプリケーションシャットダウンイベント。
    #
    # Env: LIFERAY_APPLICATION_SHUTDOWN_EVENTS
    #
    application.shutdown.events=com.liferay.portal.events.AppShutdownAction,com.liferay.portal.events.ChannelHubAppShutdownAction

    #
    # シャットダウン時にプログラムでJavaプロセスを停止します。これはワークアラウンドで、 TomcatとLinuxのバグでプロセスが永久にハングアップした際のためのものです。
    #
    # 詳細は https://issues.liferay.com/browse/LEP-2048 をご参照下さい。
    #
    # Env: LIFERAY_SHUTDOWN_PROGRAMMATICALLY_EXIT
    #
    shutdown.programmatically.exit=false

##
## ポータル・イベント
##

    #
    # 次を拡張するクラス名をコンマ区切りで入力してください。 com.liferay.portal.kernel.events.Action.これらのクラスは 特定のイベントの前後いずれかに実行します。
    #

    #
    # サーブレットのサービスイベント(サービス前のイベントで関連するエラーがあり、 イベント実行時に例外が投げられる場合に 該当するページへ転送します)。ストラッツがリクエストを処理する前の サービス前のイベント。ストラッツがリクエストを処理した後の サービス後のイベント。
    #
    # Env: LIFERAY_SERVLET_SERVICE_EVENTS_POST
    # Env: LIFERAY_SERVLET_SERVICE_EVENTS_PRE
    # Env: LIFERAY_SERVLET_SERVICE_EVENTS_PRE_ERROR_PAGE
    #
    servlet.service.events.pre=com.liferay.portal.events.ServicePreAction,com.liferay.portal.events.ThemeServicePreAction
    #servlet.service.events.pre=com.liferay.portal.events.LogMemoryUsageAction,com.liferay.portal.events.LogThreadCountAction,com.liferay.portal.events.ServicePreAction,com.liferay.portal.events.DeviceServicePreAction,com.liferay.portal.events.ThemeServicePreAction
    #servlet.service.events.pre=com.liferay.portal.events.LogSessionIdAction,com.liferay.portal.events.ServicePreAction,com.liferay.portal.events.DeviceServicePreAction,com.liferay.portal.events.ThemeServicePreAction
    #servlet.service.events.pre=com.liferay.portal.events.ServicePreAction,com.liferay.portal.events.DeviceServicePreAction,com.liferay.portal.events.ThemeServicePreAction,com.liferay.portal.events.RandomLayoutAction
    #servlet.service.events.pre=com.liferay.portal.events.ServicePreAction,com.liferay.portal.events.DeviceServicePreAction,com.liferay.portal.events.ThemeServicePreAction,com.liferay.portal.events.RandomLookAndFeelAction
    #servlet.service.events.pre=com.liferay.portal.events.ServicePreAction,com.liferay.portal.events.DeviceServicePreAction,com.liferay.portal.events.ThemeServicePreAction,com.liferay.portal.events.SecureRequestAction
    servlet.service.events.pre.error.page=/common/error.jsp
    servlet.service.events.post=com.liferay.portal.events.ServicePostAction

    #
    # ログイン・イベント
    #
    # Env: LIFERAY_LOGIN_EVENTS_POST
    # Env: LIFERAY_LOGIN_EVENTS_PRE
    #
    login.events.pre=com.liferay.portal.events.LoginPreAction
    login.events.post=com.liferay.portal.events.ChannelLoginPostAction,com.liferay.portal.events.DefaultLandingPageAction,com.liferay.portal.events.LoginPostAction

    #
    # ログアウト・イベント
    #
    # Env: LIFERAY_LOGOUT_EVENTS_POST
    # Env: LIFERAY_LOGOUT_EVENTS_PRE
    #
    logout.events.pre=com.liferay.portal.events.LogoutPreAction
    logout.events.post=com.liferay.portal.events.LogoutPostAction,com.liferay.portal.events.DefaultLogoutPageAction
    #logout.events.post=com.liferay.portal.events.LogoutPostAction,com.liferay.portal.events.GarbageCollectorAction

##
## デフォルト・ランディング・ページ
##

    #
    # サーバーパスに対するログインユーザーのためのデフォルトランディングページを設定してください。 このページはユーザーがログイン後移動的にリダイレクトされる ページです。例えば、デフォルト・ランディング・ページを次としたい場合には、 http://localhost:8080/web/guest/login、これを /web/guest/login に設定します。この 機能を有効化するためには、auth.forward.by.last.path を真に設定します。ビヘイビアをカスタマイズするためには、 com.liferay.portal.events.DefaultLandingPageAction を 上記の "login.events.post" プロパティからご参照ください。
    #
    # 次の変数が使用できます。 ${liferay:screenName} および ${liferay:userId}.
    #
    # Env: LIFERAY_DEFAULT_LANDING_PAGE_PATH
    #
    default.landing.page.path=
    #default.landing.page.path=/web/guest/login
    #default.landing.page.path=/user/${liferay:screenName}/home

##
## デフォルト・ログアウト・ページ
##

    #
    # サーバーパスに対するユーザーのためのデフォルト・ログアウト・ページを設定してください。 このページはユーザーがログアウト後移動的にリダイレクトされるページです。 例えば、デフォルト・ランディング・ページを次としたい場合には、 http://localhost:8080/web/guest/logout、これを /web/guest/loginout に設定します。この 機能を有効化するためには、auth.forward.by.last.path を真に設定します。ビヘイビアをカスタマイズするためには、 com.liferay.portal.events.DefaultLogoutPageAction を 上記の "loginout.events.post" プロパティからご参照ください。
    #
    # Env: LIFERAY_DEFAULT_LOGOUT_PAGE_PATH
    #
    default.logout.page.path=
    #default.logout.page.path=/web/guest/logout

##
## デフォルト・ゲスト・パブリック・レイアウト
##

    #
    # ゲストグループには少なくとも1つのパブリックページが必要です。最初の パブリックページの設定は次のプロパティで定義されます。
    #
    # 複数のページを設定したい場合には、LARファイル特定のために次のプロパティを設定します。 "default.guest.public.layouts.lar"
    #
    # より複雑なビヘイビアのためには、addDefaultGuestPublicLayoutsメソッドを com.liferay.portal.service.impl.GroupLocalServiceImpl. 内で上書きします。
    #

    #
    # パブリックレイアウト名を設定してください。
    #
    # Env: LIFERAY_DEFAULT_GUEST_PUBLIC_LAYOUT_NAME
    #
    default.guest.public.layout.name=Welcome

    #
    # パブリックレイアウトのテンプレートIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_GUEST_PUBLIC_LAYOUT_TEMPLATE_ID
    #
    default.guest.public.layout.template.id=1_column

    #
    # レイアウトテンプレートで特定されるカラムのポートレットIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_GUEST_PUBLIC_LAYOUT_COLUMN_MINUS__NUMBER1_
    # Env: LIFERAY_DEFAULT_GUEST_PUBLIC_LAYOUT_COLUMN_MINUS__NUMBER2_
    # Env: LIFERAY_DEFAULT_GUEST_PUBLIC_LAYOUT_COLUMN_MINUS__NUMBER3_
    # Env: LIFERAY_DEFAULT_GUEST_PUBLIC_LAYOUT_COLUMN_MINUS__NUMBER4_
    #
    default.guest.public.layout.column-1=com_liferay_hello_world_web_portlet_HelloWorldPortlet
    default.guest.public.layout.column-2=
    default.guest.public.layout.column-3=
    default.guest.public.layout.column-4=

    #パブリックレイアウトのフレンドリーURLを設定してください。Set the friendly url of the public layout.
    #
    default.guest.public.layout.friendly.url=/home

    #
    # パブリックレイアウトのレギュラーテーマIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_GUEST_PUBLIC_LAYOUT_REGULAR_THEME_ID
    #
    #default.guest.public.layout.regular.theme.id=classic_WAR_classictheme

    #
    # パブリックレイアウトのレギュラー配色IDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_GUEST_PUBLIC_LAYOUT_REGULAR_COLOR_SCHEME_ID
    #
    #default.guest.public.layout.regular.color.scheme.id=01

    #
    # ゲストパブリックレイアウトの作成に用いるLARファイルを特定してください。 このプロパティを設定すると、従前のレイアウトプロパティは無視されます。
    #
    # Env: LIFERAY_DEFAULT_GUEST_PUBLIC_LAYOUTS_LAR
    #
    #default.guest.public.layouts.lar=${liferay.home}/deploy/default_guest_public.lar

##
## デフォルト・ユーザー・プライベート・レイアウト
##

    #
    # プロパティ "layout.user.private.layouts.enabled" と "layout.user.private.layouts.auto.create" の両方を真に設定すると、 ユーザーには自動でプライベートレイアウトが作成されます。次の 設定は最初のプライベートページの作成に使用されます。
    #
    # 複数のページを設定したい場合には、LARファイル特定のために次のプロパティを設定します。 "default.user.private.layouts.lar"
    #
    # より複雑なビヘイビアのためには、addDefaultUserPrivateLayoutsメソッドを com.liferay.portal.events.ServicePreAction.内で上書きします。
    #

    #
    # プライベートレイアウト名を設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUT_NAME
    #
    default.user.private.layout.name=Welcome

    #
    # プライベートレイアウトのテンプレートIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUT_TEMPLATE_ID
    #
    default.user.private.layout.template.id=1_column

    #
    # レイアウトテンプレートで特定されるカラムのポートレットIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUT_COLUMN_MINUS__NUMBER1_
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUT_COLUMN_MINUS__NUMBER2_
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUT_COLUMN_MINUS__NUMBER3_
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUT_COLUMN_MINUS__NUMBER4_
    #
    default.user.private.layout.column-1=com_liferay_site_my_sites_web_portlet_MySitesPortlet
    default.user.private.layout.column-2=
    default.user.private.layout.column-3=
    default.user.private.layout.column-4=

    #
    # プライベートレイアウトのフレンドリーURLを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUT_FRIENDLY_URL
    #
    default.user.private.layout.friendly.url=/home

    #
    # プライベートレイアウトのレギュラーテーマIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUT_REGULAR_THEME_ID
    #
    default.user.private.layout.regular.theme.id=userdashboard_WAR_userdashboardtheme

    #
    # プライベートレイアウトのレギュラー配色IDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUT_REGULAR_COLOR_SCHEME_ID
    #
    #default.user.private.layout.regular.color.scheme.id=01

    #
    # ユーザープライベートレイアウトの作成に用いるLARファイルを特定してください。この プロパティを設定すると、従前のレイアウトプロパティは無視されます。
    #
    # Env: LIFERAY_DEFAULT_USER_PRIVATE_LAYOUTS_LAR
    #
    #default.user.private.layouts.lar=${liferay.home}/deploy/default_user_private.lar

##
## デフォルト・ユーザー・パブリック・レイアウト
##

    #
    # プロパティ "layout.user.public.layouts.enabled" と "layout.user.public.layouts.auto.create" の両方を真に設定すると、 ユーザーには自動でパブリックレイアウトが作成されます。次の 設定は最初のパブリックページの作成に使用されます。
    #
    # 複数のページを設定したい場合には、LARファイル特定のために次のプロパティを設定します。 "default.user.public.layouts.lar"
    #
    # より複雑なビヘイビアのためには、addDefaultUserPublicLayoutsメソッドを com.liferay.portal.events.ServicePreAction.内で上書きします。
    #

    #
    # パブリックレイアウト名を設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUT_NAME
    #
    default.user.public.layout.name=Welcome

    #
    # パブリックレイアウトのテンプレートIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUT_TEMPLATE_ID
    #
    default.user.public.layout.template.id=1_column

    #
    # レイアウトテンプレートで特定されるカラムのポートレットIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUT_COLUMN_MINUS__NUMBER1_
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUT_COLUMN_MINUS__NUMBER2_
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUT_COLUMN_MINUS__NUMBER3_
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUT_COLUMN_MINUS__NUMBER4_
    #
    default.user.public.layout.column-1=
    default.user.public.layout.column-2=
    default.user.public.layout.column-3=
    default.user.public.layout.column-4=

    #
    # パブリックレイアウトのフレンドリーURLを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUT_FRIENDLY_URL
    #
    default.user.public.layout.friendly.url=/home

    #
    # パブリックレイアウトのレギュラーテーマIDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUT_REGULAR_THEME_ID
    #
    default.user.public.layout.regular.theme.id=userprofile_WAR_userprofiletheme

    #
    # パブリックレイアウトのレギュラー配色IDを設定してください。
    #
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUT_REGULAR_COLOR_SCHEME_ID
    #
    #default.user.public.layout.regular.color.scheme.id=01

    #
    # ユーザーパブリックレイアウトの作成に用いるLARファイルを特定してください。この プロパティを設定すると、従前のレイアウトプロパティは無視されます。
    #
    # Env: LIFERAY_DEFAULT_USER_PUBLIC_LAYOUTS_LAR
    #
    #default.user.public.layouts.lar=${liferay.home}/deploy/default_user_public.lar

##
## デフォルト管理者
##

    #
    # デフォルト管理者パスワードを設定してください。
    #
    # Env: LIFERAY_DEFAULT_ADMIN_PASSWORD
    #
    default.admin.password=test

    #
    # デフォルト管理者スクリーン名のプレフィックスを設定してください。
    #
    # Env: LIFERAY_DEFAULT_ADMIN_SCREEN_NAME
    #
    default.admin.screen.name=test

    #
    # デフォルト管理者メールアドレスのプレフィックスを設定してください。
    #
    # Env: LIFERAY_DEFAULT_ADMIN_EMAIL_ADDRESS_PREFIX
    #
    default.admin.email.address.prefix=test

    #
    # デフォルト管理者の名を設定してください。
    #
    # Env: LIFERAY_DEFAULT_ADMIN_FIRST_NAME
    #
    default.admin.first.name=Test

    #
    # デフォルト管理者のミドルネームを設定してください。
    #
    # Env: LIFERAY_DEFAULT_ADMIN_MIDDLE_NAME
    #
    default.admin.middle.name=

    #
    # デフォルト管理者の姓を設定してください。
    #
    # Env: LIFERAY_DEFAULT_ADMIN_LAST_NAME
    #
    default.admin.last.name=Test

##
## レイアウト
##

    #
    # プライベートレイアウトを有効化するか否かを設定してください。プライベートレイアウトを有効化するか否かは ユーザーにプライベートレイアウトがない場合には自動生成されます。もし プライベートレイアウトが有効化されていない場合には、プロパティ "layout.user.private.layouts.auto.create" は偽と見なされます。
    #
    # Env: LIFERAY_LAYOUT_USER_PRIVATE_LAYOUTS_AUTO_CREATE
    # Env: LIFERAY_LAYOUT_USER_PRIVATE_LAYOUTS_ENABLED
    #
    layout.user.private.layouts.enabled=true
    layout.user.private.layouts.auto.create=true

    #
    # ユーザーがプライベートページを取得するためにパワーユーザーロールを要する場合にはこれを真に設定して ください。
    #
    # Env: LIFERAY_LAYOUT_USER_PRIVATE_LAYOUTS_POWER_USER_REQUIRED
    #
    layout.user.private.layouts.power.user.required=false

    #
    # パブリックレイアウトを有効化するか否かを設定してください。パブリックレイアウトを有効化するか否かは ユーザーにパブリックレイアウトがない場合には自動生成されます。もし パブリックレイアウトが有効化されていない場合には、プロパティ "layout.user.public.layouts.auto.create" は偽と見なされます。
    #
    # Env: LIFERAY_LAYOUT_USER_PUBLIC_LAYOUTS_AUTO_CREATE
    # Env: LIFERAY_LAYOUT_USER_PUBLIC_LAYOUTS_ENABLED
    #
    layout.user.public.layouts.enabled=true
    layout.user.public.layouts.auto.create=true

    #
    # ユーザーがパブリックページを取得するためにパワーユーザーロールを要する場合にはこれを真に設定して ください。
    #
    # Env: LIFERAY_LAYOUT_USER_PUBLIC_LAYOUTS_POWER_USER_REQUIRED
    #
    layout.user.public.layouts.power.user.required=false

    #
    # デフォルトの設定レイアウト。
    #
    # Env: LIFERAY_LAYOUT_CONFIGURATION_ACTION_DELETE
    # Env: LIFERAY_LAYOUT_CONFIGURATION_ACTION_UPDATE
    # Env: LIFERAY_LAYOUT_EDIT_PAGE
    # Env: LIFERAY_LAYOUT_FIRST_PAGEABLE
    # Env: LIFERAY_LAYOUT_PARENTABLE
    # Env: LIFERAY_LAYOUT_SITEMAPABLE
    # Env: LIFERAY_LAYOUT_URL
    # Env: LIFERAY_LAYOUT_URL_FRIENDLIABLE
    # Env: LIFERAY_LAYOUT_VIEW_PAGE
    #
    layout.edit.page=/portal/layout/edit/portlet.jsp
    layout.view.page=/portal/layout/view/portlet.jsp
    layout.url=${liferay:mainPath}/portal/layout?p_l_id=${liferay:plid}&p_v_l_s_g_id=${liferay:pvlsgid}
    layout.url.friendliable=true
    layout.parentable=true
    layout.sitemapable=true
    layout.first.pageable=true
    #layout.configuration.action.update=
    #layout.configuration.action.delete=

    #
    # ポートレットレイアウトの設定はデフォルト設定から引き継がれます。
    #
    # Env: LIFERAY_LAYOUT_CONFIGURATION_ACTION_DELETE_OPENBRACKET_PORTLET_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_CONFIGURATION_ACTION_UPDATE_OPENBRACKET_PORTLET_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_EDIT_PAGE_OPENBRACKET_PORTLET_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_PARENTABLE_OPENBRACKET_PORTLET_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_URL_FRIENDLIABLE_OPENBRACKET_PORTLET_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_URL_OPENBRACKET_PORTLET_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_VIEW_PAGE_OPENBRACKET_PORTLET_CLOSEBRACKET_
    #
    #layout.edit.page[portlet]=/portal/layout/edit/portlet.jsp
    #layout.view.page[portlet]=/portal/layout/view/portlet.jsp
    #layout.url[portlet]=${liferay:mainPath}/portal/layout?p_l_id=${liferay:plid}&p_v_l_s_g_id=${liferay:pvlsgid}
    #layout.url.friendliable[portlet]=true
    #layout.parentable[portlet]=true
    #layout.configuration.action.update[portlet]=
    #layout.configuration.action.delete[portlet]=

    #
    # パネルレイアウトの設定。
    #
    # Env: LIFERAY_LAYOUT_EDIT_PAGE_OPENBRACKET_PANEL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_FIRST_PAGEABLE_OPENBRACKET_PANEL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_PARENTABLE_OPENBRACKET_PANEL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_URL_FRIENDLIABLE_OPENBRACKET_PANEL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_URL_OPENBRACKET_PANEL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_VIEW_PAGE_OPENBRACKET_PANEL_CLOSEBRACKET_
    #
    layout.edit.page[panel]=/portal/layout/edit/panel.jsp
    layout.view.page[panel]=/portal/layout/view/panel.jsp
    layout.url[panel]=${liferay:mainPath}/portal/layout?p_l_id=${liferay:plid}&p_v_l_s_g_id=${liferay:pvlsgid}
    layout.url.friendliable[panel]=true
    layout.parentable[panel]=true
    layout.first.pageable[panel]=true

    #
    # 組み込みレイアウトの設定。
    #
    # Env: LIFERAY_LAYOUT_CONFIGURATION_ACTION_DELETE_OPENBRACKET_EMBEDDED_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_CONFIGURATION_ACTION_UPDATE_OPENBRACKET_EMBEDDED_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_EDIT_PAGE_OPENBRACKET_EMBEDDED_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_FIRST_PAGEABLE_OPENBRACKET_EMBEDDED_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_PARENTABLE_OPENBRACKET_EMBEDDED_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_SITEMAPABLE_OPENBRACKET_EMBEDDED_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_URL_FRIENDLIABLE_OPENBRACKET_EMBEDDED_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_URL_OPENBRACKET_EMBEDDED_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_VIEW_PAGE_OPENBRACKET_EMBEDDED_CLOSEBRACKET_
    #
    layout.edit.page[embedded]=/portal/layout/edit/embedded.jsp
    layout.view.page[embedded]=/portal/layout/view/embedded.jsp
    layout.url[embedded]=${liferay:mainPath}/portal/layout?p_l_id=${liferay:plid}&p_v_l_s_g_id=${liferay:pvlsgid}
    layout.url.friendliable[embedded]=true
    layout.parentable[embedded]=false
    layout.sitemapable[embedded]=true
    layout.first.pageable[embedded]=true
    #layout.configuration.action.update[embedded]=
    #layout.configuration.action.delete[embedded]=

    #
    # URLレイアウトの設定。
    #
    # Env: LIFERAY_LAYOUT_CONFIGURATION_ACTION_DELETE_OPENBRACKET_URL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_CONFIGURATION_ACTION_UPDATE_OPENBRACKET_URL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_EDIT_PAGE_OPENBRACKET_URL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_FIRST_PAGEABLE_OPENBRACKET_URL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_PARENTABLE_OPENBRACKET_URL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_SITEMAPABLE_OPENBRACKET_URL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_URL_FRIENDLIABLE_OPENBRACKET_URL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_URL_OPENBRACKET_URL_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_VIEW_PAGE_OPENBRACKET_URL_CLOSEBRACKET_
    #
    layout.edit.page[url]=/portal/layout/edit/url.jsp
    layout.view.page[url]=
    layout.url[url]=${url}
    layout.url.friendliable[url]=true
    layout.parentable[url]=false
    layout.sitemapable[url]=false
    layout.first.pageable[url]=false
    #layout.configuration.action.update[url]=
    #layout.configuration.action.delete[url]=

    #
    # 移動が不可能であらゆるレイアウトで常に表示される静的ポートレットを 特定してください。静的ポートレットは レイアウトについて動的に構成可能なポートレットに優先します。
    #
    # 例えば、Hello Worldポートレットが常に ユーザーレイアウトの最初のカラムの反復開始で表示されるようにしたい場合には、 プロパティ"layout.static.portlets.start.column-1[user]"を "47"に設定してください。もし Hello Worldポートレットが常に ユーザーレイアウトの2番目のカラムの最後で表示されるようにしたい場合には、 プロパティ"layout.static.portlets.end.column-2[user]" を"47"に設定してください。 ポートレットIDのリストをコンマ区切りで入力して複数のポートレットを入力することも可能です。もし ポートレットのインデックス化が可能な場合には、サフィックス "_INSTANCE_abcd"を "abcd"がランダムな英数字のストリングであるポートレットIDに追加してください。
    #
    # 静的ポートレットはプロパティに基づきフェッチされ、 このプロパティはEasyConfを使ったカスタムフィルターで管理されます。デフォルトで使用可能なフィルターは ユーザー、コミュニティ、組織です。
    #
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER1__OPENBRACKET_USER_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER2__OPENBRACKET_USER_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER3__OPENBRACKET_USER_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER1__OPENBRACKET_USER_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER2__OPENBRACKET_USER_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER3__OPENBRACKET_USER_CLOSEBRACKET_
    #
    #layout.static.portlets.start.column-1[user]=6
    #layout.static.portlets.end.column-1[user]=14
    #layout.static.portlets.start.column-2[user]=71_INSTANCE_abcd,7
    #layout.static.portlets.end.column-2[user]=34,70
    #layout.static.portlets.start.column-3[user]=
    #layout.static.portlets.end.column-3[user]=

    #
    # 静的ポートレットを レイアウトのフレンドリーURLに基づき設定することも可能です。
    #
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER2__OPENBRACKET_REGULAR_MINUS_SITE_CLOSEBRACKET__OPENBRACKET__SLASH_HOME_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER1__OPENBRACKET_USER_CLOSEBRACKET__OPENBRACKET__SLASH_HOME_CLOSEBRACKET_
    #
    #layout.static.portlets.start.column-1[user][/home]=6
    #layout.static.portlets.end.column-2[regular-site][/home]=14

    #
    # レギュラーサイトのページの静的ポートレットを設定してください。
    #
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER1__OPENBRACKET_REGULAR_MINUS_SITE_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER2__OPENBRACKET_REGULAR_MINUS_SITE_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER3__OPENBRACKET_REGULAR_MINUS_SITE_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER1__OPENBRACKET_REGULAR_MINUS_SITE_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER2__OPENBRACKET_REGULAR_MINUS_SITE_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER3__OPENBRACKET_REGULAR_MINUS_SITE_CLOSEBRACKET_
    #
    #layout.static.portlets.start.column-1[regular-site]=
    #layout.static.portlets.end.column-1[regular-site]=
    #layout.static.portlets.start.column-2[regular-site]=
    #layout.static.portlets.end.column-2[regular-site]=
    #layout.static.portlets.start.column-3[regular-site]=
    #layout.static.portlets.end.column-3[regular-site]=

    #
    # 組織サイトのページの静的ポートレットを設定してください。
    #
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER1__OPENBRACKET_ORGANIZATION_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER2__OPENBRACKET_ORGANIZATION_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_END_COLUMN_MINUS__NUMBER3__OPENBRACKET_ORGANIZATION_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER1__OPENBRACKET_ORGANIZATION_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER2__OPENBRACKET_ORGANIZATION_CLOSEBRACKET_
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_START_COLUMN_MINUS__NUMBER3__OPENBRACKET_ORGANIZATION_CLOSEBRACKET_
    #
    #layout.static.portlets.start.column-1[organization]=
    #layout.static.portlets.end.column-1[organization]=
    #layout.static.portlets.start.column-2[organization]=
    #layout.static.portlets.end.column-2[organization]=
    #layout.static.portlets.start.column-3[organization]=
    #layout.static.portlets.end.column-3[organization]=

    #
    # 全てのレイアウトに表示される静的ポートレットを設定してください。これらのポートレットの 表示されるタイミングのロジックについてはlayout_common taglib をご参照ください。 例えば、これらのポートレットはポートレットを含む可能性があり、 ポップアップ状態にないレイアウトのみを表示します。
    #
    # Env: LIFERAY_LAYOUT_STATIC_PORTLETS_ALL
    #
    layout.static.portlets.all=

    #
    # 次のためのプライベートグループ、プライベートユーザー、パブリックサーブレットマッピングを設定してください。 com.liferay.portal.servlet.FriendlyURLServlet.この値は web.xml.で設定されたサーブレットマッピングと一致しなければなりません。
    #
    # 例えば、プライベートグループページが"/group"へマップされ、 グループのフレンドリーURLが"/guest"に、レイアウトのフレンドリーURLが "/company/community"に設定されている場合、ページのフレンドリーURLは次のようになります。 http://www.liferay.com/group/guest/company/community.プライベートグループページは サイトのプライベートページへマップされ、認証された 正当な許可を有するユーザーのみに利用可能です。
    #
    # 例えば、パブリックページが"/web"へマップされ、 グループまたはユーザーのフレンドリーURLが"/guest"に、レイアウトのフレンドリーURLが "/company/community"に設定されている場合、ページのフレンドリーURLは次のようになります。 http://www.liferay.com/web/guest/company/community.パブリックページは 未認証のユーザーにも利用可能です。
    #
    # ユーザー、グループ、レイアウトのフレンドリーURLは ランタイム中に設定可能です。
    #
    # Env: LIFERAY_LAYOUT_FRIENDLY_URL_PRIVATE_GROUP_SERVLET_MAPPING
    # Env: LIFERAY_LAYOUT_FRIENDLY_URL_PRIVATE_USER_SERVLET_MAPPING
    # Env: LIFERAY_LAYOUT_FRIENDLY_URL_PUBLIC_SERVLET_MAPPING
    #
    layout.friendly.url.private.group.servlet.mapping=/group
    layout.friendly.url.private.user.servlet.mapping=/user
    layout.friendly.url.public.servlet.mapping=/web

    #
    # ユーザーが存在しないページのフレンドリーURLを要求した場合にはこのリソースへリダイレクトしてください。何も表示しないよう空白としてください。
    #
    # サイト用の類似の構成が次のプロパティで管理されます。 "sites.friendly.url.page.not.found".
    #
    # 注意: 上位互換性のため、これは次のプロパティを上書きします。 404ステータスコード用の"layout.show.http.status"。
    #
    # Env: LIFERAY_LAYOUT_FRIENDLY_URL_PAGE_NOT_FOUND
    #
    #layout.friendly.url.page.not.found=/html/portal/404.html

    #
    # フレンドリーURLに使用できない予約キーワードを設定してください。
    #
    # Env: LIFERAY_LAYOUT_FRIENDLY_URL_KEYWORDS
    #
    layout.friendly.url.keywords=\
        _vti_*,\
        api*,\
        c,\
        combo,\
        delegate,\
        display_chart*,\
        dtd,\
        elqNow,\
        facebook,\
        google_gadget,\
        group,\
        html,\
        image,\
        language,\
        lucene,\
        netvibes,\
        o,\
        osgi,\
        page,\
        pbhs,\
        poller,\
        private,\
        public,\
        rest,\
        robots.txt,\
        sharepoint*,\
        sitemap.xml,\
        sprite,\
        tunnel-web,\
        user,\
        wap,\
        web,\
        webdav*,\
        widget,\
        xmlrpc

    #
    # ゲストユーザーにウインドウの最大化アイコンを表示するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_LAYOUT_GUEST_SHOW_MAX_ICON
    #
    layout.guest.show.max.icon=false

    #
    # ゲストユーザーにウインドウの最小化アイコンを表示するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_LAYOUT_GUEST_SHOW_MIN_ICON
    #
    layout.guest.show.min.icon=false

    #
    # ユーザーにポートレットへのアクセス権がないことを表示するためにはこれを真に 設定してください。ポートレットのinitパラメーター"show-portlet-access-denied"が この設定を上書きします。
    #
    # Env: LIFERAY_LAYOUT_SHOW_PORTLET_ACCESS_DENIED
    #
    layout.show.portlet.access.denied=true

    #
    # ユーザーにポートレットがアクティブでないことを表示するためにはこれを真に設定してください。 ポートレットのinitパラメーター"show-portlet-inactive"がこの設定を上書きします。
    #
    # Env: LIFERAY_LAYOUT_SHOW_PORTLET_INACTIVE
    #
    layout.show.portlet.inactive=true

    #
    # ポータルにリクエストされたページが見つからない場合に404等のHTTPステータスコードを表示させるためにはこれを真に設定して ください。
    #
    # Env: LIFERAY_LAYOUT_SHOW_HTTP_STATUS
    #
    layout.show.http.status=true

    #
    # レイアウト作成時に使用するデフォルトレイアウトテンプレートIDを設定してください。
    #
    # Env: LIFERAY_LAYOUT_DEFAULT_TEMPLATE_ID
    #
    layout.default.template.id=2_columns_ii

    #
    # ajaxのレンダリングを無効にするためにはこれを偽に設定してください。これは 次の属性キーを設定することでリクエスト毎に無効化できます。 com.liferay.portal.util.WebKeys.PORTLET_AJAXABLE_RENDER を サービス前イベントのBoolean.FALSEへ、またはURLパラメーター "p_p_ajax" を"0"に設定してください。プロパティ"session.disabled"を参照することで、 そのプロパティがこのプロパティに与える影響が確認できます。
    #
    # Env: LIFERAY_LAYOUT_AJAX_RENDER_ENABLE
    #
    layout.ajax.render.enable=true

    #
    # サーバーサイドのパラレルレンダリングを無効にするためにはこれを偽に設定してください。または 次の属性キーを設定することでリクエスト毎に無効化できます。 com.liferay.portal.util.WebKeys.PORTLET_PARALLEL_RENDER を サービス前イベントのBoolean.FALSEへ、またはURLパラメーター "p_p_parallel"を"0"に設定してください。
    #
    # プロパティ"portlet.container.restrict"を強制的に設定するためにはこれを真に設定してください。 制限されたリクエスト属性を要するためです。
    #
    # この機能はTomcatでのみ利用可能で、 ポータルが他の環境で実行している場合には無視されます。
    #
    # このプロパティは非推奨で、ドキュメントでの参照目的でのみ提供されます。
    #
    # Env: LIFERAY_LAYOUT_PARALLEL_RENDER_ENABLE
    #
    #layout.parallel.render.enable=false

    #
    # サーバーサイドのパラレルレンダリングに使用するコアスレッドのタイムアウトを無効にするためにはこれを偽に設定してください。 つまり、起動後に、 スレッドプールはコアスレッドをシャットダウンまで有効な状態に保ちます。 他のスレッド同様コアスレッドのタイムアウトを有効にするためにはこれを真に設定してください。 これは概念上、コアスレッドのカウントを0に設定することと同一です。 コアスレッドのタイムアウト特権を削除するためです。
    #
    # Env: LIFERAY_LAYOUT_PARALLEL_RENDER_THREAD_POOL_ALLOW_CORE_THREAD_TIMEOUT
    #
    layout.parallel.render.thread.pool.allow.core.thread.timeout=true

    #
    # サーバーサイドのパラレルレンダリングに使用するコアスレッドの数を設定してください。
    #
    # Env: LIFERAY_LAYOUT_PARALLEL_RENDER_THREAD_POOL_CORE_THREAD_COUNT
    #
    layout.parallel.render.thread.pool.core.thread.count=0

    #
    # サーバーサイドのパラレルレンダリングのためにスレッドを有効に保持する時間を秒で設定してください。
    #
    # Env: LIFERAY_LAYOUT_PARALLEL_RENDER_THREAD_POOL_KEEP_ALIVE_TIME
    #
    layout.parallel.render.thread.pool.keep.alive.time=600

    #
    # サーバーサイドのパラレルレンダリングに使用するタスクキューの最大サイズを設定してください。 キューのサイズが限定されない場合、RejectedExecutionHandlerはトリガーされません。 過負荷下では、これは過大なメモリー使用につながります。限定されたキューのサイズに 正しいRejectedExecutionHandlerを組み合わせた場合、サーバーの グレイスフル・デグレデーション実行に寄与する可能性があります。
    #
    # Env: LIFERAY_LAYOUT_PARALLEL_RENDER_THREAD_POOL_MAX_QUEUE_SIZE
    #
    layout.parallel.render.thread.pool.max.queue.size=100

    #
    # サーバーサイドのパラレルレンダリングに使用するコアスレッドの最大値を設定してください。
    #
    # Env: LIFERAY_LAYOUT_PARALLEL_RENDER_THREAD_POOL_MAX_THREAD_COUNT
    #
    layout.parallel.render.thread.pool.max.thread.count=20

    #
    # サーバーサイドのパラレルレンダリングのタイムアウト時間を設定してください。タイムアウトの際には、 保留中のポートレットは全てajaxローディングへフェイルバックまたは エラーメッセージをトリガーします。これはポートレットがajax対応か否かによります。
    #
    # このタイムアウトは長いものではなくint値です。これは一部の基本セットのレースコンディションを回避するためです。 合理的なタイムアウトにはInteger.MAX_VALUEで十分です。
    #
    # Env: LIFERAY_LAYOUT_PARALLEL_RENDER_TIMEOUT
    #
    layout.parallel.render.timeout=5000

    #
    # 次を実行するクラス名を設定してください。 com.liferay.portal.util.LayoutClone.このクラスは 共有されたページの最大化および最小化の状態を記憶するために使用されます。デフォルトの実装は ブラウザセッションの状態に残ります。
    #
    # Env: LIFERAY_LAYOUT_CLONE_IMPL
    #
    layout.clone.impl=com.liferay.portal.util.SessionLayoutClone

    #
    # レイアウトテンプレートのコンテンツをキャッシュするためにはこれを真に設定してください。これは プロダクションサーバーのパフォーマンスを改善するため推奨されます。 開発中にこれを偽に設定することは、多数の変更を加える必要がある際に 有用です。
    #
    # Env: LIFERAY_LAYOUT_TEMPLATE_CACHE_ENABLED
    #
    layout.template.cache.enabled=true

    #
    # パラメーター"p_l_reset"のデフォルト値を設定してください。真に設定した場合には、 別のページがヒットした場合にレンダーパラメーターがクリアされます。これは ポートレットの仕様上推奨されるビヘイビアではありませんが、 エンドユーザーの大半が好む方法のようです。
    #
    # Env: LIFERAY_LAYOUT_DEFAULT_P_UNDERLINE_L_UNDERLINE_RESET
    #
    layout.default.p_l_reset=true

    #
    # ページへのコメントを有効化するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_LAYOUT_COMMENTS_ENABLED
    #
    layout.comments.enabled=true

    #
    # 異なるページ間で最大化されたウィンドウの値を記憶するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_LAYOUT_REMEMBER_MAXIMIZED_WINDOW_STATE
    #
    layout.remember.maximized.window.state=false

    #
    # ページの管理ツリーを表示するためには子ページの初期値を設定してください。 全員に表示するためにはこれを -1に設定してください。
    #
    # Env: LIFERAY_LAYOUT_MANAGE_PAGES_INITIAL_CHILDREN
    #
    layout.manage.pages.initial.children=20

    #
    # スコープされたレイアウトが次のテーブル合流を見つけられるようにするためにはこれを真に設定してください。 キャッシュされていないLayout and Group_ tables。メモリの合流を有効にするためにはこれを偽に設定してください。 メモリの合流は次のプロパティで条件付きでカスタマイズ可能です。 "layout.scope.group.finder.threshold".
    #
    # Env: LIFERAY_LAYOUT_SCOPE_GROUP_FINDER_ENABLED
    #
    layout.scope.group.finder.enabled=true

    #
    # メモリの合流に使用する際のしきい値を設定してください。メモリの合流において スコープされたレイアウト数がしきい値に達しない場合に使用されます。 値をマイナスに設定することによりメモリの合流が常に使用されるようになります。このプロパティは "layout.scope.group.finder.enabled"が 偽に設定されている場合には無視されます。
    #
    # Env: LIFERAY_LAYOUT_SCOPE_GROUP_FINDER_THRESHOLD
    #
    layout.scope.group.finder.threshold=100

##
## レイアウトのプロトタイプ
##

    #
    # これを真に設定すると、デフォルトでページテンプレートからページへの 変更の伝達が可能になります。
    #
    # Env: LIFERAY_LAYOUT_PROTOTYPE_LINK_ENABLED_DEFAULT
    #
    layout.prototype.link.enabled.default=true

    #
    # ページテンプレートのマージに失敗する場合には、 フェールしきい値の設定により必然的にフェールする繰り返しの試行が回避されていることを確認してください。
    #
    # Env: LIFERAY_LAYOUT_PROTOTYPE_MERGE_FAIL_THRESHOLD
    #
    layout.prototype.merge.fail.threshold=3

    #
    # エラーが発生し、他のいくつかのプロセスがそれを克服するための試行をするまでの 想定されるロックの継続時間を秒で設定してください。
    #
    # Env: LIFERAY_LAYOUT_PROTOTYPE_MERGE_LOCK_MAX_TIME
    #
    layout.prototype.merge.lock.max.time=300

##
## レイアウトセットのプロトタイプ
##

    #
    # サイトテンプレートのマージに失敗する場合には、 フェールしきい値の設定により必然的にフェールする繰り返しの試行が回避されていることを確認してください。
    #
    # Env: LIFERAY_LAYOUT_SET_PROTOTYPE_MERGE_FAIL_THRESHOLD
    #
    layout.set.prototype.merge.fail.threshold=3

    #
    # エラーが発生し、他のいくつかのプロセスがそれを克服するための試行をするまでの 想定されるロックの継続時間を秒で設定してください。
    #
    # Env: LIFERAY_LAYOUT_SET_PROTOTYPE_MERGE_LOCK_MAX_TIME
    #
    layout.set.prototype.merge.lock.max.time=600

    #
    # これを真に設定すると、サイトテンプレートのロゴをサイトに伝達します。 これは変更の伝達が有効化されている場合に限ります。これを偽に設定すると、 サイトが最初にそのサイトテンプレートから作成された場合にはサイトテンプレートのロゴのみを伝達します。 サイトテンプレートのロゴへの追加の変更は伝達されません。 これは変更の伝達が有効化されている場合でも同様です。
    #
    # Env: LIFERAY_LAYOUT_SET_PROTOTYPE_PROPAGATE_LOGO
    #
    layout.set.prototype.propagate.logo=false

##
## ポートレット URL
##

    #
    # ポートレットURLの呼出中のsetParameterがパラメーター値を変更ではなく付加する場合にはこれを真に設定してください。 この特定のビヘイビアに関しては、JSR168の解釈を巡ってポートレット開発者の間で議論があります。Liferayポータルは この値が真偽のいずれかに関するポートレットTCKテストを通過しています。
    #
    # 詳細は https://issues.liferay.com/browse/LEP-426 をご参照ください。
    #
    # Env: LIFERAY_PORTLET_URL_APPEND_PARAMETERS
    #
    portlet.url.append.parameters=false

    #
    # アンカータグ付きのポートレットURL生成を許可するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_PORTLET_URL_ANCHOR_ENABLE
    #
    portlet.url.anchor.enable=false

    #
    # JSR286ではポートレットURLがデフォルトでエスケープされる旨を定めています。これを 偽に設定するとよりよい上位互換性が得られます。
    #
    # これを真に設定し、かつ特定のポートレットアプリケーションが そのポートレットURLをデフォルトでエスケープしないことを要求する場合には portlet.xmlを変更し、 コンテナのランタイムオプション "javax.portlet.escapeXml"を偽に設定してください。
    #
    # Env: LIFERAY_PORTLET_URL_ESCAPE_XML
    #
    portlet.url.escape.xml=false

    #
    # URLの更新に追加されない予約パラメーターのリストをコンマ区切りで設定してください。
    #
    # Env: LIFERAY_PORTLET_URL_REFRESH_URL_RESERVED_PARAMETERS
    #
    portlet.url.refresh.url.reserved.parameters=password,password1,password2,pop3Password,properties--jdbc.default.password,settings--google.apps.password,smtpPassword,settings--ldap.security.credentials

    #
    # 次を使ったポートレットURL生成を許可するためにはこれを真に設定してください。 /c/portal/portlet_url.有効化した場合にはセキュリティリスクが生じる可能性があります。
    #
    # Env: LIFERAY_PORTLET_URL_GENERATE_BY_PATH_ENABLED
    #
    portlet.url.generate.by.path.enabled=false

##
## プリファレンス
##

    #
    # 起動時にポートレット設定を検証するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_PREFERENCE_VALIDATE_ON_STARTUP
    #
    preference.validate.on.startup=false

##
## リダイレクト
##

    #
    # リダイレクトセキュリティメソッドのためにこのプロパティを "ip" または "domain"に設定してください。もし "domain"に設定した場合には、ポータルは次のプロパティにリストされたドメインへのみユーザーをリダイレクトします。 "redirect.url.domain.allowed"。"ip"に設定した場合には、ポータルは 次のプロパティにリストされたIPアドレスへ変換するIPアドレスをもつドメインへのみユーザーをリダイレクトします。 "redirect.url.ip.allowed"。
    #
    # Env: LIFERAY_REDIRECT_URL_SECURITY_MODE
    #
    #redirect.url.security.mode=domain
    redirect.url.security.mode=ip

    #
    # ポータルがリダイレクト可能なドメインのリストをコンマ区切りで入力してください。あらゆるドメインを許可するためには空白のリストを入力してください。ドメインの最初を "*."とすることで、サブドメインへのリダイレクトが可能となります。
    #
    # Env: LIFERAY_REDIRECT_URL_DOMAINS_ALLOWED
    #
    redirect.url.domains.allowed=

    #
    # ポータルがリダイレクト可能なIPのリストをコンマ区切りで入力してください。あらゆるIPを許可するためには空白のリストを入力してください。SERVER_IP は ホストサーバーのIPに置換えられます。
    #
    # Env: LIFERAY_REDIRECT_URL_IPS_ALLOWED
    #
    redirect.url.ips.allowed=127.0.0.1,SERVER_IP

##
## ストラッツ
##

    #
    # 無視され、ストラッツを使用するポートレットが利用可能でないパラメーター名を特定してください。詳しくは LPS-46552 をご参照下さい。
    #
    # Env: LIFERAY_STRUTS_PORTLET_IGNORED_PARAMETERS_REGEXP
    #
    struts.portlet.ignored.parameters.regexp=(.*\\.|^|.*|\\[('|"))(c|C)lass(\\.|('|")]|\\[).*

    #
    # ストラッツベースのポートレットに使用されるカスタムのストラッツ要求プロセッサーを入力して下さい。カスタムクラスは com.liferay.portal.struts.PortletRequestProcessorを拡張せねばならず、同一の コンストラクターを持つものでなければなりません。
    #
    # Env: LIFERAY_STRUTS_PORTLET_REQUEST_PROCESSOR
    #
    struts.portlet.request.processor=com.liferay.portal.struts.PortletRequestProcessor

##
## 画像
##

    #
    # 画像サーブレットが "高さ"と"幅"のパラメーターリクエストに基づく画像を自動でスケールする場合には、これを真に設定してください。
    #
    # Env: LIFERAY_IMAGE_AUTO_SCALE
    #
    image.auto.scale=false

    #
    # 不明な画像に使用されるデフォルトのスペーサー画像の位置を設定してください。この画像はクラスパス内で利用可能でなければなりません。
    #
    # Env: LIFERAY_IMAGE_DEFAULT_SPACER
    #
    image.default.spacer=com/liferay/portal/dependencies/spacer.gif

    #
    # 不明な企業ロゴ画像に使用されるデフォルトの企業ロゴ画像の位置を設定してください。 この画像はクラスパス内で利用可能でなければなりません。
    #
    # Env: LIFERAY_IMAGE_DEFAULT_COMPANY_LOGO
    #
    image.default.company.logo=com/liferay/portal/dependencies/company_logo.png

    #
    # 不明な組織ロゴ画像に使用されるデフォルトの組織ロゴ画像の位置を設定してください。 この画像はクラスパス内で利用可能でなければなりません。
    #
    # Env: LIFERAY_IMAGE_DEFAULT_ORGANIZATION_LOGO
    #
    image.default.organization.logo=com/liferay/portal/dependencies/organization_logo.png

    #
    # 不明なユーザーポートレット画像に使用されるデフォルトのユーザーポートレット画像の位置を設定してください。 この画像はクラスパス内で利用可能でなければなりません。
    #
    # Env: LIFERAY_IMAGE_DEFAULT_USER_FEMALE_PORTRAIT
    # Env: LIFERAY_IMAGE_DEFAULT_USER_MALE_PORTRAIT
    #
    image.default.user.female.portrait=com/liferay/portal/dependencies/user_female_portrait.png
    image.default.user.male.portrait=com/liferay/portal/dependencies/user_male_portrait.png

    #
    # 6.1以前のバージョンでは、イメージギャラリーポートレットは com.liferay.portal.image.DatabaseHook、 com.liferay.portal.image.DLHookまたは com.liferay.portal.image.FileSystemHook経由で残る画像をサポートします。6.1以降では、DLHookのみが サポートされています。
    #
    # このプロパティをフック実装に設定すると、 アップグレード中に自動データ移行をトリガーします。
    #
    # Env: LIFERAY_IMAGE_HOOK_IMPL
    #
    #image.hook.impl=com.liferay.portal.image.DatabaseHook
    #image.hook.impl=com.liferay.portal.image.DLHook
    #image.hook.impl=com.liferay.portal.image.FileSystemHook

    #
    # これはFileSystemHookで使用されるレガシーなプロパティで、 他のフックからのデータ移行を可能にします。
    #
    # Env: LIFERAY_IMAGE_HOOK_FILE_SYSTEM_ROOT_DIR
    #
    image.hook.file.system.root.dir=${liferay.home}/data/images

    #
    # ImageIOのストリームキャッシュはメモリまたはファイルシステム内に残ります。 キャッシュ化にメモリを使用するようImageIOに指示するためにはこれを偽に設定してください。メモリキャッシュは ファイルシステムへの書き込みがないため、パフォーマンスの点で優れます。しかし、 メモリは比較的限定されており、高価な場合が一般的です。
    #
    # Env: LIFERAY_IMAGE_IO_USE_DISK_CACHE
    #
    image.io.use.disk.cache=true

    #
    # 画像ツールで読み込み可能な画像の高さと幅の最大値をピクセルで設定してください。0の値は制限がないことを表します。詳しくはLPS-63358 を ご参照ください。
    #
    # Env: LIFERAY_IMAGE_TOOL_IMAGE_MAX_HEIGHT
    # Env: LIFERAY_IMAGE_TOOL_IMAGE_MAX_WIDTH
    #
    image.tool.image.max.height=10000
    image.tool.image.max.width=10000

##
## エディター
##

    #
    # 個別のJSPページを構成し、 利用可能な次のWYSIWYGエディターの特定の実装に使用することが可能です。alloyeditor、alloyeditor_bbcode、 alloyeditor_creole、ckeditor、ckeditor_bbcode、ckeditor_creole、simple、 tinymceまたはtinymce_simple。
    #
    # Env: LIFERAY_EDITOR_WYSIWYG_DEFAULT
    # Env: LIFERAY_EDITOR_WYSIWYG_PORTAL_MINUS_IMPL_PORTLET_DDM_TEXT_UNDERLINE_HTML_FTL
    # Env: LIFERAY_EDITOR_WYSIWYG_PORTAL_MINUS_WEB_DOCROOT_HTML_PORTLET_ANNOUNCEMENTS_EDIT_UNDERLINE_ENTRY_JSP
    # Env: LIFERAY_EDITOR_WYSIWYG_PORTAL_MINUS_WEB_DOCROOT_HTML_PORTLET_BLOGS_EDIT_UNDERLINE_ENTRY_JSP
    # Env: LIFERAY_EDITOR_WYSIWYG_PORTAL_MINUS_WEB_DOCROOT_HTML_PORTLET_MAIL_EDIT_JSP
    # Env: LIFERAY_EDITOR_WYSIWYG_PORTAL_MINUS_WEB_DOCROOT_HTML_PORTLET_MAIL_EDIT_UNDERLINE_MESSAGE_JSP
    # Env: LIFERAY_EDITOR_WYSIWYG_PORTAL_MINUS_WEB_DOCROOT_HTML_PORTLET_MESSAGE_UNDERLINE_BOARDS_EDIT_UNDERLINE_MESSAGE_BB_UNDERLINE_CODE_JSP
    # Env: LIFERAY_EDITOR_WYSIWYG_PORTAL_MINUS_WEB_DOCROOT_HTML_PORTLET_MESSAGE_UNDERLINE_BOARDS_EDIT_UNDERLINE_MESSAGE_HTML_JSP
    # Env: LIFERAY_EDITOR_WYSIWYG_PORTAL_MINUS_WEB_DOCROOT_HTML_TAGLIB_UI_DISCUSSION_JSP
    # Env: LIFERAY_EDITOR_WYSIWYG_PORTAL_MINUS_WEB_DOCROOT_HTML_TAGLIB_UI_EMAIL_UNDERLINE_NOTIFICATION_UNDERLINE_SETTINGS_JSP
    #
    editor.wysiwyg.default=ckeditor
    editor.wysiwyg.portal-impl.portlet.ddm.text_html.ftl=alloyeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.announcements.edit_entry.jsp=alloyeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.blogs.edit_entry.jsp=alloyeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.mail.edit.jsp=ckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.mail.edit_message.jsp=ckeditor
    editor.wysiwyg.portal-web.docroot.html.portlet.message_boards.edit_message.bb_code.jsp=alloyeditor_bbcode
    editor.wysiwyg.portal-web.docroot.html.portlet.message_boards.edit_message.html.jsp=alloyeditor
    editor.wysiwyg.portal-web.docroot.html.taglib.ui.discussion.jsp=alloyeditor
    editor.wysiwyg.portal-web.docroot.html.taglib.ui.email_notification_settings.jsp=ckeditor

##
## フィールド
##

    #
    # ユーザーが閲覧できないように次のフィールドを偽に設定してください。一部の企業の ポリシーでは性別および生年月日の情報は常に非表示でなければなりません。
    #
    # Env: LIFERAY_FIELD_ENABLE_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEC_ONTACT_BIRTHDAY
    # Env: LIFERAY_FIELD_ENABLE_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEC_ONTACT_MALE
    # Env: LIFERAY_FIELD_ENABLE_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEO_RGANIZATION_STATUS
    #
    field.enable.com.liferay.portal.kernel.model.Contact.male=true
    field.enable.com.liferay.portal.kernel.model.Contact.birthday=true
    field.enable.com.liferay.portal.kernel.model.Organization.status=false

    #
    # コンマ区切りのユーザー種別を入力してください。これらのうち1つの ユーザー種別には自身のフィールド全てを編集する許可が付与されています。有効なユーザー 種別は"user-with-mx"および"user-without-mx"です。値"user-with-mx"は 企業メールサフィックスに合致するメールアドレスを有するユーザーです。 値"user-without-mx"は企業メールサフィックスに合致するメールアドレスを 持たないユーザーです。
    #
    # Env: LIFERAY_FIELD_EDITABLE_USER_TYPES
    #
    field.editable.user.types=user-with-mx,user-without-mx

    #
    # コンマ区切りのロール名を入力してください。これらのうち1つの ロールと関連付けられたユーザーには自身のフィールド全てを編集する許可が付与されています。
    #
    # Env: LIFERAY_FIELD_EDITABLE_ROLES
    #
    field.editable.roles=administrator

    #
    # コンマ区切りのドメイン名を入力してください。メールアドレスがあり これらのドメイン名の1つにマッチするユーザーには自身のフィールドを編集する 許可が付与されています。
    #
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS
    #
    #field.editable.domains=

    #
    # コンマ区切りのドメイン名を入力してください。メールアドレスがあり これらのドメイン名の1つにマッチするユーザーには特定のフィールドを編集する 許可が付与されています。ユーザーに特定のフィールドの変更を許可するためには"*"を入力してください。
    #
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_BIRTHDAY_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_EMAIL_UPPERCASEA_DDRESS_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_FIRST_UPPERCASEN_AME_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_GENDER_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_JOB_UPPERCASET_ITLE_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_LAST_UPPERCASEN_AME_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_MIDDLE_UPPERCASEN_AME_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_PORTRAIT_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_PREFIX_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_SCREEN_UPPERCASEN_AME_CLOSEBRACKET_
    # Env: LIFERAY_FIELD_EDITABLE_DOMAINS_OPENBRACKET_SUFFIX_CLOSEBRACKET_
    #
    #field.editable.domains[birthday]=
    #field.editable.domains[emailAddress]=
    #field.editable.domains[firstName]=
    #field.editable.domains[gender]=
    #field.editable.domains[jobTitle]=
    #field.editable.domains[lastName]=
    #field.editable.domains[middleName]=
    #field.editable.domains[portrait]=
    #field.editable.domains[prefix]=
    #field.editable.domains[screenName]=
    #field.editable.domains[suffix]=

##
## マイム・タイプ
##

    #
    # Content -Dispositionヘッダーを"inline"に設定する必要のあるエクステンションのリストをコンマ区切りで入力してください。"swf"を 含むリストの使用にはCSRF攻撃の危険が生じることにご留意ください。
    #
    # Env: LIFERAY_MIME_TYPES_CONTENT_DISPOSITION_INLINE
    #
    mime.types.content.disposition.inline=flv,gif,jpg,pdf,png,wmv

    #
    # インターネットでの画像表示に最適化されたマイム・タイプのリストをコンマ区切りで入力してください。このプロパティを使用するケースの1つは ユーザーが企業ロゴ、組織ロゴ、ユーザーポートレットとしてアップグレード可能な画像ファイル種別の 限定です。
    #
    # Env: LIFERAY_MIME_TYPES_WEB_IMAGES
    #
    mime.types.web.images=image/gif,image/jpeg,image/pjpeg,image/png,image/x-png

##
## ブラウザ・キャッシュ
##

    #
    # ポータルがブラウザキャッシュを強制的に無効にするためにはこれを真に設定してください。 表示されたHTMLレスポンスのキャッシュのみを無効化します。 静的コンテンツや他のリソースへの影響はありません。
    #
    # Env: LIFERAY_BROWSER_CACHE_DISABLED
    #
    browser.cache.disabled=false

    #
    # 認証されたユーザーのキャッシュを無効にするためにはこれを真に設定してください。 このプロパティは次のプロパティが真の場合には読み込まれません。 "browser.cache.signed.in.disabled"これは 認証されたユーザーがブラウザ内で戻るボタンをクリックしてサインインページへ遷移できないようにするために有用です。
    #
    # Env: LIFERAY_BROWSER_CACHE_SIGNED_IN_DISABLED
    #
    browser.cache.signed.in.disabled=false

##
## ブラウザの互換性
##

    #
    # ブラウザがポータルを表示するためにどのバージョンのIEをエミュレートすべきかを入力してください。IEの最新の標準表示モードを常に使用するためには"edge"を入力してください。
    #
    # Env: LIFERAY_BROWSER_COMPATIBILITY_IE_VERSIONS
    #
    browser.compatibility.ie.versions=IE=edge

##
## ブラウザ・ラウンチャー
##

    #
    # ポータルが完全に初期化された際のブラウザの自動起動後に表示するURLを入力してください。この機能を無効にするためには空白のURLを入力してください。
    #
    # Env: LIFERAY_BROWSER_LAUNCHER_URL
    #
    browser.launcher.url=http://localhost:8080

##
## コントロールパネル
##

    #
    # レイアウト名を設定してください。
    #
    # Env: LIFERAY_CONTROL_PANEL_LAYOUT_NAME
    #
    control.panel.layout.name=Control Panel

    #
    # レイアウトのフレンドリーURLを設定してください。
    #
    # Env: LIFERAY_CONTROL_PANEL_LAYOUT_FRIENDLY_URL
    #
    control.panel.layout.friendly.url=/manage

    #
    # レイアウトのテーマを設定してください。
    #
    # Env: LIFERAY_CONTROL_PANEL_LAYOUT_REGULAR_THEME_ID
    #
    control.panel.layout.regular.theme.id=admin_WAR_admintheme

    #
    # ナビゲーションメニューに表示されるサイトの最大数を設定してください。 ユーザーが管理可能なサイト数が非常に多い場合には、大きな値によりパフォーマンスの問題が生じる可能性があります。
    #
    # Env: LIFERAY_CONTROL_PANEL_NAVIGATION_MAX_SITES
    #
    control.panel.navigation.max.sites=100

    #
    # 次を実行するクラス名を設定してください。 com.liferay.portal.kernel.portlet.ControlPanelEntry.このクラスは liferay-portlet.xml内の要素"control-panel-entry-class"のデフォルト値を表し、 コントロールパネルに ポートレットが特定のコンテクストで特定のユーザーに表示されるべきか否かを判断するために呼び出されます。
    #
    # このプロパティは liferay-hook.xml.に上書きされるポータルプロパティを除きポータルに読み込まれません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_CONTROL_PANEL_DEFAULT_ENTRY_CLASS
    #
    #control.panel.default.entry.class=com.liferay.portal.kernel.portlet.DefaultControlPanelEntry

##
## ルシーン検索
##

    #
    # クエリのスペルチェックを有効化するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_INDEX_SEARCH_COLLATED_SPELL_CHECK_RESULT_ENABLED
    #
    index.search.collated.spell.check.result.enabled=true

    #
    # 返された結果を有効と判定する上限を設定してください。 このしきい値に合致しない場合には、最も関連性の高いスペルチェック後の クエリが表示されます。
    #
    # Env: LIFERAY_INDEX_SEARCH_COLLATED_SPELL_CHECK_RESULT_SCORES_THRESHOLD
    #
    index.search.collated.spell.check.result.scores.threshold=50

    #
    # 検索結果のハイライトを有効化するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_INDEX_SEARCH_HIGHLIGHT_ENABLED
    #
    index.search.highlight.enabled=true

    #
    # 検索結果ハイライターの返すフラグメントのサイズを設定してください。
    #
    # Env: LIFERAY_INDEX_SEARCH_HIGHLIGHT_FRAGMENT_SIZE
    #
    index.search.highlight.fragment.size=80

    #
    # ハイライト時にフィールドの一致を要求するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_INDEX_SEARCH_HIGHLIGHT_REQUIRE_FIELD_MATCH
    #
    index.search.highlight.require.field.match=true

    #
    # 検索エンジンの返すスニペットのラインの数を設定してください。
    #
    # Env: LIFERAY_INDEX_SEARCH_HIGHLIGHT_SNIPPET_SIZE
    #
    index.search.highlight.snippet.size=3

    #
    # パフォーマンスインデックス検索実行の際に使用される結果の上限を設定してください。
    #
    # Env: LIFERAY_INDEX_SEARCH_LIMIT
    #
    index.search.limit=10000

    #
    # 成功した検索に基づく関連クエリのインデックス化を有効化するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_INDEX_SEARCH_QUERY_INDEXING_ENABLED
    #
    index.search.query.indexing.enabled=true

    #
    # 返された結果を有効と判定する上限を設定してください。この しきい値に一致すると、クエリは関連クエリとしてインデックス化されます。
    #
    # Env: LIFERAY_INDEX_SEARCH_QUERY_INDEXING_THRESHOLD
    #
    index.search.query.indexing.threshold=50

    #
    # 特定のロケールのためのクエリサジェッション辞書ファイルの場所を設定してください。 1つ以上の辞書ファイルが存在する場合にはファイルのリストをコンマ区切りで特定してください。グループID (例:123456) を追加して 1つのグループのみに適用されるディクショナリを特定することも可能です。
    #
    # Env: LIFERAY_INDEX_SEARCH_QUERY_SUGGESTION_DICTIONARY_OPENBRACKET_EN_UNDERLINE__UPPERCASEU__UPPERCASES__CLOSEBRACKET_
    # Env: LIFERAY_INDEX_SEARCH_QUERY_SUGGESTION_DICTIONARY_OPENBRACKET_EN_UNDERLINE__UPPERCASEU__UPPERCASES__CLOSEBRACKET__OPENBRACKET__NUMBER1__NUMBER2__NUMBER3__NUMBER4__NUMBER5__NUMBER6__CLOSEBRACKET_
    # Env: LIFERAY_INDEX_SEARCH_QUERY_SUGGESTION_DICTIONARY_OPENBRACKET_ES_UNDERLINE__UPPERCASEE__UPPERCASES__CLOSEBRACKET_
    #
    #index.search.query.suggestion.dictionary[en_US]=com/liferay/portal/search/dependencies/querysuggestions/en_US.txt
    #index.search.query.suggestion.dictionary[es_ES]=com/liferay/portal/search/dependencies/querysuggestions/es_ES.txt
    #index.search.query.suggestion.dictionary[en_US][123456]=com/liferay/portal/search/dependencies/querysuggestions/en_US_123456.txt

    #
    # ユーザーの最初のクエリに対して不十分なスコアリングまたは結果が返された場合にクエリのサジェストを有効化するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_INDEX_SEARCH_QUERY_SUGGESTION_ENABLED
    #
    index.search.query.suggestion.enabled=true

    #
    # クエリの最大サジェスト数を設定します。
    #
    # Env: LIFERAY_INDEX_SEARCH_QUERY_SUGGESTION_MAX
    #
    index.search.query.suggestion.max=5

    #
    # クエリのサジェッションをトリガーする検索結果のスコア上限を設定してください。 これを0に設定した場合には、スコアリングしきい値が無視され、 最初の検索クエリに結果が返されない場合にのみクエリがサジェストされます。
    #
    # Env: LIFERAY_INDEX_SEARCH_QUERY_SUGGESTION_SCORES_THRESHOLD
    #
    index.search.query.suggestion.scores.threshold=0

    #
    # 結果のスコアリングを有効化するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_INDEX_SEARCH_SCORING_ENABLED
    #
    index.search.scoring.enabled=true

    #
    # 特定のロケールのためのスペルチェッカー辞書ファイルの場所を設定してください。 1つ以上の辞書ファイルが存在する場合にはファイルのリストをコンマ区切りで特定してください。グループID (例:123456) を追加して 1つのグループのみに適用されるディクショナリを特定することも可能です。
    #
    # Env: LIFERAY_INDEX_SEARCH_SPELL_CHECKER_DICTIONARY_OPENBRACKET_EN_UNDERLINE__UPPERCASEU__UPPERCASES__CLOSEBRACKET_
    # Env: LIFERAY_INDEX_SEARCH_SPELL_CHECKER_DICTIONARY_OPENBRACKET_EN_UNDERLINE__UPPERCASEU__UPPERCASES__CLOSEBRACKET__OPENBRACKET__NUMBER1__NUMBER2__NUMBER3__NUMBER4__NUMBER5__NUMBER6__CLOSEBRACKET_
    # Env: LIFERAY_INDEX_SEARCH_SPELL_CHECKER_DICTIONARY_OPENBRACKET_ES_UNDERLINE__UPPERCASEE__UPPERCASES__CLOSEBRACKET_
    #
    index.search.spell.checker.dictionary[en_US]=com/liferay/portal/search/dependencies/spellchecker/en_US.txt
    index.search.spell.checker.dictionary[es_ES]=com/liferay/portal/search/dependencies/spellchecker/es_ES.txt
    #index.search.spell.checker.dictionary[en_US][123456]=com/liferay/portal/search/dependencies/spellchecker/en_US_123456.txt

    #
    # スペルチェッカーのサポートするロケールを特定してください。これは 検索エンジンのスペルチェッカーが 特定の言語でのスペルチェックを実施するか否かの判定の際に使用されます。
    #
    # Env: LIFERAY_INDEX_SEARCH_SPELL_CHECKER_SUPPORTED_LOCALES
    #
    index.search.spell.checker.supported.locales=en_US,es_ES

    #
    # インデックス検索ライターの最大キューサイズを特定してください。これを マイナスに設定することで 、サーバーのメモリが不足するまでキューサイズを増大させることが可能となります。
    #
    # Env: LIFERAY_INDEX_SEARCH_WRITER_MAX_QUEUE_SIZE
    #
    index.search.writer.max.queue.size=1000

    #
    # 許可フィルター付き検索のための増幅率を設定してください。 1より大きい数でなければなりません。
    #
    # Env: LIFERAY_INDEX_PERMISSION_FILTER_SEARCH_AMPLIFICATION_FACTOR
    #
    index.permission.filter.search.amplification.factor=1.5

    #
    # 所与の名称を持つインデクサーをデフォルトで無効にするためにはこれを偽に設定してください。 そうでない場合には全てのインデクサーがデフォルトで有効化されます。この設定は ポータルのプリファレンスで上書きすることができます。インデクサーを コントロールパネルで有効化または無効化してください。
    #
    # Env: LIFERAY_INDEXER_ENABLED_OPENBRACKET_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEU_SER_CLOSEBRACKET_
    #
    #indexer.enabled[com.liferay.portal.kernel.model.User]=false

    #
    # 起動時にファイルのライブラリ全体をインデックス化するためにはこれを真に設定してください。 このプロパティは自動テスト環境の 起動時のインデックス化を可能にするために利用することができます。プロダクションシステムではこれを真に設定しないでください。 設定した場合には、起動時に毎回インデックス化が行われることになります。
    #
    # Env: LIFERAY_INDEX_ON_STARTUP
    #
    index.on.startup=false

    #
    # 起動時のインデックス化前に遅延を追加するためにはこれを真に設定してください。遅延は 多数のプラグインのロードと再インデックス化の際には不可欠な可能性があります。この プロパティは "index.on.startup"が真に設定されている場合に限り有効です。
    #
    # Env: LIFERAY_INDEX_ON_STARTUP_DELAY
    #
    index.on.startup.delay=60

    #
    # アップグレード後にファイルのライブラリ全体をインデックス化するためにはこれを真に設定してください。 全体の再インデックス化を要しない小規模な変更を行なう場合にのみこのプロパティを偽に設定してください。
    #
    # Env: LIFERAY_INDEX_ON_UPGRADE
    #
    index.on.upgrade=true

    #
    # 起動時に別のスレッドでインデックス化を実行化する際に処理速度を上げるためにはこれを真に設定してください。
    #
    # Env: LIFERAY_INDEX_WITH_THREAD
    #
    index.with.thread=true

    #
    # 日付をインデックス内のテキストとして格納するためのデータフォーマットを設定してください。
    #
    # Env: LIFERAY_INDEX_DATE_FORMAT_PATTERN
    #
    index.date.format.pattern=yyyyMMddHHmmss

    #
    # インデックスファイルをダンプする前に圧縮するためにはこれを真に設定してください 。
    #
    # Env: LIFERAY_INDEX_DUMP_COMPRESSION_ENABLED
    #
    index.dump.compression.enabled=true

    #
    # ソート用のトークン化されないフィールドへコピーされるフィールド名のリストをコンマ区切りで入力してください。
    #
    # Env: LIFERAY_INDEX_SORTABLE_TEXT_FIELDS
    #
    index.sortable.text.fields=firstName,jobTitle,lastName,name,screenName,title

    #
    # 省略前のソート可能なキーワードフィールドの最大長を設定してください。
    #
    # Env: LIFERAY_INDEX_SORTABLE_TEXT_FIELDS_TRUNCATED_LENGTH
    #
    index.sortable.text.fields.truncated.length=255

    #
    # ブールクエリ内で可能な節の最大数を設定してください。デフォルトの値は 1024です。
    #
    # Env: LIFERAY_LUCENE_BOOLEAN_QUERY_CLAUSE_MAX_SIZE
    #
    #lucene.boolean.query.clause.max.size=1024

##
## マルチ・バリューマップ
##

    #
    # マルチ・バリューマッププロパティの値を0に設定するとマップをメモリ内で格納し、1に設定すると マップをファイルシステム内に格納します。
    #
    # Env: LIFERAY_MULTI_VALUE_MAP_COM_LIFERAY_PORTAL_CONVERT__UPPERCASEC_ONVERT_UPPERCASEP_ERMISSION_UPPERCASEA_LGORITHM_CONVERT_UPPERCASER_ESOURCE_UPPERCASEP_ERMISSION
    # Env: LIFERAY_MULTI_VALUE_MAP_COM_LIFERAY_PORTAL_CONVERT__UPPERCASEC_ONVERT_UPPERCASEP_ERMISSION_UPPERCASEA_LGORITHM_CONVERT_UPPERCASER_OLES
    #
    multi.value.map.com.liferay.portal.convert.ConvertPermissionAlgorithm.convertResourcePermission=0
    multi.value.map.com.liferay.portal.convert.ConvertPermissionAlgorithm.convertRoles=0

##
## セットアップ・ウィザード
##

    setup.database.driverClassName[db2]=com.ibm.db2.jcc.DB2Driver
    setup.database.driverClassName[hypersonic]=org.hsqldb.jdbc.JDBCDriver
    setup.database.driverClassName[mariadb]=org.mariadb.jdbc.Driver
    setup.database.driverClassName[mysql]=com.mysql.jdbc.Driver
    setup.database.driverClassName[oracle]=oracle.jdbc.OracleDriver
    setup.database.driverClassName[postgresql]=org.postgresql.Driver
    setup.database.driverClassName[sqlserver]=com.microsoft.sqlserver.jdbc.SQLServerDriver
    setup.database.driverClassName[sybase]=com.sybase.jdbc4.jdbc.SybDriver

    setup.database.jar.name[com.mysql.jdbc.Driver]=mysql.jar
    setup.database.jar.url[com.mysql.jdbc.Driver]=http://repo1.maven.org/maven2/mysql/mysql-connector-java/5.1.23/mysql-connector-java-5.1.23.jar

    setup.database.url[db2]=jdbc:db2://localhost:50000/lportal:deferPrepares=false;fullyMaterializeInputStreams=true;fullyMaterializeLobData=true;progresssiveLocators=2;progressiveStreaming=2;
    setup.database.url[hypersonic]=jdbc:hsqldb:${liferay.home}/data/hypersonic/lportal
    setup.database.url[mariadb]=jdbc:mariadb://localhost/lportal?useUnicode=true&characterEncoding=UTF-8&useFastDateParsing=false
    setup.database.url[mysql]=jdbc:mysql://localhost/lportal?characterEncoding=UTF-8&dontTrackOpenResources=true&holdResultsOpenOverStatementClose=true&useFastDateParsing=false&useUnicode=true
    setup.database.url[oracle]=jdbc:oracle:thin:@localhost:1521:xe
    setup.database.url[postgresql]=jdbc:postgresql://localhost:5432/lportal
    setup.database.url[sqlserver]=jdbc:sqlserver://localhost;databaseName=lportal
    setup.database.url[sybase]=jdbc:sybase:Tds:localhost:5000/lportal

    setup.liferay.pool.provider.jar.name[hikaricp]=hikaricp.jar

    setup.liferay.pool.provider.jar.url[hikaricp]=http://central.maven.org/maven2/com/zaxxer/HikariCP/2.6.0/HikariCP-2.6.0.jar

    #
    # セットアップ・ウィザードをポータルの初回起動時に表示するためには このプロパティを真に設定してください。
    #
    # Env: LIFERAY_SETUP_WIZARD_ENABLED
    #
    setup.wizard.enabled=true

##
## ソースフォージ
##

    source.forge.mirrors=\
        http://downloads.sourceforge.net,\      # Redirect
        http://internap.dl.sourceforge.net,\    # San Jose, CA
        http://superb-east.dl.sourceforge.net,\ # McLean, Virginia
        http://superb-west.dl.sourceforge.net,\ # Seattle, Washington
        http://easynews.dl.sourceforge.net,\    # Phoenix, AZ
        http://kent.dl.sourceforge.net,\        # Kent, UK
        http://ufpr.dl.sourceforge.net,\        # Curitiba, Brazil
        http://belnet.dl.sourceforge.net,\      # Brussels, Belgium
        http://switch.dl.sourceforge.net,\      # Lausanne, Switzerland
        http://mesh.dl.sourceforge.net,\        # Duesseldorf, Germany
        http://ovh.dl.sourceforge.net,\         # Paris, France
        http://dfn.dl.sourceforge.net,\         # Berlin, Germany
        http://heanet.dl.sourceforge.net,\      # Dublin, Ireland
        http://garr.dl.sourceforge.net,\        # Bologna, Italy
        http://surfnet.dl.sourceforge.net       # Amsterdam, The Netherlands
        http://jaist.dl.sourceforge.net,\       # Ishikawa, Japan
        http://nchc.dl.sourceforge.net,\        # Tainan, Taiwan
        http://optusnet.dl.sourceforge.net      # Sydney, Australia

##
## バリュー・オブジェクト
##

    #
    # 次のプロパティを設定することで特定のクラスにリスナーを追加することができます。 "value.object.listener"およびcom.liferay.portal.kernel.model.ModelListenerを実行するコンマ区切りのクラス名。 これらのクラスは プールされ再利用されます。また、スレッドセーフでなければなりません。
    #
    # このプロパティは liferay-hook.xml.に上書きされるポータルプロパティを除きポータルに読み込まれません。ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_VALUE_OBJECT_LISTENER_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEC_ONTACT
    # Env: LIFERAY_VALUE_OBJECT_LISTENER_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEL_AYOUT
    # Env: LIFERAY_VALUE_OBJECT_LISTENER_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEL_AYOUT_UPPERCASES_ET
    # Env: LIFERAY_VALUE_OBJECT_LISTENER_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEP_ORTLET_UPPERCASEP_REFERENCES
    # Env: LIFERAY_VALUE_OBJECT_LISTENER_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEU_SER
    # Env: LIFERAY_VALUE_OBJECT_LISTENER_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEU_SER_UPPERCASEG_ROUP
    #
    #value.object.listener.com.liferay.portal.kernel.model.Contact=com.liferay.portal.model.ContactModelListener
    #value.object.listener.com.liferay.portal.kernel.model.Layout=com.liferay.portal.model.LayoutModelListener,com.liferay.portal.service.impl.LayoutSetPrototypeLayoutModelListener
    #value.object.listener.com.liferay.portal.kernel.model.LayoutSet=com.liferay.portal.model.LayoutSetModelListener,com.liferay.portal.service.impl.LayoutSetPrototypeLayoutSetModelListener
    #value.object.listener.com.liferay.portal.kernel.model.PortletPreferences=com.liferay.portal.model.PortletPreferencesModelListener
    #value.object.listener.com.liferay.portal.kernel.model.User=com.liferay.portal.model.UserModelListener
    #value.object.listener.com.liferay.portal.kernel.model.UserGroup=com.liferay.portal.model.UserGroupModelListener

    #
    # バリュー・オブジェクトは3段階でキャッシュされます。最初のレベルは"エンティティ"、 次のレベルは "ファインダー"、3番目のレベルは"ハイバネート"です。
    #
    # エントリーレベルのキャッシュはバリューオブジェクトのプライマリキーを バリューオブジェクトそのものに格納します。
    #
    # ファインダーレベルのキャッシュは バリューオブジェクトを返す多数のパスとバリューオブジェクトのリストを返す多数のパスを格納します。 ファインダーレベルのキャッシュはプライマリキーのみをキャッシュし、 バリューオブジェクトをプライマリキーにキャッシュするエントリーレベルのキャッシュにさらに支援されます。
    #
    # ハイバネートレベルのキャッシュは プロパティ"hibernate.cache.provider_class"により提供されます。
    #

    #
    # エントリーレベルのキャッシュ化を有効化するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_VALUE_OBJECT_ENTITY_CACHE_ENABLED
    #
    value.object.entity.cache.enabled=true

    #
    # エントリーレベルのキャッシュ化をブロックする構成とするためにはこれを真に設定してください。詳しくは プロパティ"ehcache.blocking.cache.allowed"をご参照ください。
    #
    # Env: LIFERAY_VALUE_OBJECT_ENTITY_BLOCKING_CACHE
    #
    value.object.entity.blocking.cache=true

    #
    # エントリーレベルのキャッシュはスレッドローカルのマップを使用し、 最も使用頻度の高いアイテムを格納し、下層キャッシュのクエリ数を減少させます。スレッドレベルのキャッシュを無効にするためには最大のマップサイズを0に設定してください。
    #
    # Env: LIFERAY_VALUE_OBJECT_ENTITY_THREAD_LOCAL_CACHE_MAX_SIZE
    #
    value.object.entity.thread.local.cache.max.size=100

    #
    # 特定の種別のバリューオブジェクトのエントリーレベルのキャッシュ化は バリューオブジェクトのクラス名を含むプロパティ名を使用して構成することができます。
    #
    # Env: LIFERAY_VALUE_OBJECT_ENTITY_CACHE_ENABLED_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEL_AYOUT
    # Env: LIFERAY_VALUE_OBJECT_ENTITY_CACHE_ENABLED_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEU_SER
    #
    value.object.entity.cache.enabled.com.liferay.portal.kernel.model.Layout=true
    value.object.entity.cache.enabled.com.liferay.portal.kernel.model.User=true

    #
    # MVCCエントリーレベルのキャッシュ化を有効化するためにはこれを真に設定してください。この 機能はMVCCが有効化されたエンティティにのみ適用されます。詳しくは サービスビルダーDTD内の属性"mvcc-enabled"をご参照ください。
    #
    # Env: LIFERAY_VALUE_OBJECT_MVCC_ENTITY_CACHE_ENABLED
    #
    value.object.mvcc.entity.cache.enabled=true

    #
    # ファインダーレベルのキャッシュ化を有効化するためにはこれを真に設定してください。
    #
    # Env: LIFERAY_VALUE_OBJECT_FINDER_CACHE_ENABLED
    #
    value.object.finder.cache.enabled=true

    #
    # ファインダーレベルのキャッシュ化をブロックする構成とするためにはこれを真に設定してください。詳しくは プロパティ"ehcache.blocking.cache.allowed"をご参照ください。
    #
    # Env: LIFERAY_VALUE_OBJECT_FINDER_BLOCKING_CACHE
    #
    value.object.finder.blocking.cache=true

    #
    # ファインダーレベルのキャッシュはスレッドローカルのマップを使用し、 最も使用頻度の高いアイテムを格納し、下層キャッシュのクエリ数を減少させます。スレッドレベルのキャッシュを無効にするためには最大のマップサイズを0に設定してください。
    #
    # Env: LIFERAY_VALUE_OBJECT_FINDER_THREAD_LOCAL_CACHE_MAX_SIZE
    #
    value.object.finder.thread.local.cache.max.size=100

    #
    # 特定の種別のバリューオブジェクトのファインダーレベルのキャッシュ化は バリューオブジェクトのクラス名を含むプロパティ名を使用して構成することができます。 マッピングテーブルを特定し、 バリューオブジェクトの関係のキャッシュ化を構成することも可能です。
    #
    # Env: LIFERAY_VALUE_OBJECT_FINDER_CACHE_ENABLED_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEL_AYOUT
    # Env: LIFERAY_VALUE_OBJECT_FINDER_CACHE_ENABLED_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEU_SER
    # Env: LIFERAY_VALUE_OBJECT_FINDER_CACHE_ENABLED__UPPERCASEU_SERS_UNDERLINE__UPPERCASER_OLES
    #
    value.object.finder.cache.enabled.com.liferay.portal.kernel.model.Layout=true
    value.object.finder.cache.enabled.com.liferay.portal.kernel.model.User=true
    value.object.finder.cache.enabled.Users_Roles=true

##
## テーブル・マッパー
##

    #
    # テーブル・マッパー内でキャッシュを使用しないマッピングテーブル名のリストをコンマ区切りで設定してください。
    #
    # Env: LIFERAY_TABLE_MAPPER_CACHELESS_MAPPING_TABLE_NAMES
    #
    table.mapper.cacheless.mapping.table.names=\
        Users_Groups,\
        Users_Orgs,\
        Users_Roles,\
        Users_Teams,\
        Users_UserGroups

##
## 監査メッセージ
##

    audit.message.com.liferay.portal.kernel.model.Layout.VIEW=false

##
## バッファされたインクリメント
##

    #
    # バッファされたインクリメントは ビューカウントインクリメントのデータベースへの書き込み要求をバッチ化するロジックを提供します。これらのデータベースのヒットを最小化することで 全体のパフォーマンス向上が期待できます。
    #
    # バッファされたインクリメントは次のアノテーションを付加されたサービスメソッドのみに適用します。 @BufferedIncrement(...) アノテーション。デフォルトでは、 メッセージボードスレッド、ドキュメントライブラリファイルエントリー、アセットエントリーのビューカウンターをインクリメントするメソッドと使用されます。
    #
    # バッファされたインクリメントロジックの無効化は非推奨です。無効化の代わりに、 次のプロパティを0に設定することでスタンバイロジックを無効化することをおすすめします。 プロパティ"buffered.increment.standby.queue.threshold" および プロパティ"buffered.increment.standby.time.upper.limit"。もし バッファされたインクリメントロジックの無効化が本当に必要な場合には、このプロパティを 偽に設定し、同時にBufferedIncrementAdvice beanを base-spring.xmlから削除してください。アノテーションを付加したサービスメソッドがスキップされることを防ぎます。
    #
    # Env: LIFERAY_BUFFERED_INCREMENT_ENABLED
    #
    buffered.increment.enabled=true

    #
    # スタンバイプロパティはディスパッチャーが インクリメント結果処理を待機する時間を管理します。ディスパッチャーが結果処理を待つ時間が長いほど、 同一のエンティティインスタンス(エントリー)に関して受信する要求を バッチ処理できる可能性が高まります。
    #
    # 例えば、同一のメッセージボードスレッド(MBThreadインスタンス)が 複数回(n回)閲覧され、MBThreadを待つ既存のビューインクリメント要求が ディスパッチされるのを待っている場合には、受信する インクリメントを既存要求のインクリメント値に追加することが可能です。 既存のエントリーのビューカウントインクリメントは、結果として、 1 + n回に変更され、受信する要求は無視されることになります。これは 該当するエントリーをインクリメントするためのデータベースのヒットを最小化します。 受信する要求が不要となり、無視されるため、 エントリーのビューカウントのインクリメントに要するメモリも最小化されます。
    #
    # ワーカースレッドは新規のインクリメント要求をBatchablePipeへ送信し、 要求のディスパッチャースレッドプールに通知します。このパイプは インクリメント要求をディスパッチャー処理のためのキューに保持するメールボックスとして機能します。 新規のインクリメント要求を受信すると、パイプは既に 同一のエントリーに関して要求を受信しているか否かを確認します。受信している場合には、パイプは 受信するインクリメントを既存のエントリーのインクリメント値に追加し、 受信するインクリメント要求を無視します。同一のエントリーに関して既存の要求がない場合には、 受信する要求はキューの最後に追加されます。
    #
    # ワーカースレッドからインクリメント要求が BatchablePipeへ送信された旨の通知を受けると、スレッドプールはスレッドのディスパッチ状況を確認します。 ディスパッチスレッドが存在しない場合には、新規作成します。アイドル状態のスレッドが 存在する場合には、アラート状態にします。スレッドが存在するするものの全てアクティブな場合には、 スレッドプールはそれらのスレッドをそのままの状態にします。アクティブなディスパッチスレッドはパイプの 要求処理のためのキューの状況を確認します。
    #
    # ディスパッチスレッドはスタンバイロジックを適用し、 パイプからの各要求を処理します。これらスレッドは要求のスタンバイ時間を パイプのキューの先頭でキューのしきい値を基に計算します。キュー内の要求の数が しきい値を超える場合には、ディスパッチスレッドは 先頭の要求を待ち時間なしで可及的速やかに処理します。もし リクエスト数がしきい値内の場合には、ディスパッチスレッドは ヘッドリクエストのスタンバイ時間がスタンバイ時間上限 (秒単位)をキューのリクエストで割ったものとなるよう計算します。 キューのリクエストが少ないほど、ヘッドリクエストのスタンバイ時間は長くなります。
    #
    # 全体のパフォーマンスとビューカウントの遅延の間のトレードオフを考慮して スタンバイ待機を設定してください。要求に適用されるスタンバイ時間と パイプ内の要求の数は直線的反比例の関係にあります。スタンバイ時間は一定ではありません。キュー内のリクエストが 少ないほど、スタンバイでの待ち時間は長くなります。このロジックは ディスパッチ要求のバッチ処理の最大化の可能性を高めます。 次のチャートに関係を図解します:
    #
    #     ^ standby time
    #     |
    #     |\<---buffered.increment.standby.time.upper.limit
    #     | \
    #     |  \
    #     |   \
    #     |    \
    #     --------------> current BatchablePipe size
    #     0 ^
    #       |
    #       buffered.increment.standby.queue.threshold
    #
    # キューのしきい値および高負荷のシステムの制限時間の設定として一般的なものは それぞれ10000要求と60秒となります。
    #
    # キューのしきい値と制限時間のいずれかが0に設定された場合には、 要求は待ち時間なしで可及的速やかに処理されます。 いずれのプロパティのマイナス値も0と見なされます。
    #
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT
    #
    buffered.increment.standby.queue.threshold=0
    buffered.increment.standby.time.upper.limit=0

    #
    # ディスパッチャースレッドプールはディスパッチスレッドのライフサイクルを管理します。 デフォルトでは、スレッドプールは単一のディスパッチスレッドを使用するよう構成されています。 バッファされたインクリメントは単一のディスパッチスレッドを用いた パフォーマンスの最適化のために設計されています。
    #
    # プロパティ"buffered.increment.threadpool.keep.alive.time"を 最大のアイドルタイムに設定するとディスパッチスレッドの再利用が可能になります。 このプロパティのマイナス値は0と見なされます。
    #
    # プロパティ"buffered.increment.threadpool.max.size"の値は、 大抵の場合、1の設定のままとすべきです。何らかの理由により、 複数のディスパッチスレッドを希望する場合には、これが バッファされたインクリメントの設計に反するものであり、最適なパフォーマンスが達成されない可能性があることにご留意ください。 このプロパティにおいて0以下の値は1と見なされます。
    #
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_KEEP_ALIVE_TIME
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_MAX_SIZE
    #
    buffered.increment.threadpool.keep.alive.time=60
    buffered.increment.threadpool.max.size=1

    #
    # 次のビューカウンターの固有の設定でバッファされたグローバルインクリメントの設定を上書きしてください。 AssetEntryビューカウンター。
    #
    # Env: LIFERAY_BUFFERED_INCREMENT_ENABLED_OPENBRACKET__UPPERCASEA_SSET_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD_OPENBRACKET__UPPERCASEA_SSET_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT_OPENBRACKET__UPPERCASEA_SSET_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_KEEP_ALIVE_TIME_OPENBRACKET__UPPERCASEA_SSET_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_MAX_SIZE_OPENBRACKET__UPPERCASEA_SSET_UPPERCASEE_NTRY_CLOSEBRACKET_
    #
    #buffered.increment.enabled[AssetEntry]=true
    #buffered.increment.standby.queue.threshold[AssetEntry]=0
    #buffered.increment.standby.time.upper.limit[AssetEntry]=0
    #buffered.increment.threadpool.keep.alive.time[AssetEntry]=60
    #buffered.increment.threadpool.max.size[AssetEntry]=1

    #
    # 次のビューカウンターの固有の設定でバッファされたグローバルインクリメントの設定を上書きしてください。 DLFileEntryビューカウンター。
    #
    # Env: LIFERAY_BUFFERED_INCREMENT_ENABLED_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_ILE_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_ILE_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_ILE_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_KEEP_ALIVE_TIME_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_ILE_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_MAX_SIZE_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_ILE_UPPERCASEE_NTRY_CLOSEBRACKET_
    #
    #buffered.increment.enabled[DLFileEntry]=true
    #buffered.increment.standby.queue.threshold[DLFileEntry]=0
    #buffered.increment.standby.time.upper.limit[DLFileEntry]=0
    #buffered.increment.threadpool.keep.alive.time[DLFileEntry]=60
    #buffered.increment.threadpool.max.size[DLFileEntry]=1

    #
    # 次のビューカウンターの固有の設定でバッファされたグローバルインクリメントの設定を上書きしてください。 DLFolderEntryの最後の投稿日時
    #
    # Env: LIFERAY_BUFFERED_INCREMENT_ENABLED_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_OLDER_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_OLDER_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_OLDER_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_KEEP_ALIVE_TIME_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_OLDER_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_MAX_SIZE_OPENBRACKET__UPPERCASED__UPPERCASEL__UPPERCASEF_OLDER_UPPERCASEE_NTRY_CLOSEBRACKET_
    #
    #buffered.increment.enabled[DLFolderEntry]=true
    #buffered.increment.standby.queue.threshold[DLFolderEntry]=0
    #buffered.increment.standby.time.upper.limit[DLFolderEntry]=0
    #buffered.increment.threadpool.keep.alive.time[DLFolderEntry]=60
    #buffered.increment.threadpool.max.size[DLFolderEntry]=1

    #
    # MBThreadビューカウンターの特定の設定で、グローバルのバッファ済み増分設定を上書きします。
    #
    # Env: LIFERAY_BUFFERED_INCREMENT_ENABLED_OPENBRACKET__UPPERCASEM__UPPERCASEB__UPPERCASET_HREAD_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_QUEUE_THRESHOLD_OPENBRACKET__UPPERCASEM__UPPERCASEB__UPPERCASET_HREAD_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_STANDBY_TIME_UPPER_LIMIT_OPENBRACKET__UPPERCASEM__UPPERCASEB__UPPERCASET_HREAD_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_KEEP_ALIVE_TIME_OPENBRACKET__UPPERCASEM__UPPERCASEB__UPPERCASET_HREAD_CLOSEBRACKET_
    # Env: LIFERAY_BUFFERED_INCREMENT_THREADPOOL_MAX_SIZE_OPENBRACKET__UPPERCASEM__UPPERCASEB__UPPERCASET_HREAD_CLOSEBRACKET_
    #
    #buffered.increment.enabled[MBThread]=true
    #buffered.increment.standby.queue.threshold[MBThread]=0
    #buffered.increment.standby.time.upper.limit[MBThread]=0
    #buffered.increment.threadpool.keep.alive.time[MBThread]=60
    #buffered.increment.threadpool.max.size[MBThread]=1

##
## キャッシュ
##

    #
    # コンテクストの初期化の際にキャッシュをクリアします。
    #
    # Env: LIFERAY_CACHE_CLEAR_ON_CONTEXT_INITIALIZATION
    #
    cache.clear.on.context.initialization=true

    #
    # プラグインがデプロイされていない場合にキャッシュをクリアします。
    #
    # Env: LIFERAY_CACHE_CLEAR_ON_PLUGIN_UNDEPLOY
    #
    cache.clear.on.plugin.undeploy=true

    #
    # キャッシュ・フィルターは、処理済みのWebコンテンツをキャッシュします。キャッシュを行うリソースが過大化するのを防止するためのしきい値を設定します。 デフォルト値は、500kbです。
    #
    # Env: LIFERAY_CACHE_CONTENT_THRESHOLD_SIZE
    #
    cache.content.threshold.size=512000

##
## クラスタ・リンク
##

    #
    # クラスタ・ノードのボトムアップ・レスポンスのタイムアウトを、ミリ秒単位で設定します。
    #
    # Env: LIFERAY_CLUSTER_LINK_NODE_BOOTUP_RESPONSE_TIMEOUT
    #
    cluster.link.node.bootup.response.timeout=10000

    #
    # クラスタ・リンクを有効化するには、これをtrueに設定します。これは、インデックスおよびクラスタ・リンクに依存するその他の機能をクラスタにしたい場合に必要です。
    #
    # Env: LIFERAY_CLUSTER_LINK_ENABLED
    #
    cluster.link.enabled=false

    #
    # JGroupの各チャネルに名前を設定します。最大10のトランスポート・チャネルと単一の必須コントロールチャネルがサポートされています。
    #
    # Env: LIFERAY_CLUSTER_LINK_CHANNEL_NAME_CONTROL
    # Env: LIFERAY_CLUSTER_LINK_CHANNEL_NAME_TRANSPORT__NUMBER0_
    # Env: LIFERAY_CLUSTER_LINK_CHANNEL_NAME_TRANSPORT__NUMBER1_
    #
    cluster.link.channel.name.control=liferay-channel-control
    cluster.link.channel.name.transport.0=liferay-channel-transport-0
    #cluster.link.channel.name.transport.1=liferay-channel-transport-1

    #
    # 各チャネルにJGroupsプロパティを設定します。 当社は、最大10のトランスポート・チャネルと単一の必須コントロールチャネルをサポートしています。 最善のパフォーマンスのために、できるだけ少ない数のトランスポート・チャネルを使用してください。 デフォルトでは、1つのUDPコントロール・チャネルとUDPトランスポート・チャネルのみが有効化されています。 チャネルは、クラス・パスに位置するXMLファイルまたはインライン・プロパティにより構成できます。
    #
    # Env: LIFERAY_CLUSTER_LINK_CHANNEL_PROPERTIES_CONTROL
    # Env: LIFERAY_CLUSTER_LINK_CHANNEL_PROPERTIES_TRANSPORT__NUMBER0_
    # Env: LIFERAY_CLUSTER_LINK_CHANNEL_PROPERTIES_TRANSPORT__NUMBER1_
    # Env: LIFERAY_CLUSTER_LINK_CHANNEL_PROPERTIES_TRANSPORT__NUMBER2_
    #
    cluster.link.channel.properties.control=UDP(bind_addr=${cluster.link.bind.addr["cluster-link-control"]};mcast_group_addr=${multicast.group.address["cluster-link-control"]};mcast_port=${multicast.group.port["cluster-link-control"]}):PING:MERGE3(min_interval=10000;max_interval=30000):FD_SOCK:FD_ALL:VERIFY_SUSPECT(timeout=1500):pbcast.NAKACK2(xmit_interval=500;xmit_table_num_rows=100;xmit_table_msgs_per_row=2000;xmit_table_max_compaction_time=30000;max_msg_batch_size=500;use_mcast_xmit=false;discard_delivered_msgs=true):UNICAST3(xmit_interval=500;xmit_table_num_rows=100;xmit_table_msgs_per_row=2000;xmit_table_max_compaction_time=60000;conn_expiry_timeout=0;max_msg_batch_size=500):pbcast.STABLE(stability_delay=1000;desired_avg_gossip=50000;max_bytes=4M):pbcast.GMS(join_timeout=2000;print_local_addr=true;view_bundling=true):UFC(max_credits=2M;min_threshold=0.4):MFC(max_credits=2M;min_threshold=0.4):FRAG2(frag_size=60K):RSVP(resend_interval=2000;timeout=10000)
    cluster.link.channel.properties.transport.0=UDP(bind_addr=${cluster.link.bind.addr["cluster-link-udp"]};mcast_group_addr=${multicast.group.address["cluster-link-udp"]};mcast_port=${multicast.group.port["cluster-link-udp"]}):PING:MERGE3(min_interval=10000;max_interval=30000):FD_SOCK:FD_ALL:VERIFY_SUSPECT(timeout=1500):pbcast.NAKACK2(xmit_interval=500;xmit_table_num_rows=100;xmit_table_msgs_per_row=2000;xmit_table_max_compaction_time=30000;max_msg_batch_size=500;use_mcast_xmit=false;discard_delivered_msgs=true):UNICAST3(xmit_interval=500;xmit_table_num_rows=100;xmit_table_msgs_per_row=2000;xmit_table_max_compaction_time=60000;conn_expiry_timeout=0;max_msg_batch_size=500):pbcast.STABLE(stability_delay=1000;desired_avg_gossip=50000;max_bytes=4M):pbcast.GMS(join_timeout=2000;print_local_addr=true;view_bundling=true):UFC(max_credits=2M;min_threshold=0.4):MFC(max_credits=2M;min_threshold=0.4):FRAG2(frag_size=60K):RSVP(resend_interval=2000;timeout=10000)
    #cluster.link.channel.properties.transport.1=udp.xml
    #cluster.link.channel.properties.transport.2=mping.xml

    #
    # JGroupのシステム・プロパティを設定します。システム・プロパティは、個別のプロパティが設定されていない場合のみ使用されます。
    #
    # Env: LIFERAY_CLUSTER_LINK_CHANNEL_SYSTEM_PROPERTIES
    #
    cluster.link.channel.system.properties=
        #
        # Common
        #
        #\
        #jgroups.bind_addr:${cluster.link.bind.addr["cluster-link-udp"]},\
        #jgroups.bind_interface:eth0,\
        #\
        #
        # Multicast
        #
        #\
        #jgroups.mping.mcast_addr:${multicast.group.address["cluster-link-mping"]},\
        #jgroups.mping.mcast_port:${multicast.group.port["cluster-link-mping"]},\
        #jgroups.mping.ip_ttl:8

    #
    # デフォルトの発信IPアドレスを自動検知するには、このプロパティを設定します。これにより、JGroupをそれにバインドできるようになります。 このプロパティは、ポータル・サーバー、www.google.com、またはあなたのローカル・ゲートウェイにアクセス可能なアドレスを指す必要があります。
    #
    # Env: LIFERAY_CLUSTER_LINK_AUTODETECT_ADDRESS
    #
    cluster.link.autodetect.address=www.google.com:80

    #
    # JGroup用にバインド・アドレスを直接設定します。これは、プロパティ「cluster.link.autodetect.address」が設定されていない場合のみ動作します。 詳細な情報については、プロパティ「cluster.link.channel.properties.control」を参照してください。
    #
    # Env: LIFERAY_CLUSTER_LINK_BIND_ADDR_OPENBRACKET__QUOTE_CLUSTER_MINUS_LINK_MINUS_CONTROL_QUOTE__CLOSEBRACKET_
    #
    cluster.link.bind.addr["cluster-link-control"]=localhost

    #
    # JGroup用に直接うバインド・アドレスを設定します。これは「cluster.link.autodetect.address」が設定されていない場合のみ動作します。 プロパティ「cluster.link.channel.properties.transport.0」および「cluster.link.channel.system.properties」を参照してください。
    #
    # Env: LIFERAY_CLUSTER_LINK_BIND_ADDR_OPENBRACKET__QUOTE_CLUSTER_MINUS_LINK_MINUS_UDP_QUOTE__CLOSEBRACKET_
    #
    cluster.link.bind.addr["cluster-link-udp"]=localhost

##
## クラスタ可能なアドバイス
##

    #
    # クラスタ可能なコールのマスター・タイムアウト時間を秒で設定します。
    #
    # Env: LIFERAY_CLUSTERABLE_ADVICE_CALL_MASTER_TIMEOUT
    #
    clusterable.advice.call.master.timeout=10

##
## コンボ
##

    #
    # 「*」のファイル拡張子を使用すると、すべてのファイル拡張子が許可されます。
    #
    # Env: LIFERAY_COMBO_ALLOWED_FILE_EXTENSIONS
    #
    combo.allowed.file.extensions=.css,.js

    #
    # コンボ・サーブレットは、複数のJavaScriptを共有された依存関係に基づいて1つのバンドルへと結合します。 これにより、JavaScriptファイルの読み込みがより高速になります。 JavaScriptaファイルの1つが変更された場合にその結合を更新する必要がある場合、これを「false」に設定します。 このプロパティは、開発中はデバッグを容易にするためにtrueに背設定する必要があります。しかし、実稼働中は高速なパフォーマンスのためにfalseに設定する必要があります。
    #
    # Env: LIFERAY_COMBO_CHECK_TIMESTAMP
    #
    combo.check.timestamp=false

    #
    # リソース・ファイルのタイムスタンプをチェックする間隔の最小待ち時間をミリ秒単位で設定します。 このプロパティは、プロパティ「combo.check.timestamp」がtrueに設定されている場合のみ使用されます。
    #
    # Env: LIFERAY_COMBO_CHECK_TIMESTAMP_INTERVAL
    #
    combo.check.timestamp.interval=1000

##
## コンテンツ配信ネットワーク
##

    #
    # HTTPプロコトルを介して行われるリクエストに対して、CDNを介して静的コンテンツを提供するのに使用するホスト名を設定します。 このプロパティは、URLパラメータ「cdn_enabled」を「0」に設定することで、ランタイムで動的に無効化することが可能です。 この値は、常に完全なプロコトルを含む必要があります。
    #
    # Env: LIFERAY_CDN_HOST_HTTP
    #
    cdn.host.http=

    #
    # HTTPプロコトルを介して行われるリクエストに対してCDNを介して静的コンテンツを提供するのに使用するホスト名を設定します。 このプロパティは、URLパラメータ「cdn_enabled」を「0」に設定することで、ランタイムで動的に無効化することが可能です。 この値は、常に完全なプロコトルを含む必要があります。
    #
    # Env: LIFERAY_CDN_HOST_HTTPS
    #
    cdn.host.https=

    #
    # CDNを介した動的に生成されたCSS、JavaScriptおよび画像の提供を有効化するには、これをtrueに設定します。 これを「false」に設定すると、リソースの遅延ロードをサポートしていないCDN(例: Amazon CloudFront)の使用が可能になります。
    #
    # Env: LIFERAY_CDN_DYNAMIC_RESOURCES_ENABLED
    #
    cdn.dynamic.resources.enabled=true

##
## カウンター
##

    #
    # 開発データセンターの合計数を指定します。 各データセンターは、互いに独立し、双方向のデータベースレプリケーションを介して接続されています。
    #
    # Env: LIFERAY_COUNTER_DATA_CENTER_COUNT
    #
    counter.data.center.count=1

    #
    # データセンター・デプロイの一意の識別子を、0からプロパティ「counter.data.center.count」マイナス1の間の値に設定します。 これにより、各データセンターが衝突の恐れなく一意のカウンター値を生成することが保証されます。
    #
    # このデータセンター・アルゴリズムは、まずプロパティ「counter.data.center.count」の値を表すのに必要なビット数でカウンター値を右へシフトします。次に、「"counter.data.center.deployment.id」の値を表すのに必要なビットを、カウンター値の最も左のバイトにプリペンドします。
    #
    # Env: LIFERAY_COUNTER_DATA_CENTER_DEPLOYMENT_ID
    #
    counter.data.center.deployment.id=0

    #
    # このカウンターは、デッドロックを防ぐために、自らのデータソースのみを操作します。デフォルトでは、このカウンター用に作成されたデータソースは、他のポータルに使用されるデータソースを作成するのに使用されたのと同じ設定が使用されます。 これは、カウンターサービスがデータソースを作成する際に、プレフィック「jdbc.default.」を持つプロパティを検索するために起こります。 詳細な情報については、プレフィック「jdbc.default.」を持つJDBCプロパティを参照してください。
    #
    # 異なる値をカウンターのJDBCプレフィックに設定すると、可用性の高いインストール向けの独自セットの構成を使用して、カウンター・データ・ソースを微調整できます。 これらの設定は、独立していますが、デフォルト設定を新たな値で上書きしたコピーであることに注意してください。
    #
    # Env: LIFERAY_COUNTER_JDBC_PREFIX
    #
    counter.jdbc.prefix=jdbc.default.

    #
    # データベース更新とCounterテーブルの間の増分数を設定します。 より高いパフォーマンスのためには、高い数値に設定してください。
    #
    # Env: LIFERAY_COUNTER_INCREMENT
    #
    counter.increment=100

    #
    # 特定のカウンター名のカウンター増分をさらに微調整することができます。 このエントリーより、カウンター名「com.liferay.portal.kernel.model.Layout」または「com.liferay.portal.kernel.model.Layout#」で開始するすべてのものが、1のみで増加することが保証されます。
    #
    # Env: LIFERAY_COUNTER_INCREMENT_COM_LIFERAY_PORTAL_KERNEL_MODEL__UPPERCASEL_AYOUT
    #
    counter.increment.com.liferay.portal.kernel.model.Layout=1

##
## ダイレクト・サーブレット・コンテキスト
##

    #
    # リクエストのディスパッチを高速化するためにサーブレットへ直接ディスパッチを有効化するには、これをtrueに設定します。 このプロパティは、開発者がプログラム的に通常のServletContextをDirectServletContextを使用してラップした場合のみ有効になります。 詳細な情報については、 LPS-13776を参照ください。
    #
    # Env: LIFERAY_DIRECT_SERVLET_CONTEXT_ENABLED
    #
    direct.servlet.context.enabled=true

    #
    # JSPが変更された際に、JSPに関連するサーブレットを更新するには、これをtrueに設定します。 このプロパティは、「direct.servlet.context.enabled」がtrueに設定されている場合のみ使用されます。
    #
    # Env: LIFERAY_DIRECT_SERVLET_CONTEXT_RELOAD
    #
    direct.servlet.context.reload=true

##
## ETag
##

    #
    # ETagフィルターは、ETagの値を計算するためにレスポンスを処理する必要があります 大規模なレスポンスは、非常に多くのメモリを消費する可能性があります。ETagの計算をトリガーする最大レスポンスサイズを設定します。 デフォルトの最大レスポンスサイズは、1メガバイトです。
    #
    # Env: LIFERAY_ETAG_RESPONSE_SIZE_MAX
    #
    etag.response.size.max=1048576

##
## GZip
##

    #
    # GZipフィルターは、特定の圧縮レベルを使用してファイルを圧縮します。 デフォルトの圧縮レベルを使用するには、値を -1 に設定します。「java.util.zip.Deflater」に記述されているその他の圧縮レベルを使用するには、0 から 9 の値を入力します。
    #
    # Env: LIFERAY_GZIP_COMPRESSION_LEVEL
    #
    gzip.compression.level=-1

##
## HTTP
##

    #
    # 詳細なHTTP設定については、「system.properties」を参照してください。
    #

    #
    # ホスト毎の最大接続数を設定します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_MAX_CONNECTIONS_PER_HOST
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_MAX_CONNECTIONS_PER_HOST_OPENBRACKET_RSS_NEWS_YAHOO_COM_CLOSEBRACKET_
    #
    #com.liferay.portal.util.HttpImpl.max.connections.per.host=2
    #com.liferay.portal.util.HttpImpl.max.connections.per.host[rss.news.yahoo.com]=2

    #
    # 最大接続数を設定します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_MAX_TOTAL_CONNECTIONS
    #
    #com.liferay.portal.util.HttpImpl.max.total.connections=20

    #
    # プロキシ認証のタイプを設定します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_PROXY_AUTH_TYPE
    #
    #com.liferay.portal.util.HttpImpl.proxy.auth.type=username-password
    #com.liferay.portal.util.HttpImpl.proxy.auth.type=ntlm

    #
    # HTTPプロキシ認証に使用するユーザ名とパスワードを設定します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_PROXY_PASSWORD
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_PROXY_USERNAME
    #
    #com.liferay.portal.util.HttpImpl.proxy.username=
    #com.liferay.portal.util.HttpImpl.proxy.password=

    #
    # NTLM認証のための追加のプロパティを設定します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_PROXY_NTLM_DOMAIN
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_PROXY_NTLM_HOST
    #
    #com.liferay.portal.util.HttpImpl.proxy.ntlm.domain=
    #com.liferay.portal.util.HttpImpl.proxy.ntlm.host=

    #
    # HTTPコンテンツをフェッチする際の接続タイムアウトを設定します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_TIMEOUT
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UTIL__UPPERCASEH_TTP_UPPERCASEI_MPL_TIMEOUT_OPENBRACKET_RSS_NEWS_YAHOO_COM_CLOSEBRACKET_
    #
    com.liferay.portal.util.HttpImpl.timeout=10000
    #com.liferay.portal.util.HttpImpl.timeout[rss.news.yahoo.com]=10000

##
## HTTP ヘッダー・レスポンス
##

    #
    # HTTPヘッダー・レスポンスの設定の詳細については、「system.properties」を参照してください。
    #

    #
    # HTTPヘッダー・レスポンスでLiferay-Portaフィールドを使用するための詳細レベルを設定します。 有効な値として、すべてのバージョン情報(例:Liferay Portal Community Edition 6.1.0 CEなど)を渡す「full」、名前部分(例:Liferay Portal Community Edition)だけを渡す「partial」、またはポータルがHTTPヘッダー・レスポンスに「Liferay-Portal」フィールドを追加することを防止するデフォルトのリリース名(例:「Liferay Portal Community Edition」や「Liferay Portal Enterprise Edition」)を使用できます。 デフォルトのリリース名は、使用されているポータルのエディションと一致する必要があります。
    #
    # Env: LIFERAY_HTTP_HEADER_VERSION_VERBOSITY
    #
    http.header.version.verbosity=full

##
## HTTPトンネリング
##

    #
    # 実稼働環境では、このプロパティを「false」に設定しないでください。これにより、SSLホスト名認証が上書きされます。またこれは、自己署名証明書にも使用されます。 LPS-18038を参照してください。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_KERNEL_SERVICE_HTTP__UPPERCASET_UNNEL_UPPERCASEU_TIL_VERIFY_SSL_HOSTNAME
    #
    com.liferay.portal.kernel.service.http.TunnelUtil.verify.ssl.hostname=true

    #
    # トンネル・レベルの暗号化アルゴリズムのために使用される適切な暗号化アルゴリズムをこれに設定します。
    #
    # この設定を変更する場合、共有シークレットの長さが暗号化アルゴリズム用に有効な長さであることを確実にするために、プロパティ「tunneling.servlet.shared.secret」を変更する必要がある場合があります。
    #
    # 暗号化キーの詳細については、Java Cryptography Extensionのドキュメントを参照してください。
    #
    # Env: LIFERAY_TUNNELING_SERVLET_ENCRYPTION_ALGORITHM
    #
    tunneling.servlet.encryption.algorithm=AES
    #tunneling.servlet.encryption.algorithm=Blowfish
    #tunneling.servlet.encryption.algorithm=DESede

    #
    # トンネリング・サーブレットを介して1つのポータルから別のポータルへの通信を保護するために、この共有シークレットを使用します。 このポータルは、同一のシークレットを共有していないその他のポータルからの通信を拒否するようになります。
    #
    # シークレットは、8バイト長以上である必要があります。16バイトよりも長いシークレットを使用するには、Java Cryptography Extension Unlimited Strength Jurisdiction Policy Filesがインストールされていることと、プロパティ「tunneling.servlet.encryption.algorithm」がそのキーサイズをサポートしていることが必要であることに注意してください。
    #
    # 暗号化キーのサポートされているキーサイズについての詳細は、Java Cryptography Extensionのドキュメントを参照してください。
    #
    # Env: LIFERAY_TUNNELING_SERVLET_SHARED_SECRET
    #
    #tunneling.servlet.shared.secret=

    #
    # trueに設定する場合、tunneling.servlet.shared.secretは16進数エンコードを使用してエンコードする必要があります。
    #
    # Env: LIFERAY_TUNNELING_SERVLET_SHARED_SECRET_HEX
    #
    #tunneling.servlet.shared.secret.hex=true

    #
    # Set a timeout to enforce a connection timeout for connections between
    # servers via the tunneling servlet. Without setting this value, the actual
    # timeout enforced may vary between environments.
    #
    # Env: LIFERAY_TUNNELING_SERVLET_TIMEOUT
    #
    tunneling.servlet.timeout=30000

##
## ImageMagick
##

    #
    # ImageMagickを有効化するには、これをtrueに設定します。まずGhostscriptと Imagemagickをインストールする必要があります。詳細な情報については、http://www.ghostscript.com and http://www.imagemagick.org を参照してください。
    #
    # 検索パスは、ImageMagickとGhostscriptの実行可能ファイルのディレクトリを指している必要があります。 AppleまたはUnix環境では、Ghostscriptに使用されているフォントのパスを構成する必要がある場合もあります。
    #
    # Env: LIFERAY_IMAGEMAGICK_ENABLED
    # Env: LIFERAY_IMAGEMAGICK_GLOBAL_SEARCH_PATH_OPENBRACKET_APPLE_CLOSEBRACKET_
    # Env: LIFERAY_IMAGEMAGICK_GLOBAL_SEARCH_PATH_OPENBRACKET_UNIX_CLOSEBRACKET_
    # Env: LIFERAY_IMAGEMAGICK_GLOBAL_SEARCH_PATH_OPENBRACKET_WINDOWS_CLOSEBRACKET_
    #
    imagemagick.enabled=false
    imagemagick.global.search.path[apple]=/opt/local/bin:/opt/local/share/ghostscript/fonts:/opt/local/share/fonts/urw-fonts
    imagemagick.global.search.path[unix]=/usr/local/bin:/usr/local/share/ghostscript/fonts:/usr/local/share/fonts/urw-fonts
    imagemagick.global.search.path[windows]=C:\\Program Files\\gs\\bin;C:\\Program Files\\ImageMagick

    #
    # ImageMagickのキャッシュおよびリソースの使用量を構成するには、これらの制限を使用します。 これらの制限についての現在の設定を確認するには、以下のコマンドを実行します:
    #
    # identify -list resource
    #
    # 詳細な情報については、http://www.imagemagick.org/script/architecture.php を参照してください。
    #
    # Env: LIFERAY_IMAGEMAGICK_RESOURCE_LIMIT_AREA
    # Env: LIFERAY_IMAGEMAGICK_RESOURCE_LIMIT_DISK
    # Env: LIFERAY_IMAGEMAGICK_RESOURCE_LIMIT_FILE
    # Env: LIFERAY_IMAGEMAGICK_RESOURCE_LIMIT_MAP
    # Env: LIFERAY_IMAGEMAGICK_RESOURCE_LIMIT_MEMORY
    # Env: LIFERAY_IMAGEMAGICK_RESOURCE_LIMIT_THREAD
    # Env: LIFERAY_IMAGEMAGICK_RESOURCE_LIMIT_TIME
    #
    imagemagick.resource.limit.area=2GiB
    #imagemagick.resource.limit.disk=16GiB
    #imagemagick.resource.limit.file=256
    imagemagick.resource.limit.map=1GiB
    imagemagick.resource.limit.memory=2GiB
    #imagemagick.resource.limit.thread=2
    #imagemagick.resource.limit.time=3600

##
## Intraband
##

    #
    # Intrabandの実装のクラス名を指定します。そのクラスは、com.liferay.portal.kernel.nio.intraband.Intrabandインターフェースを実装する必要があります。
    #
    # 値を空白にすると、ポータルは使用中のIntrabandウェルダーを考慮し、システムの最適なパフォーマンスのための実装を選択することに最善を尽くします。
    #
    # 「intraband.welder.impl」プロパティ値に明示的に構成されるか、ポータルにより自動的に選択された使用中のIntrabandウェルダーがcom.liferay.portal.kernel.nio.intraband.welder.socket.SocketWelderである場合、ポータルはcom.liferay.portal.kernel.nio.intraband.nonblocking.SelectorIntrabandクラスをIntrabandの実装として選択します。
    #
    # その他の場合、ポータルはcom.liferay.portal.kernel.nio.intraband.blocking.ExecutorIntrabandクラスをIntrabandの実装として選択します。
    #
    # パフォーマンスに関するヒント:
    #
    # 使用中のLinuxまたはUnix OSでFIFOが提供されている場合、ExecutorIntrabandでのみ動作します。 FIFOを使用するには、ExecutorIntrabandをIntrabandの実装として指定するか、値をブランクにしてポータルが自動的にそれを選択するようにする必要があります。
    #
    # SelectorIntrabandは、登録されたすべてのSelectableChannelsを管理するために、Selectorインスタンスを使用します。 それは、全てのリード/ライト・リクエストを処理するために、単一ポーリングスレッドを持つSelectorインスタンスを使用します。 SelectorIntrabandは、ExecutorIntrabandよりも低いCPUオーバヘッドを持っています。 しかし、SelectorIntrabandは不必要な読み取り/書き込み待機時間を持つ可能性があります(いずれかのコールバックがポーリング・スレッドを保持している場合)。
    #
    # ExecutorIntrabandは、登録済みScatteringByteChannel/GatheringByteChannelの任意のペアと動作します。 ExecutorIntrabandは、各チャネル用の専用ポーリング・スレッドをブロッキング・モードで起動します。 そのためExecutorIntrabandは、SelectorIntrabandよりも高いCPUオーバヘッドを持ちます。しかし、各チャネルのポーリングは分離しているため、ExecutorIntrabandはより優れたスループットと応答時間を提供できます。
    #
    # Intrabandを介した接続を大量に必要とするシステムには、大量のポーリング・スレッドを避けるためにSelectorIntrabandを使用することが最善です。
    #
    # 限られた数のIntrabandを介した接続を必要とするシステムには、スループットと応答時間を最大化するためにExecutorIntrabandを使用することが最適です。
    #
    # Env: LIFERAY_INTRABAND_IMPL
    #
    #intraband.impl=com.liferay.portal.kernel.nio.intraband.blocking.ExecutorIntraband
    #intraband.impl=com.liferay.portal.kernel.nio.intraband.nonblocking.SelectorIntraband
    intraband.impl=

    #
    # 期限切れのメールを受け取るための個別の専用スレッドを立ち上げるには、これをtrueに設定します。 それ以外の場合、期限切れのメールは遅延のある方法で受け取られます。つまり、新たなメールが届き、古いメールが送信された際のみに受け取りが行われます。
    #
    # パフォーマンスに関するヒント:
    #
    # 専用のリーパースレッドを使用すると、期限切れのメールは適時に行われます。これは、メモリの使用量を削減しますが、より多くのCPUパワーを消費します。 専用のリーパースレッドを使用しない場合、CPUパワーは温存されますが、メモリの消費量が増大する可能性があります。
    #
    # 一般的に、小規模で頻繁なメールメッセージ用には、これをオフにすることが懸命です。 大規模で頻度の低いメール目セージ用には、これをオンにすることが懸命です。
    #
    # Env: LIFERAY_INTRABAND_MAILBOX_REAPER_THREAD_ENABLED
    #
    intraband.mailbox.reaper.thread.enabled=false

    #
    # メールをメールボックスに保持する時間をミリ秒単位で設定します。
    #
    # Env: LIFERAY_INTRABAND_MAILBOX_STORAGE_LIFE
    #
    intraband.mailbox.storage.life=10000

    #
    # クラス・ファイルで発生したダンプを格納するディレクトリ名を設定します。このディレクトリは、オペレーティングシステムの一時ディレクトリの下に作成されます。
    #
    # Env: LIFERAY_INTRABAND_PROXY_DUMP_CLASSES_DIR
    #
    intraband.proxy.dump.classes.dir=IntrabandProxyClasses

    #
    # 生成されたプロキシ・クラスをプロパティ「intraband.proxy.dump.classes.dir」で指定されたディレクトリにクラス・ファイルとしてダンプするには、これをtrueに設定します。
    #
    # Env: LIFERAY_INTRABAND_PROXY_DUMP_CLASSES_ENABLED
    #
    intraband.proxy.dump.classes.enabled=true

    #
    # デフォルトのIntraband同期操作のタイムアウト時間をミリ秒単位で設定します。
    #
    # Env: LIFERAY_INTRABAND_TIMEOUT_DEFAULT
    #
    intraband.timeout.default=10000

    #
    # Intrabandウェルダーのクラス名を指定します。このクラスは、com.liferay.portal.kernel.nio.intraband.welder.Welderインターフェイスを実装する必要があります。
    #
    # 値を空白にすると、ポータルはシステムの最適なパフォーマンスのための実装を選択することに最善を尽くします。
    #
    # 使用中のシステムのOSがWindowsではなく、ポータルが使用中のシステムのパスでmkfifoを発見した場合、ポータルはクラスcom.liferay.portal.kernel.nio.intraband.welder.fifo.FIFOWelderを選択します。
    #
    # それ以外の場合、ポータルはソケット・ウェルダー・クラスcom.liferay.portal.kernel.nio.intraband.welder.socket.SocketWelderを選択します。
    #
    # この2つのウェルダーのパフォーマンスを比較した以下の例を考慮してください:
    #
    # 平均では、パッケージのサイズが約2から4メガバイトに達するまでは、スループットおよびレスポンスの遅延の両方で、FIFOウェルダーがソケット・ウェルダーを上回ります。
    #
    # カスタマイズされていないモダンなLinuxカーネルでは、FIFOウェルダーの最適なパッケージサイズは64キロバイトです。 FIFOウェルダーの最適なパッケージサイズは、システムのノンブロッキングパッケージサイズの最大値です。 使用中のシステムのためにそれを計算するには、使用中のシステムのパイプ・サイズ(ulimit -p)にシステムが割り当て可能なカーネル・バッファーの数を乗算します。
    #
    # 「ulimit -p」を実行すると、以下のパイプ・サイズが返されます:
    #
    #     pipe size (512 bytes) * 8 = 4 kilobytes
    #
    # このカーネルは、最大16のバッファーを割り当てることができます。パイプサイズにバッファー数を乗算すると、システムのノンブロッキング・パッケージ・サイズの最大値が算出されます:
    #
    #     4 kilobytes * 16 kernel buffers = 64 kilobytes
    #
    # パッケージ・サイズがこの最適なサイズを以上に拡大すると、FIFOウェルダーのパフォーマンスは低下します。しかし、それは依然としてソケット・ウェルダーのパフォーマンスよりも優れています。これは、パッケージ・サイズが約2から4メガバイトに達するまでです。 そのパッケージ・サイズでは、FIFOウェルダーはソケット・ウェルダーと同等のパフォーマンスをします。 パッケージがそのサイズよりも大きい場合のみ、ソケット・ウェルダーがより優れたパフォーマンスをします。 このような大規模なパッケージのためには、ソケット・ウェルダー・クラスを使用するか、より大きなパイプ・サイズとカーネル・バッファーをサポートするようLinuxカーネルを再コンパイルすることができます。
    #
    # Env: LIFERAY_INTRABAND_WELDER_IMPL
    #
    #intraband.welder.impl=com.liferay.portal.kernel.nio.intraband.welder.fifo.FIFOWelder
    #intraband.welder.impl=com.liferay.portal.kernel.nio.intraband.welder.socket.SocketWelder
    intraband.welder.impl=

    #
    # サーバーとクライアントのソケット・ピア用に、送信と受信のバッファー・サイズをバイト単位で設定します。
    #
    # Env: LIFERAY_INTRABAND_WELDER_SOCKET_BUFFER_SIZE
    #
    intraband.welder.socket.buffer.size=65536

    #
    # サーバーとクライアント両方のソケット・ピアのソケットをアクティブに保つかを指定します。
    #
    # Env: LIFERAY_INTRABAND_WELDER_SOCKET_KEEP_ALIVE
    #
    intraband.welder.socket.keep.alive=false

    #
    # サーバーとクライアント・ソケット・ピアおよび一時サーバーのソケット・チャネルのアドレスを再利用するかを指定します。
    #
    # Env: LIFERAY_INTRABAND_WELDER_SOCKET_REUSE_ADDRESS
    #
    intraband.welder.socket.reuse.address=true

    #
    # SocketWelderが自動的に検索し始めるポート番号を指定します。このポートは、サーバーとクライアントをバインドするために一時的なServerSocketChannelを開くのに使用可能なポートです。 このServerSocketChannelがどのポートを受信するかは関係がないため、SocketWelderは最初に使用可能なポートを使用します。
    #
    # 1つのクライアント・ソケットが受け取られた後、ServerSocketChannelは閉じられ、リサイクルされます。
    #
    # Env: LIFERAY_INTRABAND_WELDER_SOCKET_SERVER_START_PORT
    #
    intraband.welder.socket.server.start.port=32354

    #
    # サーバーとクライアント両方のソケット・ピアにソケットが残留する時間を指定します。 この値は、Socket.setSoLinger(boolean、int)への呼び出しにおける整数形パラメータとして使用されます。
    #
    # 0または正の値は、Socket.setSoLinger(false、int)の呼び出しの結果により生じる残留をオフにします。
    #
    # Env: LIFERAY_INTRABAND_WELDER_SOCKET_SO_LINGER
    #
    intraband.welder.socket.so.linger=0

    #
    # サーバーとクライアント両方のソケット・ピアのSO_TIMEOUTを指定します。この値は、Socket.setSoTimeout(int)の呼び出しに使用されます。
    #
    # Env: LIFERAY_INTRABAND_WELDER_SOCKET_SO_TIMEOUT
    #
    intraband.welder.socket.so.timeout=0

    #
    # サーバーとクライアント両方のソケット・ピアでTCP_NODELAYを有効化するかを指定します。 この値は、Socket.setTcpNoDelay(boolean)の呼び出しで使用されます。
    #
    # Env: LIFERAY_INTRABAND_WELDER_SOCKET_TCP_NO_DELAY
    #
    intraband.welder.socket.tcp.no.delay=true

##
## インボーカー
##

    #
    # このインボーカーは、リクエストのURIとディスパッチャーに基づいて、InvokerFilterChainオブジェクトのキャッシュを試みます。 このプロパティを設定して、キャッシュされるInvokerFilterChainオブジェクトの最大数を構成します。 InvokerFilterChainオブジェクトのキャッシュを無効化するには、このプロパティを0に設定します。
    #
    # Env: LIFERAY_INVOKER_FILTER_CHAIN_CACHE_SIZE
    #
    invoker.filter.chain.cache.size=10000

    #
    # インボーカーのフィルターにより、リクエストのURLがこの値でないポータルへのすべてのリクエストを拒否されます。 技術的な理由により、一般的に4000文字以上を許可するべきではありません。
    #
    # Env: LIFERAY_INVOKER_FILTER_URI_MAX_LENGTH
    #
    invoker.filter.uri.max.length=4000

##
## Javadocマネージャー
##

    #
    # ランタイムでのJavadoc情報の問い合わせを有効化するには、このプロパティをtrueに設定します。 これは、APIについてのより詳細な情報をユーザに提供するために、JSON Webサービスにより http://localhost:8080/api/jsonws で使用されます。 Javadocマネージャーは、ほとんどメモリーを消費せず、起動時間への影響がほとんどありません。しかし、この機能を無効化することで両者を最適化することができます。
    #
    # Env: LIFERAY_JAVADOC_MANAGER_ENABLED
    #
    javadoc.manager.enabled=true

##
## JSON
##

    #
    # JSONサービスの呼び出しが有効な認証トークンを持つことを要求する場合には、これをtrueに設定します。 このプロパティは、「auth.token.check.enabled」もtrueに設定しない限り、使用されません。
    #
    # Env: LIFERAY_JSON_SERVICE_AUTH_TOKEN_ENABLED
    #
    json.service.auth.token.enabled=true

    #
    # 認証トークンの指定なしでJSONサービスにアクセス可能なIPアドレスをコンマ区切りリストで入力します。 すべてのIPアドレスにJSONサービスにアクセスを許可するには、空白のリストを入力します。 SERVER_IPは、ホストサーバーのIPで置換されます。
    #
    # デフォルトの値255.255.255.255は、認証トークンなしでJSONサービスにアクセスできる人がいないことを示しています。これは、255.255.255.255が無効なIPであるためです。
    #
    # Env: LIFERAY_JSON_SERVICE_AUTH_TOKEN_HOSTS_ALLOWED
    #
    json.service.auth.token.hosts.allowed=255.255.255.255

    #
    # JSONを介して呼び出すことができないクラス名をコンマ区切りリストで入力します。
    #
    # Env: LIFERAY_JSON_SERVICE_INVALID_CLASS_NAMES
    #
    json.service.invalid.class.names=\
        com.liferay.documentlibrary.service.DLAppServiceUtil,\
        com.liferay.mail.kernel.service.MailServiceUtil,\
        com.liferay.portal.kernel.service.CompanyServiceUtil,\
        com.liferay.portal.kernel.service.PortalServiceUtil,\
        com.liferay.portal.kernel.service.PortletServiceUtil

    #
    # JSONを介して呼び出すことができないメソッド名をコンマ区切りリストで入力します。
    #
    # Env: LIFERAY_JSON_SERVICE_INVALID_METHOD_NAMES
    #
    json.service.invalid.method.names=\
        getOSGiServiceIdentifier

##
## JSON Webサービス
##

    #
    # JSON Webサービスを有効化するには、このプロパティをtrueに設定します。これをfalse設定することにより、JSON Webサービスの呼び出し元であるポートレットの動作が引き起こされることに注意してください。
    #
    # Env: LIFERAY_JSON_WEB_SERVICE_ENABLED
    #
    json.web.service.enabled=true

    #
    # JSON WebサービスがAPIページを介して発見可能である場合、このプロパティをtrueに設定します。
    #
    # Env: LIFERAY_JSONWS_WEB_SERVICE_API_DISCOVERABLE
    #
    jsonws.web.service.api.discoverable=true

    #
    # アクセスできないHTTPメソッドのコンマ区切りリストを入力します。例えば、読み込みのみのAPIを使用したい場合、このプロパティを「DELETE,POST,PUT」に設定します。
    #
    # Env: LIFERAY_JSONWS_WEB_SERVICE_INVALID_HTTP_METHODS
    #
    jsonws.web.service.invalid.http.methods=

    #
    # 想定されたHTTPメソッドのみからJSON Webサービスのアクションが呼び出し可能であることを確実にするには、このプロパティをtrueにします。
    #
    # 例えば、コメントcom.liferay.portal.kernel.jsonwebservice.JSONWebServiceは、GETリクエストとなるアクションに想定されるHTTPメソッドを構成することができます。 しかし、そのGETリクエスト用のURLは長すぎる場合があります。その場合は、それをPOSTリクエストで呼び出す必要があります。 このプロパティをfalseにすると、この要件が緩くなり、GETリクエストからのみ呼び出すことが想定されているアクションをPOSTリクエストが呼び出すことが許可されます。
    #
    # Env: LIFERAY_JSONWS_WEB_SERVICE_STRICT_HTTP_METHOD
    #
    jsonws.web.service.strict.http.method=false

    #
    # プロパティ「jsonws.web.service.paths.excludes」は、「jsonws.web.service.paths.includes」のパターン・セットの1つに一致する場合でも許可しないJSON Webサービスのアクション・パスのパターンを示します。
    #
    # Env: LIFERAY_JSONWS_WEB_SERVICE_PATHS_EXCLUDES
    #
    jsonws.web.service.paths.excludes=

    #
    # プロパティ「jsonws.web.service.paths.includes」は、許可されているJSON Webサービスのアクション・パスのパターンを示します。 すべてのサービス・アクション・パスを許可するには、空白のパターンを設定します。
    #
    # Env: LIFERAY_JSONWS_WEB_SERVICE_PATHS_INCLUDES
    #
    jsonws.web.service.paths.includes=

##
## ライブ・ユーザー
##

    #ライブ・ユーザを使用したトラッキングを有効化するには、この設定をtrueに設定します。Set this to true to enable tracking via Live Users.
    #
    live.users.enabled=false

##
## ロック
##

    #
    # com.liferay.portal.kernel.lock.LockListener を実装するクラス名をコンマ区切りリストで入力します。 ロック・リスナーにを使用して、オブジェクトをロックする方法についてのロジックを指定できます。 この実装は、スレッド・セーフである必要があります。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。 ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_LOCK_LISTENERS
    #
    #lock.listeners=com.liferay.portlet.documentlibrary.util.DLFileEntryLockListener

    #
    # 各クラスのロックの有効期限を設定します。
    #

    #
    # 公開プロセスのロックは、10分後に期限切れとなる必要があります。
    #
    # Env: LIFERAY_LOCK_EXPIRATION_TIME_COM_LIFERAY_PORTAL_KERNEL_STAGING__UPPERCASES_TAGING
    #
    lock.expiration.time.com.liferay.portal.kernel.staging.Staging=600000

    #
    # ドキュメント・ライブラリー・フォルダのロックは、1日後に期限切れとなる必要があります。
    #
    # Env: LIFERAY_LOCK_EXPIRATION_TIME_COM_LIFERAY_DOCUMENT_LIBRARY_KERNEL_MODEL__UPPERCASED__UPPERCASEL__UPPERCASEF_OLDER
    #
    lock.expiration.time.com.liferay.document.library.kernel.model.DLFolder=86400000

    #
    # ドキュメントライブラリーファイルのロックは、1日後に期限切れとなる必要があります。
    #
    # Env: LIFERAY_LOCK_EXPIRATION_TIME_COM_LIFERAY_DOCUMENT_LIBRARY_KERNEL_MODEL__UPPERCASED__UPPERCASEL__UPPERCASEF_ILE_UPPERCASEE_NTRY
    #
    lock.expiration.time.com.liferay.document.library.kernel.model.DLFileEntry=86400000

    #
    # メッセージボードのスレッドのロックは、期限切れとなってはいけません。
    #
    # Env: LIFERAY_LOCK_EXPIRATION_TIME_COM_LIFERAY_MESSAGE_BOARDS_KERNEL_MODEL__UPPERCASEM__UPPERCASEB__UPPERCASET_HREAD
    #
    lock.expiration.time.com.liferay.message.boards.kernel.model.MBThread=0

##
## メール
##

    #
    # 送信Eメールのバッチ・サイズを設定します。複数の受信者を持つEメールを同時に送るためのリクエストをメール・サーバーに送信するには、このプロパティを0に設定します。 メール・サーバーの受信者サイズの制限に達しないことを確実にするために、受信者のリストをバッチ・サイズにより分割して複数のリクエストがメール・サーバーへ送信されるようにするには、0より大きい値を設定します。
    #
    # Env: LIFERAY_MAIL_BATCH_SIZE
    #
    mail.batch.size=0

    #
    # Java MailセッションをルックアップするためのJNDI名を設定します。これを設定しない場合、ポータルはプレフィック「mail.session.」を持つプロパティを基にJava Mailセッションを作成します。
    #
    # Env: LIFERAY_MAIL_SESSION_JNDI_NAME
    #
    #mail.session.jndi.name=mail/MailSession

    #
    # Java Mailセッションを作成するために使用されるプロパティを設定します。プロパティのプレフィック「mail.session.」は、それがセッションオブジェクトを作成するのに使用される前に削除されます。 これらのプロパティは、プロパティ「mail.session.jndi.name」が設定されていない場合のみ読み込まれます。
    #
    # Env: LIFERAY_MAIL_SESSION_MAIL_POP_NUMBER3__HOST
    # Env: LIFERAY_MAIL_SESSION_MAIL_POP_NUMBER3__PASSWORD
    # Env: LIFERAY_MAIL_SESSION_MAIL_POP_NUMBER3__PORT
    # Env: LIFERAY_MAIL_SESSION_MAIL_POP_NUMBER3__USER
    # Env: LIFERAY_MAIL_SESSION_MAIL_SMTP_AUTH
    # Env: LIFERAY_MAIL_SESSION_MAIL_SMTP_HOST
    # Env: LIFERAY_MAIL_SESSION_MAIL_SMTP_PASSWORD
    # Env: LIFERAY_MAIL_SESSION_MAIL_SMTP_PORT
    # Env: LIFERAY_MAIL_SESSION_MAIL_SMTP_USER
    # Env: LIFERAY_MAIL_SESSION_MAIL_STORE_PROTOCOL
    # Env: LIFERAY_MAIL_SESSION_MAIL_TRANSPORT_PROTOCOL
    #
    mail.session.mail.pop3.host=localhost
    mail.session.mail.pop3.password=
    mail.session.mail.pop3.port=110
    mail.session.mail.pop3.user=
    mail.session.mail.smtp.auth=false
    mail.session.mail.smtp.host=localhost
    mail.session.mail.smtp.password=
    mail.session.mail.smtp.port=25
    mail.session.mail.smtp.user=
    mail.session.mail.store.protocol=pop3
    mail.session.mail.transport.protocol=smtp

    #
    # 管理者が管理ポートレットを介してメール・ドメインを変更することを許可しない場合、これをfalseに設定します。
    #
    # Env: LIFERAY_MAIL_MX_UPDATE
    #
    mail.mx.update=true

    #
    # メール・サーバーを通じて送信される各メールのBCCを受信するEメールアドレスを、コンマ区切りリストで入力します。
    #
    # Env: LIFERAY_MAIL_AUDIT_TRAIL
    #
    mail.audit.trail=

    #
    # com.liferay.mail.util.Hookを実装するクラスの名称を設定します。メール・サーバーは、メールとポータル・サーバー上のユーザー情報が同期されていることを確認するためにこのクラスを使用します。 ポータルは、このフックを介す方法以外には、メール・サーバーへの(からの)ユーザの追加、更新または削除の方法を持ちません。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。 ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_MAIL_HOOK_IMPL
    #
    #mail.hook.impl=com.liferay.mail.util.DummyHook
    #mail.hook.impl=com.liferay.mail.util.SendmailHook
    #mail.hook.impl=com.liferay.mail.util.ShellHook

    #
    # SendmailHook
    #
    # ユーザを追加・更新・削除するためのコマンドを設定します。%1%はユーザID、%2%はパスワードです。 ホームおよびバーチャルのユーザーテーブル情報を設定します。
    #
    # Env: LIFERAY_MAIL_HOOK_SENDMAIL_ADD_USER
    # Env: LIFERAY_MAIL_HOOK_SENDMAIL_CHANGE_PASSWORD
    # Env: LIFERAY_MAIL_HOOK_SENDMAIL_DELETE_USER
    # Env: LIFERAY_MAIL_HOOK_SENDMAIL_HOME
    # Env: LIFERAY_MAIL_HOOK_SENDMAIL_VIRTUSERTABLE
    # Env: LIFERAY_MAIL_HOOK_SENDMAIL_VIRTUSERTABLE_REFRESH
    #
    mail.hook.sendmail.add.user=adduser %1% -s /bin/false
    mail.hook.sendmail.change.password=autopasswd %1% %2%
    mail.hook.sendmail.delete.user=userdel -r %1%
    mail.hook.sendmail.home=/home
    mail.hook.sendmail.virtusertable=/etc/mail/virtusertable
    mail.hook.sendmail.virtusertable.refresh=bash -c "makemap hash /etc/mail/virtusertable < /etc/mail/virtusertable"

    #
    # ShellHook
    #
    # 任意のメール・サーバーのインターフェースとなるシェル・スクリプトの場所を設定します。
    #
    # Env: LIFERAY_MAIL_HOOK_SHELL_SCRIPT
    #
    mail.hook.shell.script=/usr/sbin/mailadmin.ksh

    #
    # com.liferay.util.mail.MailEngineがEメールの送信に失敗する場合、例外が発生するようこれをtrueに設定します。
    #
    # Env: LIFERAY_MAIL_THROWS_EXCEPTION_ON_FAILURE
    #
    mail.throws.exception.on.failure=false

##
## ミニファイア
##

    #
    # CSSとJavaScriptのリソースの圧縮を有効化するには、これをtrueに設定します。
    #
    # Env: LIFERAY_MINIFIER_ENABLED
    #
    minifier.enabled=true

    #
    # このストリップフィルターは、圧縮されたインラインのCSSとJavaScriptのコンテンツのキャッシュを試みます。 キャッシュされたコンテンツの最大ピースを構成するには、このプロパティを設定します。 圧縮されたインラインのコンテンツのキャッシュを無効化するには、このプロパティを0に設定します。
    #
    # Env: LIFERAY_MINIFIER_INLINE_CONTENT_CACHE_SIZE
    #
    minifier.inline.content.cache.size=10000

    #
    # 圧縮されたCSSをキャッシュしないようにする値がコンテンツに含まれていない場合、それらの値をコンマ区切りリストで入力します。
    #
    # Env: LIFERAY_MINIFIER_INLINE_CONTENT_CACHE_SKIP_CSS
    #
    minifier.inline.content.cache.skip.css=

    #
    # 圧縮されたJavaScriptをキャッシュしないようにする値がそのコンテンツに含まれていない場合、それらの値をコンマ区切りリストで入力します。
    #
    # Env: LIFERAY_MINIFIER_INLINE_CONTENT_CACHE_SKIP_JAVASCRIPT
    #
    minifier.inline.content.cache.skip.javascript=getSessionId,encryptedUserId

    #
    # com.liferay.portal.minifier.JavaScriptMinifierを実装するクラスの名称を入力します。 このクラスは、JavaScriptを圧縮するために呼び出されます。
    #
    # Env: LIFERAY_MINIFIER_JAVASCRIPT_IMPL
    #
    minifier.javascript.impl=com.liferay.portal.minifier.GoogleJavaScriptMinifier
    #minifier.javascript.impl=com.liferay.portal.minifier.YahooJavaScriptMinifier

##
## モバイル・デバイスのルール
##

    #
    # ユーザデバイスのプロファイルをHTTPセッションへキャッシュするには、このプロパティをtrueに設定します。 このプロパティがfalseである場合、ポータルは各リクエストのデバイス検知を実行します。
    #
    # Env: LIFERAY_MOBILE_DEVICE_SESSION_CACHE_ENABLED
    #
    mobile.device.session.cache.enabled=true

    #
    # デフォルトでモバイル・デバイスのルールをライブへと公開する必要がある場合、これをtrueに設定します。
    #
    # Env: LIFERAY_MOBILE_DEVICE_RULES_PUBLISH_TO_LIVE_BY_DEFAULT
    #
    mobile.device.rules.publish.to.live.by.default=true

    #
    # このプロパティは、コピーされたルール・グループの名前にローカライズされ追加される接尾辞を定義します。
    #
    # Env: LIFERAY_MOBILE_DEVICE_RULES_RULE_GROUP_COPY_POSTFIX
    #
    mobile.device.rules.rule.group.copy.postfix=copy

##
## モジュール・フレームワーク
##

    #
    # モジュール・フレームワークの初期の開始レベルを設定します。このモジュールフレームワークは、すべての静的バンドルがインストールされた後にこの開始レベルへと進みます。 すべての静的バンドルは、プロパティ「module.framework.initial.bundles」により違う値が割り当て割れている場合を除き、インストール時にデフォルトでこの開始レベルに構成されます。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_BEGINNING_START_LEVEL
    #
    module.framework.beginning.start.level=6

    #
    # モジュール・フレームワークのランタイムの開始レベルを設定します。このモジュール・フレームワークは、すべての動的バンドルがインストールされた後にこの開始レベルへと進みます。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_DYNAMIC_INSTALL_START_LEVEL
    #
    module.framework.dynamic.install.start.level=10

    #
    # モジュール・フレームワークのランタイムの開始レベルを設定します。このモジュール・フレームワークは、Springコンテクストが初期化された後にこの開始レベルに進みます。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_RUNTIME_START_LEVEL
    #
    module.framework.runtime.start.level=20

    #
    # モジュール・フレームワークの非同期停止のタイムアウト待機時間をミリ秒単位で設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_STOP_WAIT_TIMEOUT
    #
    module.framework.stop.wait.timeout=30000

    #
    # モジュール・フレームワークのベース・パスを構成するディレクトリを設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_BASE_DIR
    #
    module.framework.base.dir=${liferay.home}/osgi

    #
    # 自動デプロイのためのモジュールと構成をスキャンするためのディレクトリを、コンマ区切りリストで設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_AUTO_DEPLOY_DIRS
    #
    module.framework.auto.deploy.dirs=\
        ${module.framework.configs.dir},\
        ${module.framework.marketplace.dir},\
        ${module.framework.modules.dir},\
        ${module.framework.war.dir}

    #
    # ディレクトリの変更をスキャンする頻度の間隔をミリ秒単位で設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_AUTO_DEPLOY_INTERVAL
    #
    module.framework.auto.deploy.interval=5000

    #
    # モジュール・フレームワークが配置されるディレクトリを設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_CONFIGS_DIR
    #
    module.framework.configs.dir=${module.framework.base.dir}/configs

    #
    # モジュール・フレームワークのマーケットプレイス・アプリケーションが配置されるディレクトリを設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_MARKETPLACE_DIR
    #
    module.framework.marketplace.dir=${module.framework.base.dir}/marketplace

    #
    # モジュール・ライブラリが配置されるディレクトリを設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_MODULES_DIR
    #
    module.framework.modules.dir=${module.framework.base.dir}/modules

    #
    # モジュール・フレームワークのポータル・ライブラリが配置されるディレクトリを設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_PORTAL_DIR
    #
    module.framework.portal.dir=${module.framework.base.dir}/portal

    #
    # モジュール・フレームワークのWARアプリケーションが配置されるディレクトリを設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_WAR_DIR
    #
    module.framework.war.dir=${module.framework.base.dir}/war

    #
    # モジュール・フレームワークがその状態を保持するディレクトリを設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_STATE_DIR
    #
    module.framework.state.dir=${module.framework.base.dir}/state

    #
    # Liferayのコアサービスをモジュール・フレームワークに登録するには、これをtrueに設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_REGISTER_LIFERAY_SERVICES
    #
    module.framework.register.liferay.services=true

    module.framework.services.ignored.interfaces=\
        com.liferay.portal.cache.thread.local.ThreadLocalCacheAdvice,\
        com.liferay.portal.dao.jdbc.util.DataSourceSwapper,\
        com.liferay.portal.dao.orm.hibernate.SessionFactoryImpl,\
        com.liferay.portal.increment.BufferedIncrementAdvice,\
        com.liferay.portal.kernel.dao.orm.SessionFactory,\
        com.liferay.portal.kernel.security.pacl.PACLConstants,\
        com.liferay.portal.messaging.async.AsyncAdvice,\
        com.liferay.portal.resiliency.service.PortalResiliencyAdvice,\
        com.liferay.portal.search.IndexableAdvice,\
        com.liferay.portal.security.access.control.AccessControlAdvice,\
        com.liferay.portal.security.lang.DoPrivilegedFactory,\
        com.liferay.portal.service.persistence.impl.*,\
        com.liferay.portal.systemevent.SystemEventAdvice,\
        com.liferay.portal.verify.model.*,\
        com.mchange.*,\
        com.sun.*,\
        java.*,\
        org.aopalliance.*,\
        org.apache.lucene.*,\
        org.apache.tika.*,\
        org.hibernate.*,\
        org.springframework.*

    #
    # Set a comma delimited list of jars that are deployed to the app server's
    # "/WEB-INF/lib" directory to be statically included in all bundles.
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_STATIC_JARS
    #
    module.framework.static.jars=\
        com.liferay.portal.osgi.web.jasper.plugins.jar,\
        util-taglib.jar

    #
    # 追加のシステム・パッケージとしてモジュール・フレームワークにエクスポートするJavaパッケージを、コンマ区切りリストで設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_SYSTEM_PACKAGES_EXTRA
    #
    module.framework.system.packages.extra=\
        com.ibm.crypto.provider,\
        com.ibm.db2.jcc,\
        com.microsoft.sqlserver.jdbc,\
        com.mysql.jdbc,\
        com.p6spy.engine.spy,\
        com.sun.security.auth.module,\
        com.sybase.jdbc4.jdbc,\
        oracle.jdbc,\
        org.postgresql,\
        org.hsqldb.jdbc,\
        org.mariadb.jdbc,\
        sun.misc,\
        sun.net.util,\
        sun.security.provider

    #
    # 同一のJVM内で実行されている可能性のあるその他のフレームワークとの衝突を回避するために、プレフィック「module.framework.properties.」を使用して無作為の追加プロパティをフレームワークに渡します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_DS_LOCK_TIMEOUT_MILLISECONDS
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_DS_STOP_TIMEOUT_MILLISECONDS
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_FELIX_FILEINSTALL_BUNDLES_NEW_START
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_FELIX_FILEINSTALL_BUNDLES_START_UPPERCASEA_CTIVATION_UPPERCASEP_OLICY
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_FELIX_FILEINSTALL_BUNDLES_START_UPPERCASET_RANSIENT
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_FELIX_FILEINSTALL_DISABLE_UPPERCASEN_IO_NUMBER2_
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_FELIX_FILEINSTALL_FILTER
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_FELIX_FILEINSTALL_LOG_LEVEL
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_FELIX_FILEINSTALL_NO_UPPERCASEI_NITIAL_UPPERCASED_ELAY
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_FELIX_FILEINSTALL_OPTIONAL_UPPERCASEI_MPORT_UPPERCASER_EFRESH_UPPERCASES_COPE
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_GOSH_ARGS
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_LPKG_DEPLOYER_DIR
    # Env: LIFERAY_MODULE_FRAMEWORK_PROPERTIES_ORG_APACHE_FELIX_EVENTADMIN__UPPERCASET_HREAD_UPPERCASEP_OOL_UPPERCASES_IZE
    #
    module.framework.properties.ds.lock.timeout.milliseconds=1800000
    module.framework.properties.ds.stop.timeout.milliseconds=1800000
    module.framework.properties.felix.fileinstall.bundles.new.start=true
    module.framework.properties.felix.fileinstall.bundles.startActivationPolicy=false
    module.framework.properties.felix.fileinstall.bundles.startTransient=false
    module.framework.properties.felix.fileinstall.disableNio2=true
    module.framework.properties.felix.fileinstall.filter=(?!^override$).+
    module.framework.properties.felix.fileinstall.log.level=2
    module.framework.properties.felix.fileinstall.noInitialDelay=true
    module.framework.properties.felix.fileinstall.optionalImportRefreshScope=managed
    module.framework.properties.gosh.args=--noshutdown
    module.framework.properties.lpkg.deployer.dir=${module.framework.base.dir}/marketplace
    module.framework.properties.org.apache.felix.eventadmin.ThreadPoolSize=2

    module.framework.properties.org.osgi.framework.bootdelegation=\
        __redirected,\
        com.liferay.aspectj,\
        com.liferay.aspectj.*,\
        com.liferay.portal.servlet.delegate,\
        com.liferay.portal.servlet.delegate*,\
        com.sun.ccpp,\
        com.sun.ccpp.*,\
        com.sun.crypto.*,\
        com.sun.image.*,\
        com.sun.jmx.*,\
        com.sun.jna,\
        com.sun.jndi.*,\
        com.sun.mail.*,\
        com.sun.management.*,\
        com.sun.media.*,\
        com.sun.msv.*,\
        com.sun.org.*,\
        com.sun.syndication,\
        com.sun.tools.*,\
        com.sun.xml.*,\
        com.yourkit.*,\
        sun.*

    module.framework.properties.org.osgi.framework.bundle.parent=framework

    module.framework.properties.org.osgi.framework.system.capabilities.extra=\
        osgi.contract;osgi.contract=JavaPortlet;version:Version=1;\
        uses:="javax.portlet",\
        osgi.contract;osgi.contract=JavaPortlet;version:Version=2;\
        uses:="javax.portlet,javax.portlet.filter",\
        osgi.contract;osgi.contract=JavaServlet;version:Version=2.5;\
        uses:="javax.servlet,javax.servlet.http",\
        osgi.contract;osgi.contract=JavaServlet;version:Version=3;\
        uses:="javax.servlet,javax.servlet.http"

    module.framework.properties.osgi.compatibility.eagerStart.LazyActivation=false
    module.framework.properties.osgi.console=localhost:11311
    module.framework.properties.osgi.context.bootdelegation=false
    module.framework.properties.osgi.module.lock.timeout=3600

##
## モジュール・フレームワーク・ウェブ・アプリケーション・バンドル
##

    #
    # Webアプリケーション・バンドル(WAB)は、OSGi標準により定義され、OSGiバンドルとして有効なWebアプリケーションを示しています。
    #

    #
    # すべてのWABを含むパッケージをコンマ区切りリストで入力します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_WEB_GENERATOR_DEFAULT_SERVLET_PACKAGES
    #
    module.framework.web.generator.default.servlet.packages=\
        com.liferay.portal.model,\
        com.liferay.portal.security.access.control,\
        com.liferay.portal.security.auth,\
        com.liferay.portal.security.permission,\
        com.liferay.portal.service,\
        com.liferay.portal.servlet,\
        com.liferay.portal.servlet.filters.aggregate,\
        com.liferay.portal.servlet.filters.dynamiccss,\
        com.liferay.portal.osgi.web.servlet.jsp.compiler,\
        com.liferay.portal.spring.context,\
        com.liferay.portal.theme,\
        com.liferay.portal.util,\
        com.liferay.portlet,\
        com.sun.el,\
        com.sun.el.lang,\
        com.sun.el.parser,\
        com.sun.el.stream,\
        com.sun.el.util,\
        org.apache.commons.chain.generic,\
        org.apache.naming.java

    #
    # すべてのWABを除外したパスをコンマ区切りリストで入力します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_WEB_GENERATOR_EXCLUDED_PATHS
    #
    module.framework.web.generator.excluded.paths=\
        WEB-INF/lib/ant.jar,\
        WEB-INF/lib/aopalliance.jar,\
        WEB-INF/lib/aopalliance-1.0.jar,\
        WEB-INF/lib/asm-debug-all.jar,\
        WEB-INF/lib/aspectj-rt.jar,\
        WEB-INF/lib/bnd.jar,\
        WEB-INF/lib/ccpp.jar,\
        WEB-INF/lib/commons-beanutils.jar,\
        WEB-INF/lib/commons-chain.jar,\
        WEB-INF/lib/commons-codec.jar,\
        WEB-INF/lib/commons-collections.jar,\
        WEB-INF/lib/commons-discovery.jar,\
        WEB-INF/lib/commons-fileupload.jar,\
        WEB-INF/lib/commons-httpclient.jar,\
        WEB-INF/lib/commons-io.jar,\
        WEB-INF/lib/commons-lang.jar,\
        WEB-INF/lib/commons-logging.jar,\
        WEB-INF/lib/dom4j.jar,\
        WEB-INF/lib/el-api.jar,\
        WEB-INF/lib/ext-util-bridges.jar,\
        WEB-INF/lib/ext-util-java.jar,\
        WEB-INF/lib/ext-util-taglib.jar,\
        WEB-INF/lib/hibernate-commons-annotations.jar,\
        WEB-INF/lib/hibernate-core.jar,\
        WEB-INF/lib/jaxen.jar,\
        WEB-INF/lib/jaxrpc.jar,\
        WEB-INF/lib/jdom.jar,\
        WEB-INF/lib/jms.jar,\
        WEB-INF/lib/jodd.jar,\
        WEB-INF/lib/json-java.jar,\
        WEB-INF/lib/jstl-api.jar,\
        WEB-INF/lib/jstl-impl.jar,\
        WEB-INF/lib/liferay-icu4j.jar,\
        WEB-INF/lib/log4j.jar,\
        WEB-INF/lib/log4j-extras.jar,\
        WEB-INF/lib/mail.jar,\
        WEB-INF/lib/persistence.jar,\
        WEB-INF/lib/portal-impl.jar,\
        WEB-INF/lib/portal-kernel.jar,\
        WEB-INF/lib/portlet.jar,\
        WEB-INF/lib/rome.jar,\
        WEB-INF/lib/servlet-api.jar,\
        WEB-INF/lib/slf4j-api.jar,\
        WEB-INF/lib/spring-aop.jar,\
        WEB-INF/lib/spring-aspects.jar,\
        WEB-INF/lib/spring-beans.jar,\
        WEB-INF/lib/spring-context.jar,\
        WEB-INF/lib/spring-context-support.jar,\
        WEB-INF/lib/spring-core.jar,\
        WEB-INF/lib/spring-expression.jar,\
        WEB-INF/lib/spring-jdbc.jar,\
        WEB-INF/lib/spring-jms.jar,\
        WEB-INF/lib/spring-orm.jar,\
        WEB-INF/lib/spring-oxm.jar,\
        WEB-INF/lib/spring-tx.jar,\
        WEB-INF/lib/spring-web.jar,\
        WEB-INF/lib/spring-webmvc.jar,\
        WEB-INF/lib/spring-webmvc-portlet.jar,\
        WEB-INF/lib/tika-core.jar,\
        WEB-INF/lib/tika-parsers.jar,\
        WEB-INF/lib/util-taglib.jar,\
        WEB-INF/lib/xalan.jar,\
        WEB-INF/lib/xercesImpl.jar,\
        WEB-INF/lib/xercesImpl-2.9.1.jar,\
        WEB-INF/lib/xml-apis.jar,\
        WEB-INF/lib/xml-apis-1.3.04.jar,\
        WEB-INF/lib/xmlsec.jar,\
        WEB-INF/lib/xstream.jar

    #
    # 生成されたWABを保存するには、これをtrueに設定します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_WEB_GENERATOR_GENERATED_WABS_STORE
    #
    module.framework.web.generator.generated.wabs.store=false

    #
    # 生成されたWABを保存するディレクトリを設定します。このプロパティは、プロパティ「module.framework.web.generator.generated.wabs.store」がtrueに設定されている場合を除き、使用されません。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_WEB_GENERATOR_GENERATED_WABS_STORE_DIR
    #
    module.framework.web.generator.generated.wabs.store.dir=${module.framework.base.dir}/wabs

    #
    # この山かっこ内のテキストは、カスタムヘッダー/値で置換する必要があります。 ヘッダー/値のフォーマットは、BNDです(http://www.aqute.biz/Bnd/Format)。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_WEB_GENERATOR_HEADERS__LESSTHAN_HEADER_GREATERTHAN_
    #
    #module.framework.web.generator.headers.<header>=<value>

    #
    # 「module.framework.web.generator.headers.<header>=<value>」で定義されるカスタム・ヘッダーを生成する必要がある特定のWABバンドルを設定します。 このWABバンドルは、かっこに囲まれたWABバンドルのシンボル名を含むプロパティに接尾辞を加えることで定義されます。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_WEB_GENERATOR_HEADERS__UPPERCASEI_MPORT_MINUS__UPPERCASEP_ACKAGE_OPENBRACKET_MY_MINUS_HOOK_CLOSEBRACKET_
    #
    #module.framework.web.generator.headers.Import-Package[my-hook]=

    #
    # WABの依存関係分析により依存関係が解決されない場合に、必要なヘッダーをコンマ区切りリストで設定します。 これは、JavaリフレクションAPIを使用して動的に読み込まれている場合に発生します。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_WEB_GENERATOR_HEADERS__UPPERCASED_YNAMIC_UPPERCASEI_MPORT_MINUS__UPPERCASEP_ACKAGE
    #
    module.framework.web.generator.headers.DynamicImport-Package=

    module.framework.web.generator.headers.Export-Package=

    module.framework.web.generator.headers.Import-Package=

    #
    # 生成されたWABのためにJSPコンパイラーが必要とする依存関係を、コンマ区切りリストで設定します。 2種類の参照を使用できます。1つめは、JARまたはJavaクラスを含むフォルダーへのファイル・システム・パスです。 2つめは、ランタイムで動的にパスへと解決されるJavaクラスの名称です。
    #
    # Env: LIFERAY_MODULE_FRAMEWORK_WEB_GENERATOR_JSP_COMPILER_DEPENDENCIES
    #
    module.framework.web.generator.jsp.compiler.dependencies=\
        com.liferay.portal.PortalException,\
        com.liferay.portal.util.PortalImpl,\
        javax.el.ELException,\
        javax.portlet.PortletException,\
        javax.servlet.ServletException,\
        javax.servlet.jsp.JspException

##
## マルチキャスト
##

    #
    # メンテナンスをより容易にするために、マルチキャスト・アドレスとポート設定を1つの場所に統合します。 これらの設定は、クラスター間の高速で正確な通信を確保するために、使用中の物理ネットワークの設定と互いに関連している必要があります。
    #
    # それぞれのアドレスとポートの組み合わせは、異なるノード間で行われる会話を示しています。 それらが一意でなかったり、正しく設定されていない場合、更新の低速化や不正確な更新を引き起こす可能性のある不必要なネットワーク・トラフィックが発生する可能性があります。
    #

    #
    # プロパティ「cluster.link.channel.properties.control」を参照してください。
    #
    # Env: LIFERAY_MULTICAST_GROUP_ADDRESS_OPENBRACKET__QUOTE_CLUSTER_MINUS_LINK_MINUS_CONTROL_QUOTE__CLOSEBRACKET_
    # Env: LIFERAY_MULTICAST_GROUP_PORT_OPENBRACKET__QUOTE_CLUSTER_MINUS_LINK_MINUS_CONTROL_QUOTE__CLOSEBRACKET_
    #
    multicast.group.address["cluster-link-control"]=239.255.0.1
    #multicast.group.address["cluster-link-control"]=ff0e::8:8:1
    multicast.group.port["cluster-link-control"]=23301

    #
    # 参照プロパティ「cluster.link.channel.properties.transport.0」および「cluster.link.channel.system.properties」を参照してください。
    #
    # Env: LIFERAY_MULTICAST_GROUP_ADDRESS_OPENBRACKET__QUOTE_CLUSTER_MINUS_LINK_MINUS_UDP_QUOTE__CLOSEBRACKET_
    # Env: LIFERAY_MULTICAST_GROUP_PORT_OPENBRACKET__QUOTE_CLUSTER_MINUS_LINK_MINUS_UDP_QUOTE__CLOSEBRACKET_
    #
    multicast.group.address["cluster-link-udp"]=239.255.0.2
    #multicast.group.address["cluster-link-udp"]=ff0e::8:8:2
    multicast.group.port["cluster-link-udp"]=23302

    #
    # プロパティ「cluster.link.channel.system.properties」を参照してください。
    #
    # Env: LIFERAY_MULTICAST_GROUP_ADDRESS_OPENBRACKET__QUOTE_CLUSTER_MINUS_LINK_MINUS_MPING_QUOTE__CLOSEBRACKET_
    # Env: LIFERAY_MULTICAST_GROUP_PORT_OPENBRACKET__QUOTE_CLUSTER_MINUS_LINK_MINUS_MPING_QUOTE__CLOSEBRACKET_
    #
    multicast.group.address["cluster-link-mping"]=239.255.0.3
    #multicast.group.address["cluster-link-mping"]=ff0e::8:8:3
    multicast.group.port["cluster-link-mping"]=23303

    #
    # プロパティ「ehcache.multi.vm.config.location" and"ehcache.multi.vm.config.location.peerProviderProperties」を参照してください。
    #
    # Env: LIFERAY_MULTICAST_GROUP_ADDRESS_OPENBRACKET__QUOTE_MULTI_MINUS_VM_QUOTE__CLOSEBRACKET_
    # Env: LIFERAY_MULTICAST_GROUP_PORT_OPENBRACKET__QUOTE_MULTI_MINUS_VM_QUOTE__CLOSEBRACKET_
    #
    multicast.group.address["multi-vm"]=239.255.0.5
    multicast.group.port["multi-vm"]=23305

##
## 通知
##

    #
    # 1人のユーザーのキューに追加するのを許可する一時的なイベントの最大数を設定します。 イベントが超過した場合、有効期限が最も近いイベントが削除されます。
    #
    # Env: LIFERAY_NOTIFICATIONS_MAX_EVENTS
    #
    notifications.max.events=100

##
## OpenOffice
##

    #
    # OpenOffice統合を有効化することで、ドキュメント・ライブラリ・ポートレットおよびWikiポートレットが変換機能を提供することが可能になります。 これは、OpenOffice 2.3x から 3.2.xでテストされています。 同一マシンにOpenOfficeをインストールしておくのをお勧めします。 インスタンスにリモートホストを使用することは完全にサポートされていません。また、様々な問題を招く可能性があります。 サービスとしてOpenOfficeを起動するには、以下のコマンドを実行します:
    #
    # soffice -headless -accept="socket,host=127.0.0.1,port=8100;urp;"
    #
    # Env: LIFERAY_OPENOFFICE_CACHE_ENABLED
    # Env: LIFERAY_OPENOFFICE_SERVER_ENABLED
    # Env: LIFERAY_OPENOFFICE_SERVER_HOST
    # Env: LIFERAY_OPENOFFICE_SERVER_PORT
    #
    openoffice.server.enabled=false
    openoffice.server.host=127.0.0.1
    openoffice.server.port=8100
    openoffice.cache.enabled=true

    #
    # 変換元として許可するファイルのファイル拡張子を指定します。エントリは、OpenOfficeによりサポートされるものに限定する必要があります。
    #
    # Env: LIFERAY_OPENOFFICE_CONVERSION_SOURCE_EXTENSIONS_OPENBRACKET_DRAWING_CLOSEBRACKET_
    # Env: LIFERAY_OPENOFFICE_CONVERSION_SOURCE_EXTENSIONS_OPENBRACKET_PRESENTATION_CLOSEBRACKET_
    # Env: LIFERAY_OPENOFFICE_CONVERSION_SOURCE_EXTENSIONS_OPENBRACKET_SPREADSHEET_CLOSEBRACKET_
    # Env: LIFERAY_OPENOFFICE_CONVERSION_SOURCE_EXTENSIONS_OPENBRACKET_TEXT_CLOSEBRACKET_
    #
    openoffice.conversion.source.extensions[drawing]=odg
    openoffice.conversion.source.extensions[presentation]=odp,ppt,pptx,sxi
    openoffice.conversion.source.extensions[spreadsheet]=csv,ods,sxc,tsv,xls,xlsx
    openoffice.conversion.source.extensions[text]=doc,docx,html,odt,rtf,sxw,txt,wpd

    #
    # 変換先として許可するファイルのファイル拡張子を指定します。エントリは、OpenOfficeによりサポートされるものに限定する必要があります。
    #
    # Env: LIFERAY_OPENOFFICE_CONVERSION_TARGET_EXTENSIONS_OPENBRACKET_DRAWING_CLOSEBRACKET_
    # Env: LIFERAY_OPENOFFICE_CONVERSION_TARGET_EXTENSIONS_OPENBRACKET_PRESENTATION_CLOSEBRACKET_
    # Env: LIFERAY_OPENOFFICE_CONVERSION_TARGET_EXTENSIONS_OPENBRACKET_SPREADSHEET_CLOSEBRACKET_
    # Env: LIFERAY_OPENOFFICE_CONVERSION_TARGET_EXTENSIONS_OPENBRACKET_TEXT_CLOSEBRACKET_
    #
    openoffice.conversion.target.extensions[drawing]=pdf,svg,swf
    openoffice.conversion.target.extensions[presentation]=odp,pdf,ppt,swf,sxi
    openoffice.conversion.target.extensions[spreadsheet]=csv,ods,pdf,sxc,tsv,xls
    openoffice.conversion.target.extensions[text]=doc,odt,pdf,rtf,sxw,txt

##
## 電話番号フォーマット
##

    #
    # com.liferay.portal.kernel.format.PhoneNumberFormatを実装するクラスの名称を設定します。 これは、電話番号のフォーマットおよび検証に使用されます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。 ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_PHONE_NUMBER_FORMAT_IMPL
    #
    #phone.number.format.impl=com.liferay.portal.format.IdenticalPhoneNumberFormatImpl
    #phone.number.format.impl=com.liferay.portal.format.InternationalPhoneNumberFormatImpl
    #phone.number.format.impl=com.liferay.portal.format.USAPhoneNumberFormatImpl

    #
    # この正規表現は、拡張プロビジョニング・プロコトル(EPP)で指定された国際電話番号表記に従います。 EPP形式の電話番号は、+CCC.NNNNNNNNNNxEEEEというフォーマットを使用します。Cは1〜3桁の国番号、Nは最大14桁、Eは内線番号(任意)です。 先頭のプラス記号と国番号の後ろのドットが必要です。 「x」の文字は、内線番号が提供されている場合のみ必要です。
    #
    # 詳細な情報については、http://www.itu.int/rec/T-REC-E.123 、http://www.itu.int/rec/T-REC-E.164 および http://www.itu.int/rec/T-REC-E.164, and http://tools.ietf.org/html/rfc4933 を参照してください。
    #
    # Env: LIFERAY_PHONE_NUMBER_FORMAT_INTERNATIONAL_REGEXP
    #
    phone.number.format.international.regexp=^\\+[0-9]{1,3}\.[0-9]{4,14}(?:x.+)?$

    #
    # 北米電話番号計画(NANP)は、米国、カナダ、バミューダおよび16ヶ国のカリブ諸国向けの電話番号計画です。
    #
    # 詳細な情報については、http://en.wikipedia.org/wiki/North_American_Numbering_Plan を参照してください。
    #
    # Env: LIFERAY_PHONE_NUMBER_FORMAT_USA_REGEXP
    #
    phone.number.format.usa.regexp=^(?:\\+?1[-. ]?)?(?:\\(?([0-9]{3})\\)?[-. ]?)?([0-9]{3})[-. ]?([0-9]{4})$

##
## ポーラー
##

    #
    # 通知イベントのタイムアウトをミリ秒単位で指定します。これは、ポーラーによりアプリケーション・サーバーがロックされるのを防止します。
    #
    # Env: LIFERAY_POLLER_NOTIFICATIONS_TIMEOUT
    #
    poller.notifications.timeout=1000

    #
    # ポーラーのリクエストのタイムアウトをミリ秒単位で指定します。これは、ポーラーによりアプリケーション・サーバーがロックされるのを防止します。
    #
    # Env: LIFERAY_POLLER_REQUEST_TIMEOUT
    #
    poller.request.timeout=1000

##
## POP
##

    #
    # POPサーバーからのEメール通知のポーリングを有効化するには、これをtrueに設定します。 ユーザーの資格情報は、SMTP認証に使用されるものと同一であり、各アプリケーション・サーバーのmail/MailSessionの構成で指定されています。
    #
    # Env: LIFERAY_POP_SERVER_NOTIFICATIONS_ENABLED
    #
    pop.server.notifications.enabled=false

    #
    # POPNotificationsMessageListenerが起動する間隔を設定します。 この値は、1分の増分単位で設定します。
    #
    # Env: LIFERAY_POP_SERVER_NOTIFICATIONS_INTERVAL
    #
    pop.server.notifications.interval=1

    #
    # ポータルに関連するすべてのEメールを受信するための特別なMXサブドメイン(例:events.liferay.co)を作成するには、このプロパティを設定します。 これは、そのドメイン用のデフォルトの受信ボックスを構成し、すべてのEメールをその受信ボックスで受信することを意味します。
    #
    # このアプローチは、一部の組織では許可されない場合があります。このサブドメインのアプローチを使用できない場合、この値の設定を解除すると、Liferayはポートレット設定で指定されたreplyToのアドレスを使用するようになります。
    #
    # Env: LIFERAY_POP_SERVER_SUBDOMAIN
    #
    pop.server.subdomain=events

##
## ポータル・ファブリック
##

    #
    # ポータル・ファブリック機能をオンにするには、これをtrueに設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_ENABLED
    #
    portal.fabric.enabled=false

    #
    # com.liferay.portal.fabric.agent.selectors.FabricAgentSelectorを実装する必要のあるファブリック・セレクターのクラス名称を設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_AGENT_SELECTOR_CLASS
    #
    portal.fabric.agent.selector.class=com.liferay.portal.fabric.agent.selectors.MinSystemCPULoadFabricAgentSelector

    #
    # ファブリック・サーバーのバインド先となるホスト名またはIPアドレスを設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_HOST
    #
    portal.fabric.server.host=0.0.0.0

    #
    # ファブリック・サーバーのバインド先となるポートを設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_PORT
    #
    portal.fabric.server.port=8923

    #
    # ファブリック・サーバーに使用するボス・グループ・スレッドの数を設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_BOSS_GROUP_THREAD_COUNT
    #
    portal.fabric.server.boss.group.thread.count=1

    #
    # ファブリック・サーバーに使用するワーカー・グループ・スレッドの数を設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_WORKER_GROUP_THREAD_COUNT
    #
    portal.fabric.server.worker.group.thread.count=1

    #
    # ファブリック・ワーカーの起動待機のタイムアウトをミリ秒単位で設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_WORKER_STARTUP_TIMEOUT
    #
    portal.fabric.server.worker.startup.timeout=60000

    #
    # ファブリック・サーバーのファイル・サーバーに使用するフォルダ圧縮レベルを設定します。 許容される値の範囲は、 [-1, 9]です。値は、java.util.zip.Deflaterの圧縮レベルに文字列としてマップされます。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_FILE_SERVER_FOLDER_COMPRESSION_LEVEL
    #
    portal.fabric.server.file.server.folder.compression.level=1

    #
    # ファブリック・サーバーのファイル・サーバーに使用するイベント実行プログラムのグループ・スレッドの数を設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_FILE_SERVER_GROUP_THREAD_COUNT
    #
    portal.fabric.server.file.server.group.thread.count=1

    #
    # ファブリック・サーバーの登録に使用するイベント実行プログラムのグループ・スレッドの数を設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_REGISTERATION_GROUP_THREAD_COUNT
    #
    portal.fabric.server.registeration.group.thread.count=1

    #
    # 結果をアップロードするためにファブリック・ワーカーが使用するレポジトリの親フォルダーを設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_REPOSITORY_PARENT_FOLDER
    #
    portal.fabric.server.repository.parent.folder=NettyFabricServer-repository-parent

    #
    # レポジトリのファイル取得のタイムアウト時間をミリ秒単位で設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_REPOSITORY_GET_FILE_TIMEOUT
    #
    portal.fabric.server.repository.get.file.timeout=600000

    #
    # ファブリック・サーバーのRPCに使用するイベント実行プログラムのグループ・スレッドの数を設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_RPC_GROUP_THREAD_COUNT
    #
    portal.fabric.server.rpc.group.thread.count=1

    #
    # RPCリレーのタイムアウト時間をミリ秒単位で設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_RPC_RELAY_TIMEOUT
    #
    portal.fabric.server.rpc.relay.timeout=600000

    #
    # ファブリック・エージェントの登録におけるポータル・クラスのパス・ウォームアップを有効化するには、これをtureに設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SERVER_WARMUP_AGENT_ON_REGISTER
    #
    portal.fabric.server.warmup.agent.on.register=true

    #
    # ファブリック・スレッドのプールのシャットダウンのための休止時間をミリ秒単位で設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SHUTDOWN_QUIET_PERIOD
    #
    portal.fabric.shutdown.quiet.period=0

    #
    # ファブリック・スレッドのプールのシャットダウンのためのタイムアウトをミリ秒単位で設定します。
    #
    # Env: LIFERAY_PORTAL_FABRIC_SHUTDOWN_TIMEOUT
    #
    portal.fabric.shutdown.timeout=60000

##
## ポータル・レジリエンシー
##

    #
    # ポータル・レジリエンシー機能をオンにするには、これをtrueに設定します。
    #
    # Env: LIFERAY_PORTAL_RESILIENCY_ENABLED
    #
    portal.resiliency.enabled=false

    #
    # ポータル・レジリエンシーでレンダリングされた各ポートレットにフッターを追加するには、これをtrueに設定します。 各フッターは、それをレンダリングしているSPIを示します。
    #
    # ランタイムでは、URLパラメーター「portalResiliencyPortletShowFooter」を使用してフッターの表示を切り替えることができます。パラメーターを「1」に設定するとオン、「0」に設定するとオフになります。
    #
    # Env: LIFERAY_PORTAL_RESILIENCY_PORTLET_SHOW_FOOTER
    #
    portal.resiliency.portlet.show.footer=false

    #
    # それぞれのcom.liferay.portal.resiliency.spi.agent.HttpClientSPIAgentインスタンス向けのキープ・アライブとするソケットの最大数を指定します。 HTTP通信用のソケットを再利用することは、TCP接続の確立/切断のオーバーヘッドを節約し、TCP/IPプロコトルの輻輳制御の起動が遅くなるのを回避します。
    #
    # キープ・アライブとするソケット数の制限を拡大することは、重い並行負荷を受ける各HttpClientSPIAgentのパフォーマンスを改善できることが一般的です。しかし、より多くのTCPポートとファイル記述しが占有されます。
    #
    # Env: LIFERAY_PORTAL_RESILIENCY_SPI_AGENT_CLIENT_POOL_MAX_SIZE
    #
    portal.resiliency.spi.agent.client.pool.max.size=20

##
## クオーツ
##

    memory.scheduler.org.quartz.jobStore.class=org.quartz.simpl.RAMJobStore
    memory.scheduler.org.quartz.scheduler.instanceId=AUTO
    memory.scheduler.org.quartz.scheduler.instanceName=MemoryQuartzSchedulerEngineInstance
    memory.scheduler.org.quartz.scheduler.jobFactory.class=org.quartz.simpl.SimpleJobFactory
    memory.scheduler.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
    memory.scheduler.org.quartz.threadPool.threadCount=5
    memory.scheduler.org.quartz.threadPool.threadPriority=5

    persisted.scheduler.org.quartz.dataSource.ds.connectionProvider.class=com.liferay.portal.scheduler.quartz.internal.QuartzConnectionProvider
    persisted.scheduler.org.quartz.jobStore.class=com.liferay.portal.scheduler.quartz.internal.PortalJobStore
    persisted.scheduler.org.quartz.jobStore.dataSource=ds
    persisted.scheduler.org.quartz.jobStore.misfireThreshold=60000
    persisted.scheduler.org.quartz.jobStore.tablePrefix=QUARTZ_
    persisted.scheduler.org.quartz.jobStore.useProperties=false
    persisted.scheduler.org.quartz.scheduler.instanceId=AUTO
    persisted.scheduler.org.quartz.scheduler.instanceName=PersistedQuartzSchedulerEngineInstance
    persisted.scheduler.org.quartz.scheduler.jobFactory.class=org.quartz.simpl.SimpleJobFactory
    persisted.scheduler.org.quartz.scheduler.skipUpdateCheck=true
    persisted.scheduler.org.quartz.threadPool.class=org.quartz.simpl.SimpleThreadPool
    persisted.scheduler.org.quartz.threadPool.threadCount=5
    persisted.scheduler.org.quartz.threadPool.threadPriority=5

##
## RESTプロキシ
##

    #
    # ポータルが作成するプロキシ・リクエストの宛先として許可するURLプレフィックを、コンマ区切りリストで入力します。 あらゆるURLを許可するためには空白のリストを入力してください。
    #
    # Env: LIFERAY_REST_PROXY_URL_PREFIXES_ALLOWED
    #
    rest.proxy.url.prefixes.allowed=http://search.yahooapis.com/ContentAnalysisService

##
## リトライ・アドバイス
##

    #
    # リトライのアクセプターにより結果が拒否された場合に、注釈付きのサービス・コールを再試行する最大回数を設定します。
    #
    # Env: LIFERAY_RETRY_ADVICE_MAX_RETRIES
    #
    retry.advice.max.retries=5

##
## リトライ・データソース
##

    #
    # 接続を再試行する最大回数を設定します。
    #
    # Env: LIFERAY_RETRY_DATA_SOURCE_MAX_RETRIES
    #
    retry.data.source.max.retries=100

##
## Retry JDBC connection on portal startup.
##

    #
    # Set the number of seconds to retry getting a JDBC connection on portal
    # startup.
    #
    # Env: LIFERAY_RETRY_JDBC_ON_STARTUP_DELAY
    #
    retry.jdbc.on.startup.delay=0

    #
    # Set the max number of times to retry getting a JDBC connection on portal
    # startup.
    #
    # Env: LIFERAY_RETRY_JDBC_ON_STARTUP_MAX_RETRIES
    #
    retry.jdbc.on.startup.max.retries=0

##
## Robots.txt
##

    robots.txt.with.sitemap=com/liferay/portal/dependencies/robots_txt_with_sitemap.tmpl
    robots.txt.without.sitemap=com/liferay/portal/dependencies/robots_txt_without_sitemap.tmpl

##
## RSS
##

    #
    # RSSフィードを読み込むためのHTTP接続のタイムアウトを、ミリ秒単位で設定します。
    #
    # Env: LIFERAY_RSS_CONNECTION_TIMEOUT
    #
    rss.connection.timeout=2000

    #
    # RSSフィードを有効化するには、これをtrueに設定します。
    #
    # Env: LIFERAY_RSS_FEEDS_ENABLED
    #
    rss.feeds.enabled=true

    #
    # デフォルトで使用される表示スタイルの名称を設定します。
    #
    # Env: LIFERAY_RSS_FEED_DISPLAY_STYLE_DEFAULT
    #
    rss.feed.display.style.default=full-content

    #
    # プロパティ「rss.feed.types」で定義されるフィード・タイプからデフォルトのフィード・タイプを設定します。
    #
    # Env: LIFERAY_RSS_FEED_TYPE_DEFAULT
    #
    rss.feed.type.default=atom_1.0

    #
    # フィード・タイプの値をコンマ区切りリストで入力します。サポートされているタイプは、ROMEプロジェクトatom_1.0、 rss_1.0、およびrss_2.0.のSyndFeedに定義されているタイプのサブセットである必要があります。 詳細な情報については、http://java.net/projects/rome を参照してください。
    #
    # Env: LIFERAY_RSS_FEED_TYPES
    #
    rss.feed.types=atom_1.0,rss_1.0,rss_2.0

    #
    # RSSフィードを保護する方法については、プロパティ「"main.servlet.hosts.allowed」および「main.servlet.https.required」を参照してください。
    #
    # Env: LIFERAY_RSS_FEEDS_HOSTS_ALLOWED
    # Env: LIFERAY_RSS_FEEDS_HTTPS_REQUIRED
    #
    rss.feeds.hosts.allowed=
    rss.feeds.https.required=false

    #
    # デフォルトでRSSをライブへと公開する必要がある場合、これをtrueに設定します。
    #
    # Env: LIFERAY_RSS_PUBLISH_TO_LIVE_BY_DEFAULT
    #
    rss.publish.to.live.by.default=true

##
## RTL
##

    #
    # 自動的にRTLに変換できないCSSファイルのパスを除外するための正規表現を、コンマ区切りリストで入力します。
    #
    # Env: LIFERAY_RTL_CSS_EXCLUDED_PATHS_REGEXP
    #
    rtl.css.excluded.paths.regexp=.*\\/ckeditor\\/.*

##
## サニタイザー
##

    #
    # com.liferay.portal.kernel.sanitizer.Sanitizerを実装するクラス名をコンマ区切りリストで入力します。 これらのクラスは、コンテンツをサニタイズするために使用されます。
    #
    # このプロパティは、liferay-hook.xmlにより上書きされているポータルプロパティを除き、ポータルから読み取られません。 ここには参照用途としてのみ残ります。
    #
    # Env: LIFERAY_SANITIZER_IMPL
    #
    #sanitizer.impl=

##
## スケジューラ
##

    #
    # liferay-portlet.xmlで定義されるすべてのスケジューラ・クラスを無効化するには、これをfalseに設定します。
    #
    # Env: LIFERAY_SCHEDULER_ENABLED
    #
    scheduler.enabled=true

    #
    # 説明、グループ名、ジョブ名のフィールドの最大長を設定します。
    #
    # Env: LIFERAY_SCHEDULER_DESCRIPTION_MAX_LENGTH
    # Env: LIFERAY_SCHEDULER_GROUP_NAME_MAX_LENGTH
    # Env: LIFERAY_SCHEDULER_JOB_NAME_MAX_LENGTH
    #
    scheduler.description.max.length=120
    scheduler.group.name.max.length=80
    scheduler.job.name.max.length=80

##
## スクリプティング
##

    #
    # JRubyスクリプティングエンジンのコンパイル・モードを設定します。
    #
    # Env: LIFERAY_SCRIPTING_JRUBY_COMPILE_MODE
    #
    #scripting.jruby.compile.mode=force
    scripting.jruby.compile.mode=jit
    #scripting.jruby.compile.mode=off

    #
    # 「jit」コンパイル・モードが有効化された場合にメソッドがコンパイルされるしきい値を設定します。
    #
    # Env: LIFERAY_SCRIPTING_JRUBY_COMPILE_THRESHOLD
    #
    scripting.jruby.compile.threshold=5

##
## 検索コンテナ
##

    #
    # ページ毎に表示するエントリ数のデフォルト値を設定します。
    #
    # Env: LIFERAY_SEARCH_CONTAINER_PAGE_DEFAULT_DELTA
    #
    search.container.page.default.delta=20

    #
    # ページ毎に表示するエントリ数に利用可能な値を設定します。空白値または値をコメントアウトすると、差分リサイズが無効化されます。
    #
    # プロパティ「search.container.page.default.delta」で指定されている値を常に含むようにしてください。差分が指定されていない場合にそれがデフォルトのページサイズとなるためです。 許可される差分の絶対最大サイズは、200です。
    #
    # Env: LIFERAY_SEARCH_CONTAINER_PAGE_DELTA_VALUES
    #
    search.container.page.delta.values=5,10,20,30,50,75

    #
    # 現在表示されているページの上部または下部に、利用可能なページの最大数を評価します。
    #
    # Env: LIFERAY_SEARCH_CONTAINER_PAGE_ITERATOR_MAX_PAGES
    #
    search.container.page.iterator.max.pages=25

    #
    # 結果の上部または下部の改ページ・コントロールを取り除くには、これをfalseに設定します。
    #
    # Env: LIFERAY_SEARCH_CONTAINER_SHOW_PAGINATION_BOTTOM
    # Env: LIFERAY_SEARCH_CONTAINER_SHOW_PAGINATION_TOP
    #
    search.container.show.pagination.top=true
    search.container.show.pagination.bottom=true

    #
    # トップの改ページコントロール用に、ページ毎に表示するエントリ数を設定します。 プロパティ「search.container.show.pagination.top」もtureに設定する必要があります。
    #
    # Env: LIFERAY_SEARCH_CONTAINER_SHOW_PAGINATION_TOP_DELTA
    #
    search.container.show.pagination.top.delta=10

##
## Sharepoint
##

    #
    # サポートされたSharepointのストレージ・パス用のトークンを設定します。
    #
    # Env: LIFERAY_SHAREPOINT_STORAGE_TOKENS
    #
    sharepoint.storage.tokens=document_library

    #
    # サポートされたSharepointストレージ・クラスのクラス名を設定します。
    #
    # Env: LIFERAY_SHAREPOINT_STORAGE_CLASS_OPENBRACKET_DOCUMENT_UNDERLINE_LIBRARY_CLOSEBRACKET_
    #
    sharepoint.storage.class[document_library]=com.liferay.portlet.documentlibrary.sharepoint.DLSharepointStorageImpl

##
## スプライト
##

    #
    # 自動的に生成されたスプライトに使用するファイル名を設定します。デフォルトのファイル名は、以前は「sprite.png」でしたが、現在は「_sprite.png」です。これはピリオドで始まるファイル名がSiteMinderで許可されていないからです。 このプロパティは、使用中のデプロイでアンダーラインで始まるファイル名との競合が存在しない限り、変更する必要はありません。
    #
    # Env: LIFERAY_SPRITE_FILE_NAME
    # Env: LIFERAY_SPRITE_PROPERTIES_FILE_NAME
    #
    sprite.file.name=_sprite.png
    sprite.properties.file.name=_sprite.properties

    #
    # 自動生成されたスプライトのルートディレクトリを設定します。このディレクトリを設定しない場合、生成されたスプライトはオリジナルのソース画像と同様の場所に存在することになります。
    #
    # Env: LIFERAY_SPRITE_ROOT_DIR
    #
    sprite.root.dir=

##
## ステージング
##

    #
    # 失敗したステージング公開プロセス中の一時的なLARが削除されるのを避けるには、このプロパティをfalseに設定します。
    #
    # Env: LIFERAY_STAGING_DELETE_TEMP_LAR_ON_FAILURE
    #
    staging.delete.temp.lar.on.failure=true

    #
    # 成功したステージング公開プロセス中の一時的なLARが削除されるのを避けるには、このプロパティをfalseに設定します。
    #
    # Env: LIFERAY_STAGING_DELETE_TEMP_LAR_ON_SUCCESS
    #
    staging.delete.temp.lar.on.success=true

    #
    # 稼働中のサイトでの編集を有効化するには、このプロパティをfalseに設定します。
    #
    # Env: LIFERAY_STAGING_LIVE_GROUP_LOCKING_ENABLED
    #
    staging.live.group.locking.enabled=true

    #
    # デフォルトでは、リモート・ステージング環境ではライブ・グループはマークされ、ライブ・グループでのステージングは防止されています。
    #
    # コンテンツ開発、UATと実稼働環境という環境を実現するには、含まれるUATライブ・グループ向けにステージングを有効化する必要があります。 このグループ向けにステージングを有効化すると、それはコンテンツ開発サーバーに対してのライブ・グループとなり、実稼働サーバーに対するステージング・グループとなります。
    #
    # ライブ・グループのステージングを許可するには、このプロパティをtrueに設定します。trueに設定すると、ステージングをライブ・グループへと変換することができ、ライブ・グループとステージング・グループの両方として同時に動作することができます。
    #
    # Env: LIFERAY_STAGING_LIVE_GROUP_REMOTE_STAGING_ENABLED
    #
    staging.live.group.remote.staging.enabled=false

    #
    # リモート・ステージングのためのファイル・ブロック・サイズを設定します。リモート・ステージングに使用されるLARファイルがこのサイズを超過する場合、ファイルは転送前に複数ファイルに分割され、その後リモート・サーバーで再構築されます。 デフォルトのバッファー・サイズは10メガバイトです。
    #
    # Env: LIFERAY_STAGING_REMOTE_TRANSFER_BUFFER_SIZE
    #
    staging.remote.transfer.buffer.size=10485760

##
## ストリップ
##

    #
    # ストリップ・フィルターによりコンテンツがストリップされてはならないパスを、コンマ区切りリストで入力します。
    #
    # Env: LIFERAY_STRIP_IGNORE_PATHS
    #
    strip.ignore.paths=/document_library/get_file

    #
    # スクリプト要素におけるlanguage属性の使用をサポートするには、このプロパティを設定します。 HTML4ではtype属性が優先されているため、language属性は非推奨です。
    #
    # http://www.w3.org/TR/html4/interact/scripts.html#h-18.2.1 を参照してください。
    #
    # このプロパティは、プロパティ「com.liferay.portal.servlet.filters.dynamiccss.DynamicCSSFilter」がtrueに設定されている場合を除き、使用されません。
    #
    # Env: LIFERAY_STRIP_JS_LANGUAGE_ATTRIBUTE_SUPPORT_ENABLED
    #
    strip.js.language.attribute.support.enabled=false

    #
    # ストリップ・フィルターによりコンテンツをストリップされるMIMEタイプを、コンマ区切りリストで入力します。
    #
    # Env: LIFERAY_STRIP_MIME_TYPES
    #
    strip.mime.types=text/html*,text/xml*

##
## ソーシャル・アクティビティ
##

    #
    # ソーシャル・アクティビティのカウント期間の長さを設定します。この値の単位は日数です。あるいは、月を指定するには、特別なキーワード「month」を使用します。
    #
    # Env: LIFERAY_SOCIAL_ACTIVITY_COUNTER_PERIOD_LENGTH
    #
    social.activity.counter.period.length=month

    #
    # 以下を確実にするために、ポータル・レベルのロックを必要とするソーシャル・アクティビティのカウンターを追加します。 カウンターは固有です。ポータルでロックが取得できない場合、 このプロパティで指定された値に基づいてロックの再取得が試行されます。 この値は、ミリ秒として解釈されます。
    #
    # 値を小さくすると、システムの応答が速くなります。しかし、 あまりにも衝突が多い場合、大量のトランザクションのロールバックによって、データベースが 停止します。
    #
    # Env: LIFERAY_SOCIAL_ACTIVITY_LOCK_RETRY_DELAY
    #
    social.activity.lock.retry.delay=100

    #
    # ソーシャルアクティビティ カウンターを追加するためのロックタイムアウトを設定します。値は、 ミリ秒として解釈されます。カウンターの追加時にロックが取得される理由と方法についての詳細は、プロパティ「social.activity.counter.lock.retry.delay」を 参照してください。
    #
    # ポータルレベルのロックは、データベースに保持されます。データベースが破損している場合、 スレッドによるロックの取得が失敗する可能性があります。これは、 そのロックを処理しているハンドルがない場合にも、別のスレッドがロックを処理していると 判断されるためです。
    #
    # このタイムアウトレベルを設定することによって、ポータルは最終的にロックを 開放し、新しいスレッドがロックを取得できるようになります。このプロパティは 小さな値に設定しないでください。破損したデータベースからのロックであると 誤って推測された別のスレッドによって保持された正当なロックがタイムアウトになる可能性が あります。
    #
    # Env: LIFERAY_SOCIAL_ACTIVITY_LOCK_TIMEOUT
    #
    social.activity.lock.timeout=10000

    #
    # アクセス許可によって次にフィルタリングされるソーシャルアクティビティ検索の実行時に使用される 結果の上限を設定します。
    #
    # Env: LIFERAY_SOCIAL_ACTIVITY_FILTER_SEARCH_LIMIT
    #
    social.activity.filter.search.limit=200

    #
    # 新しいアクティビティが追加されたときに設定を生成する場合には、これをtrueに します。
    #
    # Env: LIFERAY_SOCIAL_ACTIVITY_SETS_ENABLED
    #
    social.activity.sets.enabled=false

    #
    # アクティビティをどのようにグループ化するかを決定するインタプリタの セレクタを設定します。
    #
    # Env: LIFERAY_SOCIAL_ACTIVITY_SETS_SELECTOR
    #
    social.activity.sets.selector=

##
## ソーシャル・ブックマーク
##

    social.bookmark.types=twitter,facebook,plusone
    social.bookmark.display.styles=menu,simple,vertical,horizontal

    social.bookmark.icon[facebook]=../aui/facebook-sign
    social.bookmark.icon[plusone]=../aui/google-plus-sign
    social.bookmark.icon[twitter]=../aui/twitter-sign

    social.bookmark.jsp[facebook]=/html/taglib/ui/social_bookmark/facebook.jsp
    social.bookmark.jsp[plusone]=/html/taglib/ui/social_bookmark/plusone.jsp
    social.bookmark.jsp[twitter]=/html/taglib/ui/social_bookmark/twitter.jsp

    social.bookmark.post.url[facebook]=http://www.facebook.com/sharer.php?u=${liferay:social-bookmark:url}
    social.bookmark.post.url[plusone]=https://plus.google.com/share?url=${liferay:social-bookmark:url}
    social.bookmark.post.url[twitter]=https://twitter.com/intent/tweet?text=${liferay:social-bookmark:title}&tw_p=tweetbutton&url=${liferay:social-bookmark:url}

##
## テキスト抽出
##

    #
    # 特定のMIMEタイプのテキスト抽出によって独立したJavaプロセスを使用したい場合には、 これをtrueに設定します。これにより、オペレーティングシステムの余分なリソースが 活用され、ポータルの安定性が向上します。
    #
    # Env: LIFERAY_TEXT_EXTRACTION_FORK_PROCESS_ENABLED
    #
    text.extraction.fork.process.enabled=false

    #
    # 独立したJavaプロセスを使用したテキスト抽出を起動するコンマ区切りのMIMEタイプの リストを入力します。
    #
    # Env: LIFERAY_TEXT_EXTRACTION_FORK_PROCESS_MIME_TYPES
    #
    text.extraction.fork.process.mime.types=application/x-tika-ooxml

##
## スレッドダンプ
##

    #
    # プロセスに指定された秒数よりもポータルの要する時間が長い場合、スレッドダンプフィルタによって スレッドダンプが記録されます。スレッドダンプフィルタは、 プロパティ "com.liferay.portal.servlet.filters.threaddump.ThreadDumpFilter"によって 有効にしなければなりません。
    #
    # Env: LIFERAY_THREAD_DUMP_SPEED_THRESHOLD
    #
    thread.dump.speed.threshold=5

##
## ユーザー通知
##

    #
    # ユーザー通知イベントの受信をユーザーが確認するようにする場合には、これを trueに設定します。
    #
    # Env: LIFERAY_USER_NOTIFICATION_EVENT_CONFIRMATION_ENABLED
    #
    user.notification.event.confirmation.enabled=false

##
## バーチャルホスト
##

    #
    # 仮想ホストで無視される拡張子を設定します。
    #
    # Env: LIFERAY_VIRTUAL_HOSTS_IGNORE_EXTENSIONS
    #
    virtual.hosts.ignore.extensions=\
        .css,\
        .gif,\
        .image/company_logo,\
        .ico,\
        .js,\
        .jpeg,\
        .jsp,\
        .png,\
        /portal/layout,\
        /portal/login,\
        /portal/logout

    #
    # 仮想ホストで無視されるホストを設定します。
    #
    # Env: LIFERAY_VIRTUAL_HOSTS_IGNORE_HOSTS
    #
    virtual.hosts.ignore.hosts=\
        127.0.0.1,\
        localhost

    #
    # 仮想ホストで無視されるパスを設定します。
    #
    # Env: LIFERAY_VIRTUAL_HOSTS_IGNORE_PATHS
    #
    virtual.hosts.ignore.paths=\
        /c,\
        \
        /c/portal/change_password,\
        /c/portal/edit_layout,\
        /c/portal/extend_session,\
        /c/portal/extend_session_confirm,\
        /c/portal/json_service,\
        /c/portal/layout,\
        /c/portal/login,\
        /c/portal/logout,\
        /c/portal/portlet_url,\
        /c/portal/progress_poller,\
        /c/portal/render_portlet,\
        /c/portal/reverse_ajax,\
        /c/portal/session_tree_js_click,\
        /c/portal/status,\
        /c/portal/update_layout,\
        /c/portal/update_terms_of_use

    #
    # 会社の仮想ホストのデフォルトとなるサイト名を指定します。 指定されたサイトに仮想ホストがある場合、その仮想ホストが優先されます。 仮想ホストがない場合には、会社の仮想ホストが使用されます。このプロパティは、 デフォルトのURLから"/web/guest"（または他のサイト）を削除するのに便利です。 例えば、このプロパティが設定されていない場合には、デフォルトのURLは http://localhost:8080/web/guest/home になります。このプロパティが設定されている場合、デフォルトURLは http://localhost:8080/home になります。
    #
    # Env: LIFERAY_VIRTUAL_HOSTS_DEFAULT_SITE_NAME
    #
    virtual.hosts.default.site.name=Guest

    #
    # ポータルの使用が許可される有効なドメインとIPをコンマ区切りで 入力します。
    #
    # Env: LIFERAY_VIRTUAL_HOSTS_VALID_HOSTS
    #
    virtual.hosts.valid.hosts=*
    #virtual.hosts.valid.hosts=localhost,127.0.0.1,[::1],[0:0:0:0:0:0:0:1]

##
## XML
##

    #
    # XML外部エンティティの処理、XMLエンティティの展開、XMLセキュア処理の無効化、 DTD解析の有効化を行うには、このプロパティをfalseに設定します。この場合、 ポータルはXXE攻撃（XML BombやXML Quadratic Blowupなど）にさらされる可能性が あります。
    #
    # Env: LIFERAY_XML_SECURITY_ENABLED
    #
    xml.security.enabled=true

    #
    # ポータルでXML検証を無効にするには、このプロパティをfalseに設定します。外部DTDファイルまたはXSDファイルをホストするサーバーが使用できないために検証が実行できない場合に限り、XML検証は無効にするようにしてください。
    #
    # Env: LIFERAY_XML_VALIDATION_ENABLED
    #
    xml.validation.enabled=true

##
## Xuggler
##

    #
    # これをtrueに設定すると、ドキュメントライブラリポートレットでのビデオの変換とプレビューが可能になります。 詳細については、http://www.xuggle.com/xuggler/downloads for more informationを参照してください。
    #
    # Env: LIFERAY_XUGGLER_ENABLED
    #
    xuggler.enabled=false

    #
    # 実行時にXugglerをインストールするために使用するプロパティを設定します。
    #
    # Env: LIFERAY_XUGGLER_JAR_FILE_OPENBRACKET__NUMBER3__NUMBER2__MINUS_LINUX_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_FILE_OPENBRACKET__NUMBER3__NUMBER2__MINUS_MAC_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_FILE_OPENBRACKET__NUMBER3__NUMBER2__MINUS_WIN_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_FILE_OPENBRACKET__NUMBER6__NUMBER4__MINUS_LINUX_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_FILE_OPENBRACKET__NUMBER6__NUMBER4__MINUS_MAC_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_FILE_OPENBRACKET__NUMBER6__NUMBER4__MINUS_WIN_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_NAME_OPENBRACKET__NUMBER3__NUMBER2__MINUS_LINUX_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_NAME_OPENBRACKET__NUMBER3__NUMBER2__MINUS_MAC_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_NAME_OPENBRACKET__NUMBER3__NUMBER2__MINUS_WIN_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_NAME_OPENBRACKET__NUMBER6__NUMBER4__MINUS_LINUX_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_NAME_OPENBRACKET__NUMBER6__NUMBER4__MINUS_MAC_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_NAME_OPENBRACKET__NUMBER6__NUMBER4__MINUS_WIN_CLOSEBRACKET_
    # Env: LIFERAY_XUGGLER_JAR_OPTIONS
    # Env: LIFERAY_XUGGLER_JAR_URL
    #
    xuggler.jar.file[32-linux]=xuggle-xuggler-arch-i686-pc-linux-gnu.jar
    xuggler.jar.file[32-mac]=xuggle-xuggler-arch-i386-xuggle-darwin11.jar
    xuggler.jar.file[32-win]=xuggle-xuggler-arch-i686-w64-mingw32.jar
    xuggler.jar.file[64-linux]=xuggle-xuggler-arch-x86_64-pc-linux-gnu.jar
    xuggler.jar.file[64-mac]=xuggle-xuggler-arch-x86_64-xuggle-darwin11.jar
    xuggler.jar.file[64-win]=xuggle-xuggler-arch-x86_64-w64-mingw32_LIFERAY-PATCHED-1.jar
    xuggler.jar.name[32-linux]=Linux 32-bit JVM (with GNU libc v6)
    xuggler.jar.name[32-mac]=Mac OS X 10.7 32-bit JVM
    xuggler.jar.name[32-win]=Windows 32-bit JVM
    xuggler.jar.name[64-linux]=Linux 64-bit JVM (with GNU libc v6)
    xuggler.jar.name[64-mac]=Mac OS X 10.7 64-bit JVM
    xuggler.jar.name[64-win]=Windows 64-bit JVM
    xuggler.jar.options=32-linux,32-mac,32-win,64-linux,64-mac,64-win
    xuggler.jar.url=https://files.liferay.com/mirrors/xuggle.googlecode.com/svn/trunk/repo/share/java/xuggle/xuggle-xuggler/5.4/

    #
    # これらの設定により、ムービーファイルをエンコードするときにXugglerが使用するffmpegのプリセット設定をカスタマイズします。
    #
    # Env: LIFERAY_XUGGLER_FFPRESET_BF
    # Env: LIFERAY_XUGGLER_FFPRESET_CMP
    # Env: LIFERAY_XUGGLER_FFPRESET_CODER
    # Env: LIFERAY_XUGGLER_FFPRESET_FLAGS
    # Env: LIFERAY_XUGGLER_FFPRESET_FLAGS_NUMBER2_
    # Env: LIFERAY_XUGGLER_FFPRESET_I_UNDERLINE_QFACTOR
    # Env: LIFERAY_XUGGLER_FFPRESET_MBTREE
    # Env: LIFERAY_XUGGLER_FFPRESET_ME_UNDERLINE_METHOD
    # Env: LIFERAY_XUGGLER_FFPRESET_ME_UNDERLINE_RANGE
    # Env: LIFERAY_XUGGLER_FFPRESET_QCOMP
    # Env: LIFERAY_XUGGLER_FFPRESET_QDIFF
    # Env: LIFERAY_XUGGLER_FFPRESET_QMAX
    # Env: LIFERAY_XUGGLER_FFPRESET_QMIN
    # Env: LIFERAY_XUGGLER_FFPRESET_SC_UNDERLINE_THRESHOLD
    # Env: LIFERAY_XUGGLER_FFPRESET_SUBQ
    # Env: LIFERAY_XUGGLER_FFPRESET_TRELLIS
    # Env: LIFERAY_XUGGLER_FFPRESET_WPREDP
    # Env: LIFERAY_XUGGLER_FFPRESET__NUMBER8_X_NUMBER8_DCT
    #
    xuggler.ffpreset.8x8dct=0
    xuggler.ffpreset.bf=0
    xuggler.ffpreset.cmp=+chroma
    xuggler.ffpreset.coder=0
    xuggler.ffpreset.flags=+loop
    #xuggler.ffpreset.flags2=-wpred-dct8x8+mbtree
    xuggler.ffpreset.i_qfactor=0.71
    xuggler.ffpreset.mbtree=1
    xuggler.ffpreset.me_method=umh
    xuggler.ffpreset.me_range=16
    xuggler.ffpreset.qcomp=0.6
    xuggler.ffpreset.qdiff=4
    xuggler.ffpreset.qmin=10
    xuggler.ffpreset.qmax=51
    xuggler.ffpreset.sc_threshold=40
    xuggler.ffpreset.subq=8
    xuggler.ffpreset.trellis=0
    xuggler.ffpreset.wpredp=0

##
## YUI
##

    #
    # CSSの圧縮に使用するYUIコンプレッサーの設定を指定します。
    #
    # Env: LIFERAY_YUI_COMPRESSOR_CSS_LINE_BREAK
    #
    yui.compressor.css.line.break=-1

    #
    # JavaScriptの圧縮に使用するYUIコンプレッサーの設定を指定します。
    #
    # Env: LIFERAY_YUI_COMPRESSOR_JS_DISABLE_OPTIMIZATIONS
    # Env: LIFERAY_YUI_COMPRESSOR_JS_LINE_BREAK
    # Env: LIFERAY_YUI_COMPRESSOR_JS_MUNGE
    # Env: LIFERAY_YUI_COMPRESSOR_JS_PRESERVE_ALL_SEMICOLONS
    # Env: LIFERAY_YUI_COMPRESSOR_JS_VERBOSE
    #
    yui.compressor.js.disable.optimizations=false
    yui.compressor.js.line.break=-1
    yui.compressor.js.munge=true
    yui.compressor.js.preserve.all.semicolons=false
    yui.compressor.js.verbose=false

##
## JSP
##

    #
    # javax.servlet.jsp.PageContext#findAttribute(String) is mainly used by a
    # generated JSP servlet, which internally tries page scope attributes first,
    # then with many fallbacks. This is not necessary for Liferay since we
    # always populate tag variables into the page scope explicitly. The
    # fallbacks waste processing power and will never find anything.
    #
    # Set this property to true to force com.liferay.taglib.servlet.
    # PageContextWrapper#findAttribute(String) to use getAttribute(String) to
    # avoid the unnecessary fallbacks.
    #
    # Set this property to false if third party JSP code relies on the fallback
    # behavior.
    #
    # Env: LIFERAY_JSP_PAGE_CONTEXT_FORCE_GET_ATTRIBUTE
    #
    jsp.page.context.force.get.attribute=true

    #
    # Set this property to false to disable Liferay's Jasper implementation from
    # dumping JSP servlet java files by default. This default value can be
    # overridden with the OSGi configuration file com.liferay.portal.osgi.web.
    # servlet.context.helper.ServletContextHelperFactory.cfg.
    #
    # Env: LIFERAY_JSP_SERVLET_INIT_PARAM_KEEPGENERATED
    #
    jsp.servlet.init.param.keepgenerated=true

    #
    # All properties that start with "jsp.servlet.init.param." will be passed
    # into Liferay's Jasper implementation as init parameters.
    #
    # Env: LIFERAY_JSP_SERVLET_INIT_PARAM_COMPILER_UPPERCASEC_LASS_UPPERCASEN_AME
    # Env: LIFERAY_JSP_SERVLET_INIT_PARAM_COMPILER_UPPERCASES_OURCE_UPPERCASEV__UPPERCASEM_
    # Env: LIFERAY_JSP_SERVLET_INIT_PARAM_COMPILER_UPPERCASET_ARGET_UPPERCASEV__UPPERCASEM_
    #
    #jsp.servlet.init.param.compilerClassName=
    #jsp.servlet.init.param.compilerSourceVM=
    #jsp.servlet.init.param.compilerTargetVM=

    #
    # JspWriterのバッファサイズを設定します。JspFactoryWrapperは、新しいJspWriterを作成するときにこの値をバッファサイズとして読み取ります。 パフォーマンス上の理由から、この値は0に保つ必要があります。
    #
    # Env: LIFERAY_JSP_WRITER_BUFFER_SIZE
    #
    jsp.writer.buffer.size=0

##
## サーブレット フィルタ
##

    #
    # 絶対リダイレクトフィルタは、すべてのリダイレクトが絶対的になるように徹底するために使用されます。 スレッド内の後続の呼び出しで会社IDが正しく設定されるようにリクエストの会社IDも設定されるため、このフィルタは無効にしないでください。 このフィルタは、常にフィルタリストの最初のフィルタにする必要があります。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_ABSOLUTEREDIRECTS__UPPERCASEA_BSOLUTE_UPPERCASER_EDIRECTS_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.absoluteredirects.AbsoluteRedirectsFilter=true

    #
    # 集約フィルタは、CSSとJavaScriptの集約に使用されます。このフィルタは、ポータルリソースの必要な集約を実行するものであるため、無効にしないでください。 ただし、リソースの縮小を無効にするときには、プロパティ "minifier.enabled"を設定できます。
    # disable minification of resources.
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_AGGREGATE__UPPERCASEA_GGREGATE_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.aggregate.AggregateFilter=true

    #
    # 認証検証フィルタは、リクエストが認証されているかどうかを検証するために使用されます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_AUTHVERIFIER__UPPERCASEA_UTH_UPPERCASEV_ERIFIER_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.authverifier.AuthVerifierFilter=true

    #
    # 自動ログインフィルタは、プロパティ "auto.login.hooks"のクラスを処理して自動ログイン機能を提供します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_AUTOLOGIN__UPPERCASEA_UTO_UPPERCASEL_OGIN_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.autologin.AutoLoginFilter=true

    #
    # キャッシュフィルタは、処理されたWebコンテンツをキャッシュします。キャッシュの有効期限を変更するには、ehcache.xmlを参照してください。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_CACHE__UPPERCASEC_ACHE_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.cache.CacheFilter=true

    #
    # CASフィルタは、CASベースのシングルサインオンを提供する際に使用されます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_SSO_CAS__UPPERCASEC__UPPERCASEA__UPPERCASES__UPPERCASEF_ILTER
    #
    #com.liferay.portal.servlet.filters.sso.cas.CASFilter=true

    #
    # ダイナミックCSSフィルタは、Sass CSSの解析に使用されます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_DYNAMICCSS__UPPERCASED_YNAMIC_UPPERCASEC__UPPERCASES__UPPERCASES__UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.dynamiccss.DynamicCSSFilter=true

    #
    # ETagフィルターは、ETagヘッダーの生成に使用されます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_ETAG__UPPERCASEE__UPPERCASET_AG_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.etag.ETagFilter=true

    #
    # ユーザーが圧縮されたHTTPコンテンツを解凍できる場合、GZipフィルタはHTTPコンテンツを圧縮してからユーザーに送信します。 これにより、ダイヤルアップ中のユーザーのページレンダリングが高速化されます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_GZIP__UPPERCASEG__UPPERCASEZ_IP_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.gzip.GZipFilter=true

    #
    # ヘッダーフィルターは、リクエストヘッダの設定に使用されます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_HEADER__UPPERCASEH_EADER_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.header.HeaderFilter=true

    #
    # 無視フィルタは、ブラウザから直接アクセスされる特定のファイルを無視します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_IGNORE__UPPERCASEI_GNORE_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.ignore.IgnoreFilter=true

    #
    # I18nフィルタは、URLの国際化に使用されます。詳細は、プロパティ "locale.prepend.friendly.url.style"をご覧ください。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_I_NUMBER1__NUMBER8_N__UPPERCASEI__NUMBER1__NUMBER8_N_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.i18n.I18nFilter=true

    #
    # Internet Explorerはコンテンツタイプ "application / json"を認識しないため、JSONコンテンツタイプフィルタが使用されます。 LPS-33187を参照してください。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_JSONCONTENTTYPE__UPPERCASEJ__UPPERCASES__UPPERCASEO__UPPERCASEN__UPPERCASEC_ONTENT_UPPERCASET_YPE_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.jsoncontenttype.JSONContentTypeFilter=false

    #
    # 言語フィルタは、クライアント側の呼び出しを行って、実際に翻訳された値でテキストを翻訳するJavaScriptコードを置き換えます。 例えば、代表的なJavaScriptコードは "Liferay.Language.get('key')"のパターンに適合し、 'key'が翻訳するテキストになります。 このフィルタは、コード全体を翻訳されたテキストに置き換えます。 このフィルタは、ブラウザがJavaScriptファイルを受信する前にテキストを翻訳することによって、クライアント呼び出しの数を減らすので非常に有用です。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_LANGUAGE__UPPERCASEL_ANGUAGE_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.language.LanguageFilter=true

    #
    # NTLMフィルタは、NTLMベースのシングルサインオンを提供するために使用されます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_SSO_NTLM__UPPERCASEN_TLM_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.sso.ntlm.NtlmFilter=true

    #
    # NTLMポストフィルタは、NTLMおよびajaxリクエストの既知の問題を修正するために使用されます LPS-3795を参照してください。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_SSO_NTLM__UPPERCASEN_TLM_UPPERCASEP_OST_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.sso.ntlm.NtlmPostFilter=true

    #
    # OpenSSOフィルタは、OpenSSOベースのシングルサインオンを提供するために使用されます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_SSO_OPENSSO__UPPERCASEO_PEN_UPPERCASES__UPPERCASES__UPPERCASEO__UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.sso.opensso.OpenSSOFilter=true

    #
    # サーブレット認証フィルタは、外部サーブレットをポータルによって認証することを可能にします。 LEP-4682を参照してください。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_SERVLETAUTHORIZING__UPPERCASES_ERVLET_UPPERCASEA_UTHORIZING_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.servletauthorizing.ServletAuthorizingFilter=true

    #
    # セッションIDフィルタにより、HTTPセッションとHTTPSセッションとの間に単一のセッションが作成されます。 このフィルタは、ユーザーがHTTPSを使用してログインし、HTTP経由でサイトの残りの部分を表示するようにしたい場合に役立ちます。 このフィルタは、デフォルトでは無効に設定されています。 クッキー、HTTP、およびHTTPSの仕組みを完全に理解している場合を除き、有効にしないでください。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_SESSIONID__UPPERCASES_ESSION_UPPERCASEI_D_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.sessionid.SessionIdFilter=false

    #
    # セッションの最大許可フィルタは、最新のセッションが許可された最大セッション数を超えた場合に最新のセッションを無効化します。 "session.max.allowed"プロパティが0より大きい場合を除き、このフィルタは使用されません。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_SESSIONMAXALLOWED__UPPERCASES_ESSION_UPPERCASEM_AX_UPPERCASEA_LLOWED_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.sessionmaxallowed.SessionMaxAllowedFilter=false

    #
    # Sharepointフィルタを使用すると、Sharepointプロトコルを使用してMicrosoft Officeからドキュメントライブラリのドキュメントに直接アクセスできます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SHAREPOINT__UPPERCASES_HAREPOINT_UPPERCASEF_ILTER
    #
    com.liferay.portal.sharepoint.SharepointFilter=true

    #
    # ストリップフィルタは、出力されたコンテンツから空白行を削除します。これにより、ダイヤルアップ中のユーザーのページレンダリングが高速化されます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_STRIP__UPPERCASES_TRIP_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.strip.StripFilter=true

    #
    # テーマプレビューフィルタは、DreamweaverのThemingプラグインで使用できる現在適用されているテーマのプレビューを生成します。 このフィルタは、デフォルトでは無効に設定されています。 URLの"themePreview"パラメータを1に設定すると、任意のページのテーマプレビューにアクセスします。 例えばURLは、 http://localhost:8080/web/guest?themePreview=1 のようになります。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_THEMEPREVIEW__UPPERCASET_HEME_UPPERCASEP_REVIEW_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.themepreview.ThemePreviewFilter=false

    #
    # スレッドダンプフィルタは、ポータルの速度が遅すぎる場合にスレッドダンプを自動的に記録します。 プロパティ "thread.dump.speed.threshold"によって動作を設定できます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_THREADDUMP__UPPERCASET_HREAD_UPPERCASED_UMP_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.threaddump.ThreadDumpFilter=false

    #
    # スレッドローカルフィルタは、CentralizedThreadLocalによって管理される存続時間の短いスレッドローカルをクリーンアップしてメモリリークを防ぎます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_THREADLOCAL__UPPERCASET_HREAD_UPPERCASEL_OCAL_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.threadlocal.ThreadLocalFilter=true

    #
    # 非同期のプリントライタープールフィルタを使用すると、コストのかかるアクションであるプリントライタによるjava.io.PrintWriterインスタンスの作成を最小限に抑えることができます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_UNSYNCPRINTWRITERPOOL__UPPERCASEU_NSYNC_UPPERCASEP_RINT_UPPERCASEW_RITER_UPPERCASEP_OOL_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.unsyncprintwriterpool.UnsyncPrintWriterPoolFilter=true

    #
    # アップロードサーブレット リクエストフィルタは、複数パートのリクエストをUploadServletRequestにまとめるために必要です。 このフィルタは、多くのLiferayポートレットに必要であり、CSRF攻撃から保護するのに役立つため、無効にしないでください。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_UPLOADSERVLETREQUEST__UPPERCASEU_PLOAD_UPPERCASES_ERVLET_UPPERCASER_EQUEST_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.uploadservletrequest.UploadServletRequestFilter=true

    #
    # Apacheの一般的で非常に有用なmod_rewriteに基づき、UrlRewriteFilterは処理前にURLを書き換えることができます。 このフィルタは、urlrewrite.xmlというxmlファイルを使用します。このファイルはWEB-INFにあります。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_URLREWRITE__UPPERCASEU_RL_UPPERCASER_EWRITE_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.urlrewrite.UrlRewriteFilter=true

    #
    # 有効ホスト名フィルタは、リクエストのホストヘッダからホスト名をチェックします。 このフィルタは、無効なサーバー名のリクエストを拒否して、XSSや他のホストヘッダ操作攻撃を防ぎます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_VALIDHOSTNAME__UPPERCASEV_ALID_UPPERCASEH_OST_UPPERCASEN_AME_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.validhostname.ValidHostNameFilter=true

    #
    # 仮想ホストフィルタは、ホストを公開ページと非公開ページにマップします。例えば、パブリック仮想ホストがwww.helloworld.comでフレンドリURLが/ helloworldの場合、http://www.helloworld.comはhttp://localhost:8080/web/helloworldにマップされます。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_SERVLET_FILTERS_VIRTUALHOST__UPPERCASEV_IRTUAL_UPPERCASEH_OST_UPPERCASEF_ILTER
    #
    com.liferay.portal.servlet.filters.virtualhost.VirtualHostFilter=true

##
## アップロード サーブレット リクエスト
##

    #
    # アップロードサーブレットリクエストの最大コンテンツ長を設定します。デフォルトの値は1024 * 1024 * 100です。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UPLOAD__UPPERCASEU_PLOAD_UPPERCASES_ERVLET_UPPERCASER_EQUEST_UPPERCASEI_MPL_MAX_SIZE
    #
    com.liferay.portal.upload.UploadServletRequestImpl.max.size=104857600

    #
    # アップロードされたファイルの一時ディレクトリを設定します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UPLOAD__UPPERCASEU_PLOAD_UPPERCASES_ERVLET_UPPERCASER_EQUEST_UPPERCASEI_MPL_TEMP_DIR
    #
    #com.liferay.portal.upload.UploadServletRequestImpl.temp.dir=C:/Temp

    #
    # アップロードされたデータの無関係なシリアル化を防ぐために、しきい値サイズを設定します。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UPLOAD__UPPERCASEL_IFERAY_UPPERCASEF_ILE_UPPERCASEI_TEM_THRESHOLD_SIZE
    #
    com.liferay.portal.upload.LiferayFileItem.threshold.size=262144

    #
    # 大きすぎるアップロードデータをキャッシュすることによって発生するメモリ不足例外を防ぐために、しきい値サイズを設定します。 デフォルトの値は1024 * 1024 * 10です。
    #
    # Env: LIFERAY_COM_LIFERAY_PORTAL_UPLOAD__UPPERCASEL_IFERAY_UPPERCASEI_NPUT_UPPERCASES_TREAM_THRESHOLD_SIZE
    #
    com.liferay.portal.upload.LiferayInputStream.threshold.size=10485760

##
## ウェブサーバ
##

    #
    # Apacheなどの別のWebサーバーの背後に配置されているJ2EEサーバーでポータルを実行するときは、HTTPポートとHTTPポートを設定します。 ポータルがApacheなど別のWebサーバーの背後で実行されていない場合は、値を-1に設定します。
    #
    # Env: LIFERAY_WEB_SERVER_HTTPS_PORT
    # Env: LIFERAY_WEB_SERVER_HTTP_PORT
    #
    web.server.http.port=-1
    web.server.https.port=-1

    #
    # ポートレットがURLを生成するときに使用されるホスト名を設定します。 これを空白のままにすると、ホストはサーブレットコンテナから派生したものになります。
    #
    # Env: LIFERAY_WEB_SERVER_HOST
    #
    web.server.host=

    #
    # 優先プロトコルを設定します。
    #
    # Env: LIFERAY_WEB_SERVER_PROTOCOL
    #
    #web.server.protocol=https

    #
    # これをtrueに設定すると、各ページの下部にサーバー名が表示されます。 これは、クラスタリング設定をテストして、どのノードにアクセスしているかを知る場合に便利です。
    #
    # Env: LIFERAY_WEB_SERVER_DISPLAY_NODE
    #
    web.server.display.node=false

    #
    # これをtrueに設定すると、プロパティ "web.server.forward.host.header"を使用してホストが取得されます。 プロパティ "web.server.host"をデフォルト値に設定する必要があります。
    #
    # Env: LIFERAY_WEB_SERVER_FORWARDED_HOST_ENABLED
    #
    web.server.forwarded.host.enabled=false

    #
    # ホストを取得するために使用するHTTPヘッダを設定します。プロパティ "web.server.forwarded.host.enabled" は、trueに設定する必要があります。
    #
    # Env: LIFERAY_WEB_SERVER_FORWARDED_HOST_HEADER
    #
    web.server.forwarded.host.header=X-Forwarded-Host

    #
    # これをtrueに設定すると、プロパティ "web.server.forward.port.header" を使用してポートが取得されます。ポートを取得。
    #
    # Env: LIFERAY_WEB_SERVER_FORWARDED_PORT_ENABLED
    #
    web.server.forwarded.port.enabled=false

    #
    # ポートを取得するために使用するHTTPヘッダを設定します。プロパティ "web.server.forwarded.port.enabled"は、trueに設定する必要があります。
    #
    # Env: LIFERAY_WEB_SERVER_FORWARDED_PORT_HEADER
    #
    web.server.forwarded.port.header=X-Forwarded-Port

    #
    # これをtrueに設定すると、プロパティ "web.server.forward.protocol.header" を使用してプロトコルが取得されます。 プロパティ "web.server.protocol"はオーバーライドされていてはなりません。
    #
    # Env: LIFERAY_WEB_SERVER_FORWARDED_PROTOCOL_ENABLED
    #
    web.server.forwarded.protocol.enabled=false

    #
    # プロトコルを取得するために使用するHTTPヘッダを設定します。プロパティ "web.server.forwarded.protocol.enabled" は、trueに設定する必要があります。
    #
    # Env: LIFERAY_WEB_SERVER_FORWARDED_PROTOCOL_HEADER
    #
    web.server.forwarded.protocol.header=X-Forwarded-Proto

    #
    # これをtrueに設定すると、レガシープロキシサーバー（Apache 1.x）のサポートが有効になります。
    #
    # Env: LIFERAY_WEB_SERVER_PROXY_LEGACY_MODE
    #
    web.server.proxy.legacy.mode=false

##
## WebDAV
##

    #
    # 処理を無視するWebDAVサーブレット用のファイルのリストを設定します。
    #
    # Env: LIFERAY_WEBDAV_IGNORE
    #
    webdav.ignore=.DS_Store,.metadata_index_homes_only,.metadata_never_index,.Spotlight-V100,.TemporaryItems,.Trashes,Backups.backupdb

    #
    # 生成されたナンスの時間切れまでの分数を指定します。クライアントが時間切れのナンスでサーバーに接続すると、サーバーはstale=trueのHTTPエラー401を返します。
    #
    # Env: LIFERAY_WEBDAV_NONCE_EXPIRATION
    #
    webdav.nonce.expiration=30

##
## メインサーブレット
##

    #
    # サーブレットは、com.liferay.portal.servlet.filters.secure.SecureFilterで保護できます。
    #
    # このサーブレットにアクセスできるIPのリストをコンマ区切りで入力します。空のリストを入力すると、IPがこのサーブレットにアクセスできるようになります。 SERVER_IPはホストサーバーのIPに置き換えられます。
    #
    # Env: LIFERAY_MAIN_SERVLET_HOSTS_ALLOWED
    #
    main.servlet.hosts.allowed=

    #
    # このサーブレットがhttps経由でしかアクセスできない場合は、これをtrueに設定します。
    #
    # Env: LIFERAY_MAIN_SERVLET_HTTPS_REQUIRED
    #
    main.servlet.https.required=false

##
## アトム サーブレット
##

    #
    # このサーブレットの保護方法については、プロパティ "main.servlet.hosts.allowed" とプロパティ "main.servlet.https.required" を参照してください。
    #
    # Env: LIFERAY_ATOM_SERVLET_HOSTS_ALLOWED
    # Env: LIFERAY_ATOM_SERVLET_HTTPS_REQUIRED
    #
    atom.servlet.hosts.allowed=127.0.0.1,SERVER_IP
    atom.servlet.https.required=false

##
## アクシス サーブレット
##

    #
    # このサーブレットの保護方法については、プロパティ "main.servlet.hosts.allowed" とプロパティ "main.servlet.https.required" を参照してください。
    #
    # Env: LIFERAY_AXIS_SERVLET_HOSTS_ALLOWED
    # Env: LIFERAY_AXIS_SERVLET_HTTPS_REQUIRED
    #
    axis.servlet.hosts.allowed=127.0.0.1,SERVER_IP
    axis.servlet.https.required=false

##
## ダイナミック リソース サーブレット
##

    #
    # ダイナミック リソース サーブレット スクラッチからのサービスが許可されているパスを設定します。
    #
    # Env: LIFERAY_DYNAMIC_RESOURCE_SERVLET_ALLOWED_PATHS
    #
    dynamic.resource.servlet.allowed.paths=\
        /sprite

##
## Google ガジェット サーブレット
##

    #
    # Googleガジェット サーブレットのサーブレットマッピングを設定します。
    #
    # Env: LIFERAY_GOOGLE_GADGET_SERVLET_MAPPING
    #
    google.gadget.servlet.mapping=/google_gadget

##
## JSON サーブレット
##

    #
    # このサーブレットの保護方法については、プロパティ "main.servlet.hosts.allowed" とプロパティ "main.servlet.https.required" を参照してください。
    #
    # Env: LIFERAY_JSON_SERVLET_HOSTS_ALLOWED
    # Env: LIFERAY_JSON_SERVLET_HTTPS_REQUIRED
    #
    json.servlet.hosts.allowed=
    json.servlet.https.required=false

##
## JSON Webサービス サーブレット
##

    #
    # このサーブレットの保護方法については、プロパティ "main.servlet.hosts.allowed" とプロパティ "main.servlet.https.required" を参照してください。
    #
    # Env: LIFERAY_JSONWS_SERVLET_HOSTS_ALLOWED
    # Env: LIFERAY_JSONWS_SERVLET_HTTPS_REQUIRED
    #
    jsonws.servlet.hosts.allowed=
    jsonws.servlet.https.required=false

##
## Netvibes サーブレット
##

    #
    # Netvibes サーブレットのサーブレットマッピングを設定します。
    #
    # Env: LIFERAY_NETVIBES_SERVLET_MAPPING
    #
    netvibes.servlet.mapping=/netvibes

##
## Spring リモーティング・サーブレット
##

    #
    # このサーブレットの保護方法については、プロパティ "main.servlet.hosts.allowed" とプロパティ "main.servlet.https.required" を参照してください。
    #
    # Env: LIFERAY_SPRING_REMOTING_SERVLET_HOSTS_ALLOWED
    # Env: LIFERAY_SPRING_REMOTING_SERVLET_HTTPS_REQUIRED
    #
    spring.remoting.servlet.hosts.allowed=127.0.0.1,SERVER_IP
    spring.remoting.servlet.https.required=false

##
## トンネル サーブレット
##

    #
    # このサーブレットの保護方法については、プロパティ "main.servlet.hosts.allowed" とプロパティ "main.servlet.https.required" を参照してください。
    #
    # Env: LIFERAY_TUNNEL_SERVLET_HOSTS_ALLOWED
    # Env: LIFERAY_TUNNEL_SERVLET_HTTPS_REQUIRED
    #
    tunnel.servlet.hosts.allowed=127.0.0.1,SERVER_IP
    tunnel.servlet.https.required=false

##
## ウェブサーバー サーブレット
##

    #
    # Accept-Rangesヘッダを送信するには、これをMIMEタイプのコンマ区切りのリストに設定します。
    #
    # Env: LIFERAY_WEB_SERVER_SERVLET_ACCEPT_RANGES_MIME_TYPES
    #
    web.server.servlet.accept.ranges.mime.types=audio/basic,audio/mid,audio/midi,audio/mod,audio/mp3,audio/mp4,audio/mpeg,audio/mpeg3,audio/ogg,audio/vorbis,audio/wav,audio/x-m4a,audio/x-mid,audio/x-midi,audio/x-mod,audio/x-mpeg,audio/x-pn-realaudio,audio/x-realaudio,audio/x-wav,video/avi,video/mp4,video/mpeg,video/ogg,video/quicktime,video/x-flv,video/x-m4v,video/x-ms-wmv,video/x-msvideo

    #
    # これをtrueに設定すると、リクエストが従来のイメージギャラリーからのイメージに対するものであるかどうかがチェックされます。 これは、6.1より古いバージョンから移行する場合にのみ必要です。
    #
    # Env: LIFERAY_WEB_SERVER_SERVLET_CHECK_IMAGE_GALLERY
    #
    web.server.servlet.check.image.gallery=false

    #
    # ディレクトリのインデックス付けを有効にするには、このプロパティをtrueに設定します。
    #
    # Env: LIFERAY_WEB_SERVER_SERVLET_DIRECTORY_INDEXING_ENABLED
    #
    web.server.servlet.directory.indexing.enabled=false

    #
    # ブラウザが要求できる最大範囲フィールドを設定します。
    #
    # Env: LIFERAY_WEB_SERVER_SERVLET_MAX_RANGE_FIELDS
    #
    web.server.servlet.max.range.fields=10

    #
    # Webサーバーサーブレットが出力するサーバー情報行に使用する冗長レベルを設定します。 有効な値として、すべてのバージョン情報（例:Liferay Portal Community Edition 6.1.0 CEなど）を与える「full」、名前部分（例:Liferay Portal Community Edition）だけを与える「partial」があります。
    #
    # Env: LIFERAY_WEB_SERVER_SERVLET_VERSION_VERBOSITY
    #
    web.server.servlet.version.verbosity=full

##
## WebDAV サーブレット
##

    #
    # このサーブレットの保護方法については、プロパティ "main.servlet.hosts.allowed" とプロパティ "main.servlet.https.required" を参照してください。
    #
    # Env: LIFERAY_WEBDAV_SERVLET_HOSTS_ALLOWED
    # Env: LIFERAY_WEBDAV_SERVLET_HTTPS_REQUIRED
    #
    webdav.servlet.hosts.allowed=
    webdav.servlet.https.required=false

##
## ウィジェット サーブレット
##

    #
    # Widget サーブレットのサーブレットマッピングを設定します。
    #
    # Env: LIFERAY_WIDGET_SERVLET_MAPPING
    #
    widget.servlet.mapping=/widget

##
## アドミン ポートレット
##

    #
    # 新しく作成されたユーザーに関連付けられた\nのキャラクターで区切られたデフォルトグループ名のリストを入力します。
    #
    # Env: LIFERAY_ADMIN_DEFAULT_GROUP_NAMES
    #
    admin.default.group.names=

    #
    # 新しく作成されたユーザーに関連付けられた\nのキャラクターで区切られたデフォルト組織名のリストを入力します。
    #
    # Env: LIFERAY_ADMIN_DEFAULT_ORGANIZATION_GROUP_NAMES
    #
    admin.default.organization.group.names=

    #
    # 新しく作成されたユーザーに関連付けられた\nのキャラクターで区切られたデフォルトのレギュラーロール名のリストを入力します。
    #
    # Env: LIFERAY_ADMIN_DEFAULT_ROLE_NAMES
    #
    admin.default.role.names=User

    #
    # 新しく作成されたユーザーに関連付けられた\nのキャラクターで区切られたデフォルトユーザーグループ名のリストを入力します。
    #
    # Env: LIFERAY_ADMIN_DEFAULT_USER_GROUP_NAMES
    #
    admin.default.user.group.names=

    #
    # これをtrueに設定すると、ユーザーはログイン時に必ず、グループ、ロール、およびユーザーグループのデフォルトの関連付けに同期されます。 ユーザーが作成されたときにデフォルトの関連付けをユーザーに適用する必要がある場合は、これをfalseに設定します。
    #
    # Env: LIFERAY_ADMIN_SYNC_DEFAULT_ASSOCIATIONS
    #
    admin.sync.default.associations=false

    #
    # \nのキャラクターで区切られたホスト名のリストを入力します。
    #
    # Env: LIFERAY_ADMIN_MAIL_HOST_NAMES
    #
    admin.mail.host.names=

    #
    # \nのキャラクターで区切られた予約スクリーン名のリストを入力します。
    #
    # Env: LIFERAY_ADMIN_RESERVED_SCREEN_NAMES
    #
    admin.reserved.screen.names=

    #
    # \nのキャラクターで区切られたEメールアドレスのリストを入力します。
    #
    # Env: LIFERAY_ADMIN_RESERVED_EMAIL_ADDRESSES
    #
    admin.reserved.email.addresses=

    #
    # Eメール通知設定を構成します。
    #
    # Env: LIFERAY_ADMIN_EMAIL_FROM_ADDRESS
    # Env: LIFERAY_ADMIN_EMAIL_FROM_NAME
    #
    admin.email.from.name=Joe Bloggs
    admin.email.from.address=test@liferay.com

    admin.email.user.added.enabled=true
    admin.email.user.added.subject=com/liferay/portlet/admin/dependencies/email_user_added_subject.tmpl
    admin.email.user.added.body=com/liferay/portlet/admin/dependencies/email_user_added_body.tmpl
    admin.email.user.added.no.password.body=com/liferay/portlet/admin/dependencies/email_user_added_no_password_body.tmpl

    admin.email.password.reset.subject=com/liferay/portlet/admin/dependencies/email_password_reset_subject.tmpl
    admin.email.password.reset.body=com/liferay/portlet/admin/dependencies/email_password_reset_body.tmpl

    admin.email.password.sent.subject=com/liferay/portlet/admin/dependencies/email_password_sent_subject.tmpl
    admin.email.password.sent.body=com/liferay/portlet/admin/dependencies/email_password_sent_body.tmpl

    admin.email.verification.subject=com/liferay/portlet/admin/dependencies/email_verification_subject.tmpl
    admin.email.verification.body=com/liferay/portlet/admin/dependencies/email_verification_body.tmpl

    #
    # \nのキャラクターで区切られたWeb分析タイプのリストを入力します。
    #
    # Env: LIFERAY_ADMIN_ANALYTICS_TYPES
    #
    admin.analytics.types=google\npiwik

    #
    # コントロールパネルで表示されるときに難読化され、********に置き換えられるプロパティのリストをコンマ区切りで追加します。
    #
    # Env: LIFERAY_ADMIN_OBFUSCATED_PROPERTIES
    #
    admin.obfuscated.properties=auth.mac.shared.key,auth.token.shared.secret,captcha.engine.recaptcha.key.private,default.admin.password,dl.file.entry.preview.generation.decrypt.passwords.pdfbox,dl.repository.guest.password,jdbc.default.password,mail.session.mail.pop3.password,mail.session.mail.smtp.password,tunneling.servlet.shared.secret

##
## アナウンスメント ポートレット
##

    #
    # Eメール通知設定を構成します。
    #
    # Env: LIFERAY_ANNOUNCEMENTS_EMAIL_FROM_ADDRESS
    # Env: LIFERAY_ANNOUNCEMENTS_EMAIL_FROM_NAME
    #
    announcements.email.from.name=
    announcements.email.from.address=

    announcements.email.to.name=
    announcements.email.to.address=noreply@liferay.com

    announcements.email.subject=com/liferay/portlet/announcements/dependencies/email_subject.tmpl
    announcements.email.body=com/liferay/portlet/announcements/dependencies/email_body.tmpl

    #
    # アナウンスメントタイプのリストを設定します。各アナウンスメントタイプの表示テキストは、content/Language.propertiesに設定されています。
    #
    # Env: LIFERAY_ANNOUNCEMENTS_ENTRY_TYPES
    #
    announcements.entry.types=general,news,test

    #
    # CheckEntryMessageListenerを実行して新しいアナウンスをチェックする間隔を分単位で設定します。 ユーザーに対して、新しいアナウンスをEメールで通知します。
    #
    # Env: LIFERAY_ANNOUNCEMENTS_ENTRY_CHECK_INTERVAL
    #
    announcements.entry.check.interval=15

    #
    # ページ毎に表示するアナウンス数に利用可能な値を設定します。
    #
    # Env: LIFERAY_ANNOUNCEMENTS_ENTRY_PAGE_DELTA_VALUES
    #
    announcements.entry.page.delta.values=5,10,20,30,50,75

##
## アセット
##

    #
    # 新しいカテゴリのデフォルトプロパティのリストをコンマ区切りで入力します。 リストの各項目は、"key:value"の形式にする必要があります。
    #
    # Env: LIFERAY_ASSET_CATEGORIES_PROPERTIES_DEFAULT
    #
    asset.categories.properties.default=

    #
    # カテゴリーを使用した検索およびブラウジングで、選択されたカテゴリーに明示的に割り当てられたアセットのみを表示するように指定するには、以下をfalseに設定します。 trueに設定すると、子カテゴリも検索に含まれます。
    #
    # Env: LIFERAY_ASSET_CATEGORIES_SEARCH_HIERARCHICAL
    #
    asset.categories.search.hierarchical=true

    #
    # アセットカテゴリ セレクタのエントリの最大数を設定します。 -1の値を指定すると、すべてのエントリがロードされ、結果にページ番号は付けられません。
    #
    # Env: LIFERAY_ASSET_CATEGORIES_SELECTOR_MAX_ENTRIES
    #
    asset.categories.selector.max.entries=50

    #
    # 許可によってフィルタリングされるアセット検索を実行するときに使用される結果の上限を設定します。
    #
    # Env: LIFERAY_ASSET_FILTER_SEARCH_LIMIT
    #
    asset.filter.search.limit=200

    #
    # デフォルトで作成されるボキャブラリの名称を設定します。
    #
    # Env: LIFERAY_ASSET_VOCABULARY_DEFAULT
    #
    asset.vocabulary.default=Topic

    #
    # 接頭辞 "asset.renderer.enabled."およびアセットレンダラーファクトリークラス名の接尾部を持つプロパティを設定してアセットレンダラーファクトリーの有効化または無効化を行います。 デフォルト設定は、trueです。詳細については、LPS-6085を参照してください。
    #
    # Env: LIFERAY_ASSET_RENDERER_ENABLED_COM_LIFERAY_PORTLET_DOCUMENTLIBRARY_ASSET__UPPERCASED__UPPERCASEL__UPPERCASEF_ILE_UPPERCASEE_NTRY_UPPERCASEA_SSET_UPPERCASER_ENDERER_UPPERCASEF_ACTORY
    #
    #asset.renderer.enabled.com.liferay.portlet.documentlibrary.asset.DLFileEntryAssetRendererFactory=false

##
## ブログのポートレット
##

    #
    # ブログエントリへのコメントを有効化するにはこれを真に設定してください。
    #
    # Env: LIFERAY_BLOGS_ENTRY_COMMENTS_ENABLED
    #
    blogs.entry.comments.enabled=true

##
## ブログのサービス
##

    #
    # Eメール通知設定を構成します。
    #
    # Env: LIFERAY_BLOGS_EMAIL_FROM_ADDRESS
    # Env: LIFERAY_BLOGS_EMAIL_FROM_NAME
    #
    blogs.email.from.name=
    blogs.email.from.address=

    blogs.email.entry.added.enabled=true
    blogs.email.entry.added.subject=${resource:com/liferay/portlet/blogs/dependencies/email_entry_added_subject.tmpl}
    blogs.email.entry.added.body=${resource:com/liferay/portlet/blogs/dependencies/email_entry_added_body.tmpl}

    blogs.email.entry.updated.enabled=true
    blogs.email.entry.updated.subject=${resource:com/liferay/portlet/blogs/dependencies/email_entry_updated_subject.tmpl}
    blogs.email.entry.updated.body=${resource:com/liferay/portlet/blogs/dependencies/email_entry_updated_body.tmpl}

    blogs.page.abstract.length=400

    blogs.rss.abstract.length=200

    #
    # リンクバックの抜粋長を設定します。
    #
    # Env: LIFERAY_BLOGS_LINKBACK_EXCERPT_LENGTH
    #
    blogs.linkback.excerpt.length=200

    #
    # リンクバックの抜粋長を設定します。
    #
    # Env: LIFERAY_BLOGS_PINGBACK_ENABLED
    #
    blogs.pingback.enabled=true

    #
    # トラックバックを有効にするには、これをtrueに設定します。
    #
    # Env: LIFERAY_BLOGS_TRACKBACK_ENABLED
    #
    blogs.trackback.enabled=false

    #
    # これをtrueに設定すると、新しいブログエントリや更新されたブログエントリに対してGoogleにpingを送信できるようになります。
    #
    # Env: LIFERAY_BLOGS_PING_GOOGLE_ENABLED
    #
    blogs.ping.google.enabled=true

    #
    # ページ毎に表示するブログ数に利用可能な値を設定します。
    #
    # Env: LIFERAY_BLOGS_ENTRY_PAGE_DELTA_VALUES
    #
    blogs.entry.page.delta.values=5,10,20,30,50,75

    #
    # これをtrueに設定すると、ブログエントリの前後のナビゲーションが有効になります。
    #
    # Env: LIFERAY_BLOGS_ENTRY_PREVIOUS_AND_NEXT_NAVIGATION_ENABLED
    #
    blogs.entry.previous.and.next.navigation.enabled=true

    #
    # ブログエントリで保存された画像の最大ファイルサイズを設定します。画像は、Alloy Editor、Cover Image、またはImage Selectorを使用してアップロードできます。 最大ファイルサイズを0にすると、ファイルサイズは無制限になります。しかしながら、許可された最大ファイルサイズは、プロパティ "com.liferay.portal.upload.UploadServletRequestImpl.max.size" に設定されています。 デフォルト値は、5 mbです。
    #
    # Env: LIFERAY_BLOGS_IMAGE_MAX_SIZE
    #
    blogs.image.max.size=5242880

    #
    # ブログ画像の有効なファイル拡張子を設定します。「*」のファイル拡張子を使用すると、すべてのファイル拡張子が許可されます。
    #
    # Env: LIFERAY_BLOGS_IMAGE_EXTENSIONS
    #
    blogs.image.extensions=.gif,.jpeg,.jpg,.png

    #
    # デフォルトでブログをライブへと公開する必要がある場合、これをtrueに設定します。
    #
    # Env: LIFERAY_BLOGS_PUBLISH_TO_LIVE_BY_DEFAULT
    #
    blogs.publish.to.live.by.default=false

##
## カレンダー
##

    #
    # デフォルトでカレンダーをライブへと公開する必要がある場合、これをtrueに設定します。
    #
    # Env: LIFERAY_CALENDAR_PUBLISH_TO_LIVE_BY_DEFAULT
    #
    calendar.publish.to.live.by.default=true

##
## ディスカッションタグ ライブラリ
##

    #
    # ディスカッションのEメール通知設定を構成します。
    #
    # Env: LIFERAY_DISCUSSION_EMAIL_BODY
    # Env: LIFERAY_DISCUSSION_EMAIL_COMMENTS_ADDED_ENABLED
    # Env: LIFERAY_DISCUSSION_EMAIL_SUBJECT
    #
    discussion.email.comments.added.enabled=true
    discussion.email.subject=com/liferay/portlet/messageboards/dependencies/discussion_email_subject.tmpl
    discussion.email.body=com/liferay/portlet/messageboards/dependencies/discussion_email_body.tmpl

    #
    # ディスカッションコメントのサブスクリプションチェックボックスをデフォルトでオンにする場合は、これをtrueに設定します。
    #
    # Env: LIFERAY_DISCUSSION_SUBSCRIBE_BY_DEFAULT
    #
    discussion.subscribe.by.default=true

    #
    # ディスカッションコメントに許可されている要素と属性のリストをセミコロン区切りで入力します。 これはエディタが特定のマークアップを許可し、バックエンドがコンテンツをサニタイズするために使用されます。
    #
    # 属性はコンマで区切られたリストとして指定することもできます。属性が指定されていない場合、ディスカッションコメントが追加されるとすべての属性がクリーンアップされます。
    #
    # サポートされる構文は、http：//docs.ckeditor.com/#!/guide/dev_allowed_content_rules-section-string-formatに記載されている構文のサブセットです
    #
    # 次の文法は、サポートされているサブセットを記述したものです（括弧はグループ化に使用され、 「*」は0または複数回の反復を意味し、 '|'は代替語の説明に使用されます）。
    #
    #     allowed-content : element (; element)*
    #         element : element-name | element-name[attribute (, atribute)*]
    #
    # Env: LIFERAY_DISCUSSION_COMMENTS_ALLOWED_CONTENT
    #
    discussion.comments.allowed.content=a[href];em;p;span[class];strong;u
    #discussion.comments.allowed.content=a[href,title];em;p;strong;u

    #
    # ユーザーがサイトメンバー ロールで定義された権限を持っていなくても、独自のディスカッションコメントを編集できる場合は、このプロパティをtrueに設定します。
    #
    # Env: LIFERAY_DISCUSSION_COMMENTS_ALWAYS_EDITABLE_BY_OWNER
    #
    discussion.comments.always.editable.by.owner=false

    #
    # 改ページ前に表示するディスカッションコメントの最小数の値を設定します。 トップレベルのコメントに基づいてページを作成する際、トップレベルのディスカッションコメントが見つかるまで、指定された値よりも多くのディスカッションコメントを表示できます。
    #
    # Env: LIFERAY_DISCUSSION_COMMENTS_DELTA_VALUE
    #
    discussion.comments.delta.value=50

    #
    # ディスカッションコメントの形式を設定します。
    #
    # Env: LIFERAY_DISCUSSION_COMMENTS_FORMAT
    #
    #discussion.comments.format=bbcode
    discussion.comments.format=html

    #
    # ディスカッションコメントの最大数を設定します。最大ディスカッションコメント数を0にすると、ディスカッションコメントは無制限になります。
    #
    # Env: LIFERAY_DISCUSSION_MAX_COMMENTS
    #
    discussion.max.comments=1000

##
## ドキュメントライブラリ ポートレット
##

    dl.actions.visible=false

    dl.comment.ratings.enabled=true

    #
    # サポートされる表示ビューのリストを設定します。
    #
    # Env: LIFERAY_DL_DISPLAY_VIEWS
    #
    dl.display.views=icon,descriptive,list

    dl.entry.columns=name,size,status,modified-date,create-date,action

    dl.file.entry.columns=name,size,locked

    dl.folder.columns=name,num-of-folders,num-of-documents

    dl.folders.search.visible=true

    dl.ratings.enabled=true

    dl.related.assets.enabled=true

    dl.subfolders.visible=true

    dl.tabs.visible=false

##
## ドキュメントライブラリ サービス
##

    #
    # Eメール通知設定を構成します。
    #
    # Env: LIFERAY_DL_EMAIL_FROM_ADDRESS
    # Env: LIFERAY_DL_EMAIL_FROM_NAME
    #
    dl.email.from.name=
    dl.email.from.address=

    dl.email.file.entry.added.enabled=true
    dl.email.file.entry.added.subject=${resource:com/liferay/portlet/documentlibrary/dependencies/email_file_entry_added_subject.tmpl}
    dl.email.file.entry.added.body=${resource:com/liferay/portlet/documentlibrary/dependencies/email_file_entry_added_body.tmpl}

    dl.email.file.entry.updated.enabled=true
    dl.email.file.entry.updated.subject=${resource:com/liferay/portlet/documentlibrary/dependencies/email_file_entry_updated_subject.tmpl}
    dl.email.file.entry.updated.body=${resource:com/liferay/portlet/documentlibrary/dependencies/email_file_entry_updated_body.tmpl}

    #
    # ファイルがストアに送信されるときにウイルス対策チェックを実行できるようにするには、このプロパティをtrueに設定します。 この値をtrueに設定すると、ウイルスファイルがストアに侵入することを防ぎますが、ファイルの検疫は許可されません。
    #
    # Env: LIFERAY_DL_STORE_ANTIVIRUS_ENABLED
    #
    dl.store.antivirus.enabled=false

    #
    # 次を実行するクラス名を設定してください。 com.liferay.document.library.kernel.antivirus.AntivirusScanner。ドキュメントライブラリサーバーは、これを使用してドキュメントのウイルススキャンを行います。
    #
    # Env: LIFERAY_DL_STORE_ANTIVIRUS_IMPL
    #
    dl.store.antivirus.impl=com.liferay.portlet.documentlibrary.antivirus.DummyAntivirusScannerImpl
    #dl.store.antivirus.impl=com.liferay.portlet.documentlibrary.antivirus.ClamAntivirusScannerImpl

    #
    # These properties define the replacement strings for certain characters
    # to get safe file names. They are used in com.liferay.portal.util.FileImpl
    # See LPS-69122 for more information.
    #
    # You should not modify these properties unless you are completely certain
    # that no file has been stored using previous values.
    #
    # Env: LIFERAY_DL_STORE_FILE_IMPL_SAFE_FILE_NAME__NUMBER2__AMPERSAND
    # Env: LIFERAY_DL_STORE_FILE_IMPL_SAFE_FILE_NAME__NUMBER2__CLOSE_PARENTHESIS
    # Env: LIFERAY_DL_STORE_FILE_IMPL_SAFE_FILE_NAME__NUMBER2__OPEN_PARENTHESIS
    # Env: LIFERAY_DL_STORE_FILE_IMPL_SAFE_FILE_NAME__NUMBER2__SEMICOLON
    #
    dl.store.file.impl.safe.file.name.2.ampersand=_AMP_
    dl.store.file.impl.safe.file.name.2.close.parenthesis=_CP_
    dl.store.file.impl.safe.file.name.2.open.parenthesis=_OP_
    dl.store.file.impl.safe.file.name.2.semicolon=_SEM_

    #
    # 次を実行するクラス名を設定してください。 com.liferay.document.library.kernel.store.Store。ドキュメントライブラリサーバーはこれを使用してドキュメントを保持します。
    #
    # Env: LIFERAY_DL_STORE_IMPL
    #
    #dl.store.impl=com.liferay.portal.store.db.DBStore
    #dl.store.impl=com.liferay.portal.store.file.system.AdvancedFileSystemStore
    dl.store.impl=com.liferay.portal.store.file.system.FileSystemStore
    #dl.store.impl=com.liferay.portal.store.s3.S3Store

    #
    # ドキュメントの最大ファイルサイズと有効なファイル拡張子を設定します。 最大ファイルサイズを0にすると、ファイルサイズは無制限になります。しかしながら、許可された最大ファイルサイズは、プロパティ "com.liferay.portal.upload.UploadServletRequestImpl.max.size" に設定されています。
    #
    # Env: LIFERAY_DL_FILE_MAX_SIZE
    #
    dl.file.max.size=0
    #dl.file.max.size=307200
    #dl.file.max.size=1024000
    #dl.file.max.size=3072000

    #
    # 「*」のファイル拡張子を使用すると、すべてのファイル拡張子が許可されます。
    #
    # Env: LIFERAY_DL_FILE_EXTENSIONS
    #
    dl.file.extensions=*
    #dl.file.extensions=.bmp,.css,.doc,.docx,.dot,.gif,.gz,.htm,.html,.jpg,.js,.lar,.odb,.odf,.odg,.odp,.ods,.odt,.pdf,.png,.ppt,.pptx,.rtf,.swf,.sxc,.sxi,.sxw,.tar,.tiff,.tgz,.txt,.vsd,.xls,.xlsx,.xml,.zip,.jrxml

    #
    # これをfalseに設定すると、ユーザーは最初にアップロードされたファイルとは異なる拡張子を持つファイルをアップロードしてファイルエントリを更新できます。 これをtrueに設定した場合、OSXとの互換性が損なわれるという問題が知られています。 詳細については、LPS-10770を参照してください。
    #
    # Env: LIFERAY_DL_FILE_EXTENSIONS_STRICT_CHECK
    #
    dl.file.extensions.strict.check=false

    #
    # ディレクトリ名とファイル名に許可されていないキャラクター。
    #
    # Env: LIFERAY_DL_CHAR_BLACKLIST
    #
    dl.char.blacklist=\\\\,//,:,*,?,\",<,>,|,../,/..

    #
    # ディレクトリ名またはファイル名の最後のキャラクターとして許可されていないキャラクター。
    #
    # Env: LIFERAY_DL_CHAR_LAST_BLACKLIST
    #
    dl.char.last.blacklist=\\u0020,.

    #
    # 拡張子に関係なくブラックリストに登録されるディレクトリ名とファイル名。
    #
    # Env: LIFERAY_DL_NAME_BLACKLIST
    #
    dl.name.blacklist=con,prn,aux,nul,com1,com2,com3,com4,com5,com6,com7,com8,com9,lpt1,lpt2,lpt3,lpt4,lpt5,lpt6,lpt7,lpt8,lpt9

    #
    # テーマのファイルシステムフォルダにイメージを追加することにより、一般的なサムネイルのPNGをマップできます。 例えば、ドキュメントの一般的なサムネイルは、/_unstyled/images/file_system/large/document.pngにあります。
    #
    # Env: LIFERAY_DL_FILE_GENERIC_EXTENSIONS_OPENBRACKET_COMPRESSED_CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_GENERIC_EXTENSIONS_OPENBRACKET_DOCUMENT_CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_GENERIC_EXTENSIONS_OPENBRACKET_FLASH_CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_GENERIC_EXTENSIONS_OPENBRACKET_IMAGE_CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_GENERIC_EXTENSIONS_OPENBRACKET_MUSIC_CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_GENERIC_EXTENSIONS_OPENBRACKET_PDF_CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_GENERIC_EXTENSIONS_OPENBRACKET_PRESENTATION_CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_GENERIC_EXTENSIONS_OPENBRACKET_SPREADSHEET_CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_GENERIC_EXTENSIONS_OPENBRACKET_VIDEO_CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_GENERIC_NAMES
    #
    dl.file.generic.names=compressed,document,flash,image,music,pdf,presentation,spreadsheet,video
    dl.file.generic.extensions[compressed]=lar,rar,zip
    dl.file.generic.extensions[document]=doc,docx,pages,rtf,odt
    dl.file.generic.extensions[flash]=flv,swf
    dl.file.generic.extensions[image]=bmp,gif,jpeg,jpg,odg,png,svg
    dl.file.generic.extensions[music]=acc,mid,mp3,oga,ogg,wav,wma
    dl.file.generic.extensions[pdf]=pdf
    dl.file.generic.extensions[presentation]=key,keynote,odp,pps,ppt,pptx
    dl.file.generic.extensions[spreadsheet]=csv,numbers,ods,xls,xlsx
    dl.file.generic.extensions[video]=avi,m4v,mov,mp4,mpg,ogv,qt,rm,wmv

    #
    # ファイルのインデックス可能なコンテンツの最大サイズを設定します。このプロパティより大きいファイルは、このプロパティのサイズだけのインデックスが作成されます。 -1の値は、ファイルの全コンテンツのインデックスが作成されることを示します。 0の値は、ファイルのコンテンツのインデックスが作成されないことを示します。
    #
    # Env: LIFERAY_DL_FILE_INDEXING_MAX_SIZE
    #
    dl.file.indexing.max.size=1048576

    #
    # ファイルのコンテンツにインデックスを付けるときに無視されるファイル拡張子を設定します。 これらの拡張子を持つファイルのコンテンツは、インデックスに登録されず、メタデータのみがインデックスに登録されます。
    #
    # Env: LIFERAY_DL_FILE_INDEXING_IGNORE_EXTENSIONS
    #
    dl.file.indexing.ignore.extensions=.bmp,.gif,.jpeg,.jpg,.lar,.odg,.png,.svg
    #dl.file.indexing.ignore.extensions=.pdf,.ppt

    #
    # Set the number of file entries that will be indexed in every iteration
    # when indexing file entries.
    #
    # Env: LIFERAY_DL_FILE_INDEXING_INTERVAL
    #
    dl.file.indexing.interval=500

    #
    # テーマのイメージディスプレイとドキュメントライブラリフォルダにイメージを追加することにより、拡張子のGIFをマップできます。 「*」のワイルドカード拡張子は無視されます。 例えば、DOC拡張子のデフォルトイメージは次の場所にあります： /_unstyled/images/file_system/small/doc.gif。
    #
    # Env: LIFERAY_DL_FILE_ICONS
    #
    dl.file.icons=.bmp,.css,.doc,.docx,.dot,.gif,.gz,.htm,.html,.jpeg,.jpg,.js,.lar,.odb,.odf,.odg,.odp,.ods,.odt,.pdf,.png,.ppt,.pptx,.rtf,.swf,.sxc,.sxi,.sxw,.tar,.tiff,.tgz,.txt,.vsd,.xls,.xlsx,.xml,.zip,.jrxml

    #
    # これをtrueに設定すると、フォルダが空であるかどうかをチェックし、空のアイコンまたは完全なアイコンを表示します。 falseに設定するとチェックが無効になり、空のアイコンが常に表示されてパフォーマンスが向上します。
    #
    # Env: LIFERAY_DL_FOLDER_ICON_CHECK_COUNT
    #
    dl.folder.icon.check.count=true

    #
    # diffツールで比較可能なファイル拡張子を設定します。OpenOfficeが有効で、ファイルがテキストに変換可能な場合にのみ、ここにリストされているバイナリファイルは比較可能です。
    #
    # Env: LIFERAY_DL_COMPARABLE_FILE_EXTENSIONS
    #
    dl.comparable.file.extensions=.css,.doc,.docx,.js,.htm,.html,.odt,.rtf,.sxw,.txt,.xml

    #
    # ドキュメントライブラリファイルのコメントを有効にするには、これをtrueに設定します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_COMMENTS_ENABLED
    #
    dl.file.entry.comments.enabled=true

    #
    # ドキュメントライブラリファイルの変換を有効にするには、これをtrueに設定します。
    #
    # OpenOfficeも有効にされていない場合を除き、このプロパティは使用されません。プロパティ "openoffice.server.enabled"を参照してください。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_CONVERSIONS_ENABLED
    #
    dl.file.entry.conversions.enabled=true

    #
    # ドキュメントライブラリファイルのドラフトを有効にするには、これをtrueに設定します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_DRAFTS_ENABLED
    #
    dl.file.entry.drafts.enabled=false

    #
    # タイムアウトした場合に自動的にチェックアウトをキャンセルするには、これを0に設定します。チェックアウトがタイムアウトするかどうかを自動的にチェックするには、これを1に設定します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_LOCK_POLICY
    #
    dl.file.entry.lock.policy=0

    #
    # これをtrueに設定すると、「MS Officeで開く」の機能を使用するときに、ユーザーがドキュメントライブラリのユーザーインターフェイスを介してチェックを実行するよう強制されます。 これをfalseに設定すると、ユーザーは適切なMS Officeアプリケーションを閉じるときに自動的にファイルをチェックできるようになります。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_OPEN_IN_MS_OFFICE_MANUAL_CHECK_IN_REQUIRED
    #
    dl.file.entry.open.in.ms.office.manual.check.in.required=false

    #
    # 次を実行するクラス名をコンマ区切りで入力してください。 com.liferay.document.library.kernel.util.DLProcessor。これらのクラスは、ドキュメントライブラリファイルの非同期処理を開始します。 com.liferay.document.library.kernel.util.PDFProcessorはすべてのPDFファイルを処理し、OpenOfficeが有効な場合はすべての形式をPDFに変換できます。
    #
    # ImageMagickが有効になっている場合を除き、イメージ生成ではデフォルトでPDFBoxが使用されます。 PDFBoxはイメージ生成の精度が低く、特定のフォントで問題があります。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PROCESSORS
    #
    dl.file.entry.processors=com.liferay.portlet.documentlibrary.util.AudioProcessorImpl,com.liferay.portlet.documentlibrary.util.ImageProcessorImpl,com.liferay.portlet.documentlibrary.util.PDFProcessorImpl,com.liferay.portlet.documentlibrary.util.RawMetadataProcessorImpl,com.liferay.portlet.documentlibrary.util.VideoProcessorImpl

    #
    # プレビューおよびサムネイル生成の最大ファイルサイズを設定します。このプロパティで指定された値を超えるファイルは、プレビューを生成するプロセッサを実行しません。 -1の値は、すべてのファイルが処理されることを示します。 値0は、ファイルが処理されないことを示します。 デフォルトの最大サイズは100メガバイトです。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEWABLE_PROCESSOR_MAX_SIZE
    #
    dl.file.entry.previewable.processor.max.size=104857600

    #
    # 生のメタデータ抽出から除外するMIMEタイプのリストをコンマ区切りで入力します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_RAW_METADATA_PROCESSOR_EXCLUDED_MIME_TYPES
    #
    dl.file.entry.raw.metadata.processor.excluded.mime.types=application/zip

    #
    # これを0に設定すると、ファイルエントリに対するすべての更新が強制され、新しいバージョンになります。 変更が検出されなかった場合、または唯一の変更がゼロバイトのバイナリからゼロでないバイナリへの変更である場合にバージョン番号を保持するには、これを1に設定します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_VERSION_POLICY
    #
    dl.file.entry.version.policy=1

    #
    # CheckFileRankMessageListenerを実行してファイル別にユーザーごとに保持するファイルランクの上限を上回るファイルランクをチェックし、削除する間隔を分単位で設定します。
    #
    # Env: LIFERAY_DL_FILE_RANK_CHECK_INTERVAL
    #
    dl.file.rank.check.interval=15

    #
    # ドキュメントライブラリファイルのファイルランクを有効にするには、これをtrueに設定します。
    #
    # Env: LIFERAY_DL_FILE_RANK_ENABLED
    #
    dl.file.rank.enabled=true

    #
    # ファイル別、ユーザー毎に保持するファイルランクの最大数を設定します。
    #
    # Env: LIFERAY_DL_FILE_RANK_MAX_SIZE
    #
    dl.file.rank.max.size=5

    #
    # ドキュメントライブラリファイルのプレビューおよびサムネイル生成に関連する値を設定します。 "dl.file.entry.processors"で有効になっているクラスは、これらのパラメータを利用して必要なファイルを生成します。
    #
    # 一部のパラメータは、すべてのプロセッサに共通して適用されますが（例、dl.file.entry.thumbnail.max.height）、指定された特定の種類の生成に固有のパラメータもあります（例、dl.file.entry.preview.document.depth）。
    #
    # プロパティ "dl.file.entry.preview.video.height"またはプロパティ "dl.file.entry.preview.video.width"が0に設定されている場合、ビデオファイルのそれぞれの高さと幅が使用されます。
    #
    # プロパティ "imagemagick.enabled"、 "openoffice.server.enabled"、および "xuggler.enabled"を参照してください。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_DOCUMENT_DEPTH
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_DOCUMENT_DPI
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_DOCUMENT_MAX_HEIGHT
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_DOCUMENT_MAX_WIDTH
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_ENABLED
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_VIDEO_HEIGHT
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_VIDEO_WIDTH
    # Env: LIFERAY_DL_FILE_ENTRY_THUMBNAIL_CUSTOM_NUMBER1__MAX_HEIGHT
    # Env: LIFERAY_DL_FILE_ENTRY_THUMBNAIL_CUSTOM_NUMBER1__MAX_WIDTH
    # Env: LIFERAY_DL_FILE_ENTRY_THUMBNAIL_CUSTOM_NUMBER2__MAX_HEIGHT
    # Env: LIFERAY_DL_FILE_ENTRY_THUMBNAIL_CUSTOM_NUMBER2__MAX_WIDTH
    # Env: LIFERAY_DL_FILE_ENTRY_THUMBNAIL_ENABLED
    # Env: LIFERAY_DL_FILE_ENTRY_THUMBNAIL_MAX_HEIGHT
    # Env: LIFERAY_DL_FILE_ENTRY_THUMBNAIL_MAX_WIDTH
    # Env: LIFERAY_DL_FILE_ENTRY_THUMBNAIL_VIDEO_FRAME_PERCENTAGE
    #
    dl.file.entry.preview.enabled=true
    dl.file.entry.preview.document.depth=8
    dl.file.entry.preview.document.dpi=300
    dl.file.entry.preview.document.max.height=0
    dl.file.entry.preview.document.max.width=1000
    dl.file.entry.preview.video.height=360
    dl.file.entry.preview.video.width=640
    dl.file.entry.thumbnail.enabled=true
    dl.file.entry.thumbnail.max.height=300
    dl.file.entry.thumbnail.max.width=300
    #dl.file.entry.thumbnail.custom1.max.height=100
    #dl.file.entry.thumbnail.custom1.max.width=100
    #dl.file.entry.thumbnail.custom2.max.height=0
    #dl.file.entry.thumbnail.custom2.max.width=0
    dl.file.entry.thumbnail.video.frame.percentage=25

    #
    # プレビューファイル用のオーディオコンテナのリストをコンマ区切りで入力します。サポートされているフォーマットはMP3とOGGです。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_AUDIO_CONTAINERS
    #
    dl.file.entry.preview.audio.containers=mp3,ogg
    #dl.file.entry.preview.audio.containers=mp3
    #dl.file.entry.preview.audio.containers=ogg

    #
    # 各オーディオコンテナフォーマットのビットレートとサンプルレートの値を設定します。
    #
    # ビットレートは500000に制限されます。0より小さい値は、デフォルトで64000に設定されます。
    #
    # サンプルレートは192000に制限されます。0より小さい値は、デフォルトで44100に設定されます。
    #
    # 一部のオーディオコンテナ フォーマットでは、上限値がサポートされていない場合があります。 指定されたフォーマットで許可されている値を超えないように注意してください。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_AUDIO_BIT_RATE_OPENBRACKET_MP_NUMBER3__CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_AUDIO_SAMPLE_RATE_OPENBRACKET_MP_NUMBER3__CLOSEBRACKET_
    #
    dl.file.entry.preview.audio.bit.rate[mp3]=64000
    dl.file.entry.preview.audio.sample.rate[mp3]=44100

    dl.file.entry.preview.audio.bit.rate[ogg]=64000
    dl.file.entry.preview.audio.sample.rate[ogg]=44100

    #
    # オーディオプレビューの生成を開始するオーディオMIMEタイプのリストをコンマ区切りで入力します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_AUDIO_MIME_TYPES
    #
    dl.file.entry.preview.audio.mime.types=audio/basic,audio/mid,audio/midi,audio/mod,audio/mp3,audio/mp4,audio/mpeg,audio/mpeg3,audio/ogg,audio/vorbis,audio/wav,audio/x-m4a,audio/x-mid,audio/x-midi,audio/x-mod,audio/x-mpeg,audio/x-pn-realaudio,audio/x-realaudio,audio/x-wav

    #
    # これをtrueに設定すると、6.1へのアップグレード時にドキュメントプレビューが自動的に生成されます。 これをtrueに設定すると、アップグレードに時間がかかることがあります。 falseに設定すると、エンドユーザーが最初にアクセスしたときにドキュメントのプレビューが生成されます。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_AUTO_CREATE_ON_UPGRADE
    #
    dl.file.entry.preview.auto.create.on.upgrade=false

    #
    # プレビュー生成で別のJavaプロセスを使用する場合は、これをtrueに設定します。 これにより、オペレーティングシステムの余分なリソースが活用され、ポータルの安定性が向上します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_FORK_PROCESS_ENABLED
    #
    dl.file.entry.preview.fork.process.enabled=true

    #
    # Set a comma delimited list of passwords that will be used by PDFBox to
    # generate previews of protected documents. See LPS-68329 for more
    # information.
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_GENERATION_DECRYPT_PASSWORDS_PDFBOX
    #
    dl.file.entry.preview.generation.decrypt.passwords.pdfbox=

    #
    # ドキュメントのプレビューの生成がタイムアウトになるまでの間隔を秒単位で設定し、Ghostscriptで処理されるとキャンセルされます。 このプロパティは、プロパティ "dl.file.entry.preview.fork.process.enabled"がtrueに設定されている場合にのみ適用されます。 プロパティ "imagemagick.enabled"を設定します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_GENERATION_TIMEOUT_GHOSTSCRIPT
    #
    dl.file.entry.preview.generation.timeout.ghostscript=1200

    #
    # ドキュメントのプレビューの生成がタイムアウトになるまでの間隔を秒単位で設定し、PDFBoxで処理されるとキャンセルされます。 このプロパティは、プロパティ "dl.file.entry.preview.fork.process.enabled"がtrueに設定されている場合にのみ適用されます。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_GENERATION_TIMEOUT_PDFBOX
    #
    dl.file.entry.preview.generation.timeout.pdfbox=1200

    #
    # イメージプレビューの生成を開始するビデオMIMEタイプのリストをコンマ区切りで入力します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_IMAGE_MIME_TYPES
    #
    dl.file.entry.preview.image.mime.types=image/bmp,image/gif,image/jpeg,image/pjpeg,image/png,image/tiff,image/x-citrix-jpeg,image/x-citrix-png,image/x-ms-bmp,image/x-png,image/x-tiff

    #
    # プレビューファイル用のビデオコンテナのリストをコンマ区切りで入力します。サポートされているフォーマットは、MP4とOGVのみです。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_VIDEO_CONTAINERS
    #
    dl.file.entry.preview.video.containers=mp4,ogv
    #dl.file.entry.preview.video.containers=mp4
    #dl.file.entry.preview.video.containers=ogv

    #
    # 各プレビュービデオコンテナ フォーマットのビットレートとフレームレートの値を設定します。
    #
    # ビットレートは1200000に制限されます。0より小さい値は、デフォルトで250000に設定されます。
    #
    # フレームレートは分子を分母で割った値で算定されえます。いずれかの値が0より小さい場合は、入力ビデオのフレームレートが使用されます。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_VIDEO_BIT_RATE_OPENBRACKET_MP_NUMBER4__CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_VIDEO_FRAME_RATE_DENOMINATOR_OPENBRACKET_MP_NUMBER4__CLOSEBRACKET_
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_VIDEO_FRAME_RATE_NUMERATOR_OPENBRACKET_MP_NUMBER4__CLOSEBRACKET_
    #
    dl.file.entry.preview.video.bit.rate[mp4]=250000
    dl.file.entry.preview.video.frame.rate.denominator[mp4]=1
    dl.file.entry.preview.video.frame.rate.numerator[mp4]=30

    dl.file.entry.preview.video.bit.rate[ogv]=250000
    dl.file.entry.preview.video.frame.rate.denominator[ogv]=-1
    dl.file.entry.preview.video.frame.rate.numerator[ogv]=-1

    #
    # ビデオプレビューの生成を開始するビデオMIMEタイプのリストをコンマ区切りで入力します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_PREVIEW_VIDEO_MIME_TYPES
    #
    dl.file.entry.preview.video.mime.types=video/avi,video/mp4,video/mpeg,video/ogg,video/quicktime,video/webm,video/x-flv,video/x-m4v,video/x-ms-wmv,video/x-msvideo

    #
    # レガシーURL経由でアクセスした場合、イメージギャラリーサムネイルを生成するには、これをtrueに設定します。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_IG_THUMBNAIL_GENERATION
    #
    dl.file.entry.ig.thumbnail.generation=false

    #
    # イメージギャラリーからドキュメントライブラリにイメージを移行する場合（Liferay 6.1より前のバージョンからアップグレードする場合にのみ該当）、イメージは「イメージギャラリーイメージ」タイプのドキュメントとして移行されます。 イメージギャラリーのイメージを表示するように設定されたAsset Publisherは、移行後にこのドキュメントタイプを表示します。 イメージギャラリーのイメージを基本ドキュメントとして移行するには、このプロパティをfalseに設定します。 このプロパティは、 プロパティ "application.startup.events"にデフォルトの com.liferay.portal.events.AddDefaultDataActionが含まれていないと動作しません。
    #
    # Env: LIFERAY_DL_FILE_ENTRY_TYPE_IG_IMAGE_AUTO_CREATE_ON_UPGRADE
    #
    dl.file.entry.type.ig.image.auto.create.on.upgrade=true

    #
    # デフォルトでドキュメントライブラリをライブへと公開する必要がある場合、これをtrueに設定します。
    #
    # Env: LIFERAY_DL_PUBLISH_TO_LIVE_BY_DEFAULT
    #
    dl.publish.to.live.by.default=true

    #
    # com.liferay.portal.kernel.repository.BaseRepositoryImplを拡張するサードパーティのリポジトリのクラス名リストをコンマ区切りで入力します。
    #
    # Env: LIFERAY_DL_REPOSITORY_IMPL
    #
    dl.repository.impl=

    #
    # ゲストユーザがCMIS、Documentum、Sharepointなどの外部リポジトリにアクセスするときに使用する認証情報を設定します。
    #
    # Env: LIFERAY_DL_REPOSITORY_GUEST_PASSWORD
    # Env: LIFERAY_DL_REPOSITORY_GUEST_USERNAME
    #
    dl.repository.guest.username=Administrator
    dl.repository.guest.password=password

    #
    # デフォルトの表示ビューを設定します。
    #
    # Env: LIFERAY_DL_DEFAULT_DISPLAY_VIEW
    #
    dl.default.display.view=icon

    #
    # 非表示のマウントフォルダを表示するには、これをtrueに設定します
    #
    # Env: LIFERAY_DL_SHOW_HIDDEN_MOUNT_FOLDERS
    #
    dl.show.hidden.mount.folders=false

    #
    # WebDAV URLを生成するときにファイルエントリのタイトルを置換する際に使用する文字を設定します。 既存のファイルには置換文字が含まれ、DLServiceVerifyProcessが実行されて名前が変更されるまでWebDAVからアクセスできないため、すでに作成されたファイルエントリがある既存のインストールでは変更しないでください。
    #
    # Env: LIFERAY_DL_WEBDAV_SUBSTITUTION_CHAR
    #
    dl.webdav.substitution.char=^

##
## IFrameポートレット
##

    #
    # ユーザーが関連付けられている必要があるロール名を指定して、ユーザーのプライベートページ以外のポータルページで@password@トークンを使用するようにIFrameポートレットを設定します。 このトークンは、フレーム化されたサイトに自動的にログインするために、このポートレットにアクセスするユーザーのパスワードをポストする際に使用されます。
    #
    # 高度なセキュリティ環境では、パスワードの窃盗を行わないと信頼されているユーザーだけが、指定されたロールに関連付けられている必要があります。 詳細については、LPS-5272を参照してください。
    #
    # Env: LIFERAY_IFRAME_PASSWORD_TOKEN_ROLE
    #
    iframe.password.token.role=

##
## ログイン・ポートレット
##

    #
    # Eメール通知設定を構成します。
    #
    # Env: LIFERAY_LOGIN_EMAIL_FROM_ADDRESS
    # Env: LIFERAY_LOGIN_EMAIL_FROM_NAME
    #
    login.email.from.name=
    login.email.from.address=

    #
    # アカウント作成時にユーザーがパスワードを選択できるようにするには、これをtrueに設定します。
    #
    # Env: LIFERAY_LOGIN_CREATE_ACCOUNT_ALLOW_CUSTOM_PASSWORD
    #
    login.create.account.allow.custom.password=false

    #
    # これをtrueに設定すると、ログインポップアップダイアログが無効になります。この設定は、別のページにリダイレクトするための「Sign In」リンクが必要なカスタムログイン ポートレットがある場合にのみ、trueに設定するようにしてください。
    #
    # Env: LIFERAY_LOGIN_DIALOG_DISABLED
    #
    login.dialog.disabled=false

    #
    # ログインフォームのナビゲーションに含まれるセクションのリストを入力します。
    #
    # Env: LIFERAY_LOGIN_FORM_NAVIGATION_POST
    # Env: LIFERAY_LOGIN_FORM_NAVIGATION_PRE
    #
    login.form.navigation.pre=
    login.form.navigation.post=

    #
    # これをtrueに設定すると、パスワード忘れ機能を使用してポータルのユーザーを列挙する試みを防ぐことができます。 この機能は、ユーザーの存在を示すエラーを表示しなくなります。
    #
    # Env: LIFERAY_LOGIN_SECURE_FORGOT_PASSWORD
    #
    login.secure.forgot.password=false

##
## メニュータグ ライブラリ
##

    #
    # MenuタグライブラリまたはNav Itemタグを使用するときに表示する項目の最大数を設定します。 アイテムの数が許可されている最大数を超えている場合、メニューにはオートコンプリート検索ボックスが表示され、アイテムが表示されます。
    #
    # Env: LIFERAY_MENU_MAX_DISPLAY_ITEMS
    #
    menu.max.display.items=15

##
## メッセージボード ポートレット
##

##
## メッセージボード サービス
##

    #
    # Eメール通知設定を構成します。
    #
    # Env: LIFERAY_MESSAGE_BOARDS_EMAIL_BULK
    # Env: LIFERAY_MESSAGE_BOARDS_EMAIL_FROM_ADDRESS
    # Env: LIFERAY_MESSAGE_BOARDS_EMAIL_FROM_NAME
    # Env: LIFERAY_MESSAGE_BOARDS_EMAIL_HTML_FORMAT
    #
    message.boards.email.from.name=[$MESSAGE_USER_NAME$]
    message.boards.email.from.address=
    message.boards.email.bulk=true
    message.boards.email.html.format=true

    message.boards.email.message.added.enabled=true
    message.boards.email.message.added.subject=${resource:com/liferay/portlet/messageboards/dependencies/email_message_added_subject.tmpl}
    message.boards.email.message.added.body=${resource:com/liferay/portlet/messageboards/dependencies/email_message_added_body.tmpl}

    message.boards.email.message.updated.enabled=true
    message.boards.email.message.updated.subject=${resource:com/liferay/portlet/messageboards/dependencies/email_message_updated_subject.tmpl}
    message.boards.email.message.updated.body=${resource:com/liferay/portlet/messageboards/dependencies/email_message_updated_body.tmpl}

    #
    # デフォルトで使用されるカテゴリ表示スタイルの名称を設定します。
    #
    # Env: LIFERAY_MESSAGE_BOARDS_CATEGORY_DISPLAY_STYLES_DEFAULT
    #
    message.boards.category.display.styles.default=default

    #
    # カテゴリを編集するときにユーザーに表示されるオプションを指定します。
    #
    # Env: LIFERAY_MESSAGE_BOARDS_CATEGORY_DISPLAY_STYLES
    #
    message.boards.category.display.styles=default,question

    message.boards.flags.enabled=true

    #
    # サポートされているメッセージボードの形式とデフォルトのメッセージボードの形式のリストを設定します。
    #
    # Env: LIFERAY_MESSAGE_BOARDS_MESSAGE_FORMATS
    # Env: LIFERAY_MESSAGE_BOARDS_MESSAGE_FORMATS_DEFAULT
    #
    message.boards.message.formats=bbcode,html
    message.boards.message.formats.default=bbcode

    #
    # これをtrueに設定すると、匿名の投稿が許可されます。
    #
    # Env: LIFERAY_MESSAGE_BOARDS_ANONYMOUS_POSTING_ENABLED
    #
    message.boards.anonymous.posting.enabled=true

    #
    # ユーザーが参加するスレッドにデフォルトでサブスクライブされている場合は、これをtrueに設定します。
    #
    # Env: LIFERAY_MESSAGE_BOARDS_SUBSCRIBE_BY_DEFAULT
    #
    message.boards.subscribe.by.default=true

    #
    # ユーザーに対するアクセス禁止を自動的に解除するまでの時間を日数で入力します。自動解除を無効にするには、このプロパティまたはプロパティ "message.boards.expire.ban.job.interval"を0に設定します。
    #
    # Env: LIFERAY_MESSAGE_BOARDS_EXPIRE_BAN_INTERVAL
    #
    message.boards.expire.ban.interval=10
    #message.boards.expire.ban.interval=0

    #
    # ピングバック機能を有効にするには、これをtrueに設定します。
    #
    # Env: LIFERAY_MESSAGE_BOARDS_PINGBACK_ENABLED
    #
    message.boards.pingback.enabled=true

    message.boards.ratings.enabled=true

    message.boards.recent.posts.date.offset=7

    message.boards.rss.abstract.length=200

    message.boards.rss.enabled=true

    message.boards.thread.priorities=\
        Urgent|icon-bolt|3.0,\
        Sticky|icon-pushpin|2.0,\
        Announcement|icon-comments|1.0

    message.boards.user.ranks=\
        #Moderator=organization:Message Boards Administrator,\
        #Moderator=organization-role:Message Boards Administrator,\
        #Moderator=regular-role:Message Boards Administrator,\
        #Moderator=site-role:Message Boards Administrator,\
        #Moderator=user-group:Message Boards Administrator,\
        Youngling=0,\
        Padawan=25,\
        Jedi Knight=100,\
        Jedi Master=250,\
        Jedi Council Member=500,\
        Yoda=1000

    #
    # メッセージボードがデフォルトでライブに公開されるようにするには、これをtrueに設定します。
    #
    # Env: LIFERAY_MESSAGE_BOARDS_PUBLISH_TO_LIVE_BY_DEFAULT
    #
    message.boards.publish.to.live.by.default=false

    message.boards.thread.as.question.by.default=false

##
## マイプレイス・ポートレット
##

    #
    # マイプレイス ナビゲーションメニューの表示スタイルを設定します。
    #
    # Env: LIFERAY_MY_SITES_DISPLAY_STYLE
    #
    my.sites.display.style=simple
    #my.sites.display.style=classic

    #
    # これをtrueに設定すると、レイアウトのないユーザーの公開サイトが表示されます。
    #
    # Env: LIFERAY_MY_SITES_SHOW_USER_PUBLIC_SITES_WITH_NO_LAYOUTS
    #
    my.sites.show.user.public.sites.with.no.layouts=true

    #
    # これをtrueに設定すると、レイアウトのないユーザーのプライベートサイトが表示されます。
    #
    # Env: LIFERAY_MY_SITES_SHOW_USER_PRIVATE_SITES_WITH_NO_LAYOUTS
    #
    my.sites.show.user.private.sites.with.no.layouts=true

    #
    # これをtrueに設定すると、レイアウトのない公開サイトが表示されます。
    #
    # Env: LIFERAY_MY_SITES_SHOW_PUBLIC_SITES_WITH_NO_LAYOUTS
    #
    my.sites.show.public.sites.with.no.layouts=true

    #
    # これをtrueに設定すると、レイアウトのないプライベートサイトが表示されます。
    #
    # Env: LIFERAY_MY_SITES_SHOW_PRIVATE_SITES_WITH_NO_LAYOUTS
    #
    my.sites.show.private.sites.with.no.layouts=true

    #
    # マイサイトのナビゲーションメニューに表示されるエレメントの最大数を設定します。 例えば、最大数を10に設定すると、最大で10個のサイトが表示されます。
    #
    # Env: LIFERAY_MY_SITES_MAX_ELEMENTS
    #
    my.sites.max.elements=10

##
## ポートレット CSS ポートレット
##

    #
    # ルックアンドフィールアイコンへのアクセスを有効にするには、これをtrueに設定します。これをfalseに設定すると、実行時にポートレットCSSを変更する機能が無効になり、パフォーマンスが向上します。
    #
    # Env: LIFERAY_PORTLET_CSS_ENABLED
    #
    portlet.css.enabled=true

##
## レーティングタグ ライブラリ
##

    #
    # デフォルトでレーティングタグ ライブラリで使用される星の数を設定します。
    #
    # Env: LIFERAY_RATINGS_DEFAULT_NUMBER_OF_STARS
    #
    ratings.default.number.of.stars=5

    #
    # 7.0より前のバージョンでは、データベースに保存されるレーティングは正規化されませんでした。 7.0以降、すべての値は0と1の間で正規化されます。
    #
    # プロパティ "ratings.upgrade.stars.normalization.factor"と "ratings.upgrade.thumbs.class.names"は、アップグレードプロセスで、正規化されていない値を正規化するために使用されます。
    #
    # このプロパティを設定すると、星をレーティングメカニズムとして使用する異なるクラス名のアップグレードプロセスにおいて使用される正規化係数が指定されます。
    #
    # 正規化係数は、クラス名の星の最大数です。
    #
    # Env: LIFERAY_RATINGS_UPGRADE_STARS_NORMALIZATION_FACTOR_OPENBRACKET_COM_LIFERAY_PORTLET_BLOGS_MODEL__UPPERCASEB_LOGS_UPPERCASEE_NTRY_CLOSEBRACKET_
    # Env: LIFERAY_RATINGS_UPGRADE_STARS_NORMALIZATION_FACTOR_OPENBRACKET_DEFAULT_CLOSEBRACKET_
    #
    ratings.upgrade.stars.normalization.factor[default]=5
    #ratings.upgrade.stars.normalization.factor[com.liferay.portlet.blogs.model.BlogsEntry]=10

    #
    # このプロパティを設定すると、サムを評価として使用するクラス名を指定できます。プロパティ "ratings.upgrade.stars.normalization.factor" を参照してください。
    #
    # Env: LIFERAY_RATINGS_UPGRADE_THUMBS_CLASS_NAMES
    #
    ratings.upgrade.thumbs.class.names=com.liferay.message.boards.kernel.model.MBDiscussion,com.liferay.message.boards.kernel.model.MBMessage

##
## 最近のコンテンツのポートレット
##

    #
    # 「最近のコンテンツ」ポートレットに、タイプごとに表示するアイテムの最大数を構成します。
    #
    # Env: LIFERAY_RECENT_CONTENT_MAX_DISPLAY_ITEMS
    #
    recent.content.max.display.items=5

##
## マイサイト ディレクトリ
##

    #
    # マイサイトディレクトリのポートレットに表示される組織、ユーザーグループ、およびユーザーの選定から除外されるサイト名のリストをコンマ区切りで指定します。
    #
    # Env: LIFERAY_MY_SITES_DIRECTORY_SITE_EXCLUDES
    #
    my.sites.directory.site.excludes=

##
## サイトアドミン ポートレット
##

    #
    # これをtrueに設定すると、サイトのメンバーはサイトアドミン ポートレットと、コントロールパネルのメンバーであるサイトを表示できます。 これをfalseに設定すると、アドミンのみがコントロールパネルでこのポートレットを見ることができるようになります。
    #
    # Env: LIFERAY_SITES_CONTROL_PANEL_MEMBERS_VISIBLE
    #
    sites.control.panel.members.visible=true

    #
    # これをtrueに設定すると、サイト管理者がサイトを親サイトのスコープから継承させることが許可されます。 このオプションは、サイトのサイト設定セクションで選択できます。 親サイトからコンテンツを継承するサイトは独自のコンテンツスコープを持たないため、サイトアドミン ポートレットにコンテンツカテゴリはありません。 falseに設定すると、コンテンツを継承するように設定されていないサイトではこのオプションが無効になります。
    #
    # Env: LIFERAY_SITES_SHOW_INHERIT_CONTENT_SCOPE_FROM_PARENT_SITE
    #
    sites.show.inherit.content.scope.from.parent.site=false

    #
    # 存在しないフレンドリーサイトURLをユーザーがリクエストした場合にはこのリソースへリダイレクトしてください。 空白にすると何も表示されません。
    #
    # ページに対する同様の設定は、 プロパティ "layout.friendly.url.page.not.found"で管理されます。
    #
    # Env: LIFERAY_SITES_FRIENDLY_URL_PAGE_NOT_FOUND
    #
    #sites.friendly.url.page.not.found=/html/portal/404.html

    #
    # すべてのサイトのサブサイトでコンテンツの共有を無効にするには、このプロパティを0に設定します。 このプロパティをデフォルトでは無効にし、サイト管理者がサイトごとに有効化できるようにするには、1に設定します。 このプロパティをデフォルトでは有効にし、サイト管理者がサイトごとに無効化できるようにするには、2に設定します。
    #
    # Env: LIFERAY_SITES_CONTENT_SHARING_WITH_CHILDREN_ENABLED
    #
    #sites.content.sharing.with.children.enabled==0
    #sites.content.sharing.with.children.enabled==1
    sites.content.sharing.with.children.enabled=2

    #
    # すべてのサイト管理者が、管理するサイト間でコンテンツを共有できるようにするには、このプロパティをtrueに設定します。
    #
    # Env: LIFERAY_SITES_CONTENT_SHARING_THROUGH_ADMINISTRATORS_ENABLED
    #
    sites.content.sharing.through.administrators.enabled=true

    #
    # Eメール通知設定を構成します。
    #
    # Env: LIFERAY_SITES_EMAIL_FROM_ADDRESS
    # Env: LIFERAY_SITES_EMAIL_FROM_NAME
    #
    sites.email.from.name=
    sites.email.from.address=

    sites.email.membership.reply.subject=com/liferay/portlet/sites/dependencies/email_membership_reply_subject.tmpl
    sites.email.membership.reply.body=com/liferay/portlet/sites/dependencies/email_membership_reply_body.tmpl

    sites.email.membership.request.subject=com/liferay/portlet/sites/dependencies/email_membership_request_subject.tmpl
    sites.email.membership.request.body=com/liferay/portlet/sites/dependencies/email_membership_request_body.tmpl

    #
    # デフォルトのページ変更頻度を設定します。この変更頻度の値は、ページを訪問するロボットによって使用されます。 可能な値は、 「常時」、「毎時」、「毎日」、「毎週」、「毎月」、「毎年」、または「なし」です。
    #
    # Env: LIFERAY_SITES_SITEMAP_DEFAULT_CHANGE_FREQUENCY
    #
    sites.sitemap.default.change.frequency=daily

    #
    # デフォルトのページ優先順位を設定します。この優先順位の値は、ページを訪問するロボットによって使用されます。 可能な値の範囲は、0.0から0.1までです。
    #
    # Env: LIFERAY_SITES_SITEMAP_DEFAULT_PRIORITY
    #
    sites.sitemap.default.priority=

##
## ゴミ
##

    #
    # このプロパティをfalseに設定すると、すべてのサイトのごみ箱が無効化されます。このプロパティをtrueに設定すると、サイト管理者はサイトごとにごみ箱を無効化することができます。
    #
    # Env: LIFERAY_TRASH_ENABLED
    #
    #trash.enabled=false
    trash.enabled=true

    #
    # ごみ箱で検索を実行する際に使用する結果の上限を設定します。
    #
    # Env: LIFERAY_TRASH_SEARCH_LIMIT
    #
    trash.search.limit=500

    #
    # CheckEntryMessageListenerを実行して、上限時間よりも長い期間ごみ箱に入っているエントリをチェックして削除する頻度を、分単位の間隔で設定します。
    #
    # Env: LIFERAY_TRASH_ENTRY_CHECK_INTERVAL
    #
    trash.entry.check.interval=60

    #
    # エントリがごみ箱に保存される上限時間（分単位）を設定します。 これらの設定は、各ポータルのポータル設定または各サイトのサイト設定で上書きされる場合があります。
    #
    # Env: LIFERAY_TRASH_ENTRIES_MAX_AGE
    #
    trash.entries.max.age=43200